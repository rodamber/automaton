[[33mWarning [0m] Parallelism is disabled.
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for isEmpty @29:26...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for isEmpty @29:26...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](set1, set2))' VC for unionSubset2 @189:19...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](set1, set2))' VC for unionSubset2 @189:19...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](set1, set2))' VC for unionSubset2 @189:50...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](set1, set2))' VC for unionSubset2 @189:50...
[[34m  Info  [0m]  - Checking cache: 'precond. (call unionSubset[T](set1, set2, ++[T](set1, s ...)' VC for unionSubset2 @190:21...
[[34m  Info  [0m] Cache hit: 'precond. (call unionSubset[T](set1, set2, ++[T](set1, s ...)' VC for unionSubset2 @190:21...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](set1, set2))' VC for unionSubset2 @190:45...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](set1, set2))' VC for unionSubset2 @190:45...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](set1, set2))' VC for unionSubset2 @190:73...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](set1, set2))' VC for unionSubset2 @190:73...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for unionSubset2 @187:64...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for unionSubset2 @187:64...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set1))' VC for sizeStrictSubsetOf @268:5...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set1))' VC for sizeStrictSubsetOf @268:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set2))' VC for sizeStrictSubsetOf @268:17...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set2))' VC for sizeStrictSubsetOf @268:17...
[[34m  Info  [0m]  - Checking cache: 'precond. (call sizeSubsetOf[T](set1, set2))' VC for sizeStrictSubsetOf @269:21...
[[34m  Info  [0m] Cache hit: 'precond. (call sizeSubsetOf[T](set1, set2))' VC for sizeStrictSubsetOf @269:21...
[[34m  Info  [0m]  - Checking cache: 'precond. (call sizeEq[T](set1, set2))' VC for sizeStrictSubsetOf @269:49...
[[34m  Info  [0m] Cache miss: 'precond. (call sizeEq[T](set1, set2))' VC for sizeStrictSubsetOf @269:49...
[[34m  Info  [0m]  - Now solving 'precond. (call sizeEq[T](set1, set2))' VC for sizeStrictSubsetOf @269:49...
[[34m  Info  [0m]  - Result for 'precond. (call sizeEq[T](set1, set2))' VC for sizeStrictSubsetOf @269:49:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for sizeStrictSubsetOf @266:70...
[[34m  Info  [0m] Cache miss: 'postcondition' VC for sizeStrictSubsetOf @266:70...
[[34m  Info  [0m]  - Now solving 'postcondition' VC for sizeStrictSubsetOf @266:70...
[[34m  Info  [0m]  - Result for 'postcondition' VC for sizeStrictSubsetOf @266:70:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set1))' VC for sizeEq @263:6...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set1))' VC for sizeEq @263:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set2))' VC for sizeEq @263:19...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set2))' VC for sizeEq @263:19...
[[34m  Info  [0m]  - Checking cache: 'precond. (call sizeSubsetOf[T](set1, set2))' VC for sizeEq @264:21...
[[34m  Info  [0m] Cache hit: 'precond. (call sizeSubsetOf[T](set1, set2))' VC for sizeEq @264:21...
[[34m  Info  [0m]  - Checking cache: 'precond. (call sizeSubsetOf[T](set2, set1))' VC for sizeEq @264:49...
[[34m  Info  [0m] Cache hit: 'precond. (call sizeSubsetOf[T](set2, set1))' VC for sizeEq @264:49...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for sizeEq @261:58...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for sizeEq @261:58...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set1))' VC for sizeSubsetOf @258:5...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set1))' VC for sizeSubsetOf @258:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set2))' VC for sizeSubsetOf @258:18...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set2))' VC for sizeSubsetOf @258:18...
[[34m  Info  [0m]  - Checking cache: 'precond. (call subSubSize[T](set2, set1))' VC for sizeSubsetOf @259:21...
[[34m  Info  [0m] Cache hit: 'precond. (call subSubSize[T](set2, set1))' VC for sizeSubsetOf @259:21...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for sizeSubsetOf @256:64...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for sizeSubsetOf @256:64...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](--[T](set1, set2)))' VC for subSubSize @240:6...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](--[T](set1, set2)))' VC for subSubSize @240:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, set2))' VC for subSubSize @240:6...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, set2))' VC for subSubSize @240:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set1))' VC for subSubSize @240:28...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set1))' VC for subSubSize @240:28...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set2))' VC for subSubSize @240:40...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set2))' VC for subSubSize @240:40...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, ys))' VC for subSubSize @245:17...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, ys))' VC for subSubSize @245:17...
[[34m  Info  [0m]  - Checking cache: 'precond. (call subSubContains[T](set1, ys, y))' VC for subSubSize @245:49...
[[34m  Info  [0m] Cache hit: 'precond. (call subSubContains[T](set1, ys, y))' VC for subSubSize @245:49...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[BigInt, BigInt](|[BigInt, BigInt, BigI ...)' VC for subSubSize @247:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[BigInt, BigInt](|[BigInt, BigInt, BigI ...)' VC for subSubSize @247:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[BigInt, BigInt, BigInt](|[BigInt, BigI ...)' VC for subSubSize @247:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[BigInt, BigInt, BigInt](|[BigInt, BigI ...)' VC for subSubSize @247:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[BigInt, BigInt, BigInt](|[BigInt, BigI ...)' VC for subSubSize @247:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[BigInt, BigInt, BigInt](|[BigInt, BigI ...)' VC for subSubSize @247:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[BigInt, BigInt, BigInt](==|[BigInt]({ ...)' VC for subSubSize @247:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[BigInt, BigInt, BigInt](==|[BigInt]({ ...)' VC for subSubSize @247:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @247:10...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @247:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](--[T](set1, set2)))' VC for subSubSize @247:10...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](--[T](set1, set2)))' VC for subSubSize @247:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, set2))' VC for subSubSize @247:10...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, set2))' VC for subSubSize @247:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @248:10...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @248:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](-[T](--[T](set1, ys), y)))' VC for subSubSize @248:10...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](-[T](--[T](set1, ys), y)))' VC for subSubSize @248:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](--[T](set1, ys), y))' VC for subSubSize @248:10...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](--[T](set1, ys), y))' VC for subSubSize @248:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, ys))' VC for subSubSize @248:11...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, ys))' VC for subSubSize @248:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call subSize[T](--[T](set1, ys), y))' VC for subSubSize @248:37...
[[34m  Info  [0m] Cache hit: 'precond. (call subSize[T](--[T](set1, ys), y))' VC for subSubSize @248:37...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, ys))' VC for subSubSize @248:45...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, ys))' VC for subSubSize @248:45...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @249:10...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @249:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](--[T](set1, ys)))' VC for subSubSize @249:10...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](--[T](set1, ys)))' VC for subSubSize @249:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, ys))' VC for subSubSize @249:10...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, ys))' VC for subSubSize @249:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call subSubSize[T](set1, ys))' VC for subSubSize @249:37...
[[34m  Info  [0m] Cache hit: 'precond. (call subSubSize[T](set1, ys))' VC for subSubSize @249:37...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @250:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @250:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set1))' VC for subSubSize @250:9...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set1))' VC for subSubSize @250:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](ys))' VC for subSubSize @250:21...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](ys))' VC for subSubSize @250:21...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set1))' VC for subSubSize @251:9...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set1))' VC for subSubSize @251:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set2))' VC for subSubSize @251:21...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set2))' VC for subSubSize @251:21...
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for subSubSize @244:29...
[[34m  Info  [0m] Cache hit: 'body assertion' VC for subSubSize @244:29...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for subSubSize @238:62...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for subSubSize @238:62...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for subSubSize @242:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for subSubSize @242:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, set2))' VC for subSubContains @225:6...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, set2))' VC for subSubContains @225:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for subSubContains @230:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for subSubContains @230:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subSubContains @230:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subSubContains @230:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for subSubContains @230:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for subSubContains @230:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subSubContains @230:10...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for subSubContains @230:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, set2))' VC for subSubContains @230:10...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, set2))' VC for subSubContains @230:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subSubContains @231:10...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for subSubContains @231:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](--[T](set1, ys), y))' VC for subSubContains @231:10...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](--[T](set1, ys), y))' VC for subSubContains @231:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, ys))' VC for subSubContains @231:11...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, ys))' VC for subSubContains @231:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call subContains[T](--[T](set1, ys), y, z))' VC for subSubContains @231:44...
[[34m  Info  [0m] Cache hit: 'precond. (call subContains[T](--[T](set1, ys), y, z))' VC for subSubContains @231:44...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, ys))' VC for subSubContains @231:56...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, ys))' VC for subSubContains @231:56...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subSubContains @232:10...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for subSubContains @232:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, ys))' VC for subSubContains @232:10...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, ys))' VC for subSubContains @232:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call subSubContains[T](set1, ys, z))' VC for subSubContains @232:44...
[[34m  Info  [0m] Cache hit: 'precond. (call subSubContains[T](set1, ys, z))' VC for subSubContains @232:44...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for subSubContains @222:72...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for subSubContains @222:72...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for subSubContains @227:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for subSubContains @227:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](-[T](set, y)), ind. on (set: USet[T] : USCons))' VC for subSize @219:6...
[[34m  Info  [0m] Cache miss: 'precond. (call size[T](-[T](set, y)), ind. on (set: USet[T] : USCons))' VC for subSize @219:6...
[[34m  Info  [0m]  - Now solving 'precond. (call size[T](-[T](set, y)), ind. on (set: USet[T] : USCons))' VC for subSize @219:6...
[[34m  Info  [0m]  - Result for 'precond. (call size[T](-[T](set, y)), ind. on (set: USet[T] : USCons))' VC for subSize @219:6:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](-[T](set, y)), ind. on (set: USet[T] : USNil))' VC for subSize @219:6...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](-[T](set, y)), ind. on (set: USet[T] : USNil))' VC for subSize @219:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](set, y), ind. on (set: USet[T] : USCons))' VC for subSize @219:6...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](set, y), ind. on (set: USet[T] : USCons))' VC for subSize @219:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](set, y), ind. on (set: USet[T] : USNil))' VC for subSize @219:6...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](set, y), ind. on (set: USet[T] : USNil))' VC for subSize @219:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set), ind. on (set: USet[T] : USCons))' VC for subSize @219:23...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set), ind. on (set: USet[T] : USCons))' VC for subSize @219:23...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set), ind. on (set: USet[T] : USNil))' VC for subSize @219:23...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set), ind. on (set: USet[T] : USNil))' VC for subSize @219:23...
[[34m  Info  [0m]  - Checking cache: 'postcond. (ind. on set: USet[T] / USCons)' VC for subSize @217:3...
[[34m  Info  [0m] Cache hit: 'postcond. (ind. on set: USet[T] / USCons)' VC for subSize @217:3...
[[34m  Info  [0m]  - Checking cache: 'postcond. (ind. on set: USet[T] / USNil)' VC for subSize @217:3...
[[34m  Info  [0m] Cache hit: 'postcond. (ind. on set: USet[T] / USNil)' VC for subSize @217:3...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](that))' VC for -- @85:15...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](that))' VC for -- @85:15...
[[34m  Info  [0m]  - Checking cache: 'precond. (call subInv[T](--[T](thiss, ys), y))' VC for -- @90:16...
[[34m  Info  [0m] Cache hit: 'precond. (call subInv[T](--[T](thiss, ys), y))' VC for -- @90:16...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](thiss, ys))' VC for -- @90:23...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](thiss, ys))' VC for -- @90:23...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](ys))' VC for -- @91:16...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](ys))' VC for -- @91:16...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](that))' VC for -- @91:26...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](that))' VC for -- @91:26...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](--[T](thiss, ys), y))' VC for -- @93:9...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](--[T](thiss, ys), y))' VC for -- @93:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](thiss, ys))' VC for -- @93:10...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](thiss, ys))' VC for -- @93:10...
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for -- @89:26...
[[34m  Info  [0m] Cache hit: 'body assertion' VC for -- @89:26...
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for -- @91:9...
[[34m  Info  [0m] Cache hit: 'body assertion' VC for -- @91:9...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for -- @95:16...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for -- @95:16...
[[34m  Info  [0m]  - Checking cache: 'body assertion: Measure not guaranteed positive' VC for -- @87:5...
[[34m  Info  [0m] Cache hit: 'body assertion: Measure not guaranteed positive' VC for -- @87:5...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for -- @87:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for -- @87:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](set, y))' VC for subInv @200:12...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](set, y))' VC for subInv @200:12...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for subInv @207:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for subInv @207:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subInv @207:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subInv @207:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subInv @207:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subInv @207:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for subInv @207:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for subInv @207:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subInv @207:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for subInv @207:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](set, y))' VC for subInv @207:16...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](set, y))' VC for subInv @207:16...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subInv @208:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for subInv @208:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](xs, y))' VC for subInv @208:26...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](xs, y))' VC for subInv @208:26...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subInv @209:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for subInv @209:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](xs, y))' VC for subInv @209:12...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](xs, y))' VC for subInv @209:12...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](xs, y))' VC for subInv @209:42...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](xs, y))' VC for subInv @209:42...
[[34m  Info  [0m]  - Checking cache: 'precond. (call subInv[T](xs, y))' VC for subInv @209:55...
[[34m  Info  [0m] Cache hit: 'precond. (call subInv[T](xs, y))' VC for subInv @209:55...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subInv @210:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for subInv @210:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](xs, y))' VC for subInv @210:11...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](xs, y))' VC for subInv @210:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call subContains[T](xs, y, x))' VC for subInv @210:55...
[[34m  Info  [0m] Cache hit: 'precond. (call subContains[T](xs, y, x))' VC for subInv @210:55...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for subInv @198:48...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for subInv @198:48...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for subInv @202:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for subInv @202:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](set, y), ind. on (set: USet[T] : USCons))' VC for subContains @195:6...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](set, y), ind. on (set: USet[T] : USCons))' VC for subContains @195:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](set, y), ind. on (set: USet[T] : USNil))' VC for subContains @195:6...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](set, y), ind. on (set: USet[T] : USNil))' VC for subContains @195:6...
[[34m  Info  [0m]  - Checking cache: 'postcond. (ind. on set: USet[T] / USCons)' VC for subContains @193:3...
[[34m  Info  [0m] Cache hit: 'postcond. (ind. on set: USet[T] / USCons)' VC for subContains @193:3...
[[34m  Info  [0m]  - Checking cache: 'postcond. (ind. on set: USet[T] / USNil)' VC for subContains @193:3...
[[34m  Info  [0m] Cache hit: 'postcond. (ind. on set: USet[T] / USNil)' VC for subContains @193:3...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](xs, y))' VC for - @79:24...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](xs, y))' VC for - @79:24...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for - @75:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for - @75:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](set1, set2))' VC for unionSubset @145:8...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](set1, set2))' VC for unionSubset @145:8...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for unionSubset @150:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for unionSubset @150:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @150:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @150:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @150:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @150:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @150:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @150:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @150:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @150:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for unionSubset @150:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for unionSubset @150:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @150:10...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @150:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](set1, set2))' VC for unionSubset @150:10...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](set1, set2))' VC for unionSubset @150:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @151:10...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @151:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](++[T](xs, set2), x))' VC for unionSubset @151:10...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](++[T](xs, set2), x))' VC for unionSubset @151:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](xs, set2))' VC for unionSubset @151:11...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](xs, set2))' VC for unionSubset @151:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @152:10...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @152:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](+[T](++[T](xs, set2), x), (x$7 ...)' VC for unionSubset @152:10...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](+[T](++[T](xs, set2), x), (x$7 ...)' VC for unionSubset @152:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](++[T](xs, set2), x))' VC for unionSubset @152:10...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](++[T](xs, set2), x))' VC for unionSubset @152:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](xs, set2))' VC for unionSubset @152:11...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](xs, set2))' VC for unionSubset @152:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call addForall[T](++[T](xs, set2), x, (y: T)  ...)' VC for unionSubset @153:11...
[[34m  Info  [0m] Cache hit: 'precond. (call addForall[T](++[T](xs, set2), x, (y: T)  ...)' VC for unionSubset @153:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](xs, set2))' VC for unionSubset @153:22...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](xs, set2))' VC for unionSubset @153:22...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @154:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @154:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](++[T](xs, set2), (x$8: T) => { ...)' VC for unionSubset @154:11...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](++[T](xs, set2), (x$8: T) => { ...)' VC for unionSubset @154:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](xs, set2))' VC for unionSubset @154:11...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](xs, set2))' VC for unionSubset @154:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @156:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @156:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](xs, set2))' VC for unionSubset @156:11...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](xs, set2))' VC for unionSubset @156:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call unionSubset[T](xs, set2, set3))' VC for unionSubset @156:63...
[[34m  Info  [0m] Cache hit: 'precond. (call unionSubset[T](xs, set2, set3))' VC for unionSubset @156:63...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @157:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @157:9...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for unionSubset @142:78...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for unionSubset @142:78...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for unionSubset @147:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for unionSubset @147:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](+[T](set, x), p ..., ind. on (set: USet[T] : USCons))' VC for addForall @139:6...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](+[T](set, x), p ..., ind. on (set: USet[T] : USCons))' VC for addForall @139:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](+[T](set, x), p ..., ind. on (set: USet[T] : USNil))' VC for addForall @139:6...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](+[T](set, x), p ..., ind. on (set: USet[T] : USNil))' VC for addForall @139:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](set, x), ind. on (set: USet[T] : USCons))' VC for addForall @139:6...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](set, x), ind. on (set: USet[T] : USCons))' VC for addForall @139:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](set, x), ind. on (set: USet[T] : USNil))' VC for addForall @139:6...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](set, x), ind. on (set: USet[T] : USNil))' VC for addForall @139:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](set, p), ind. on (set: USet[T] : USCons))' VC for addForall @139:29...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](set, p), ind. on (set: USet[T] : USCons))' VC for addForall @139:29...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](set, p), ind. on (set: USet[T] : USNil))' VC for addForall @139:29...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](set, p), ind. on (set: USet[T] : USNil))' VC for addForall @139:29...
[[34m  Info  [0m]  - Checking cache: 'postcond. (ind. on set: USet[T] / USCons)' VC for addForall @137:3...
[[34m  Info  [0m] Cache hit: 'postcond. (ind. on set: USet[T] / USCons)' VC for addForall @137:3...
[[34m  Info  [0m]  - Checking cache: 'postcond. (ind. on set: USet[T] / USNil)' VC for addForall @137:3...
[[34m  Info  [0m] Cache hit: 'postcond. (ind. on set: USet[T] / USNil)' VC for addForall @137:3...
[[34m  Info  [0m]  - Checking cache: 'lambda precondition' VC for addForall @137:40...
[[34m  Info  [0m] Cache hit: 'lambda precondition' VC for addForall @137:40...
[[34m  Info  [0m]  - Checking cache: 'lambda precondition' VC for addForall @139:46...
[[34m  Info  [0m] Cache hit: 'lambda precondition' VC for addForall @139:46...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](thiss))' VC for ++ @60:15...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](thiss))' VC for ++ @60:15...
[[34m  Info  [0m]  - Checking cache: 'precond. (call addInv[T](++[T](xs, that), x))' VC for ++ @65:16...
[[34m  Info  [0m] Cache hit: 'precond. (call addInv[T](++[T](xs, that), x))' VC for ++ @65:16...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](xs, that))' VC for ++ @65:23...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](xs, that))' VC for ++ @65:23...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](xs))' VC for ++ @66:16...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](xs))' VC for ++ @66:16...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](thiss))' VC for ++ @66:26...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](thiss))' VC for ++ @66:26...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](++[T](xs, that), x))' VC for ++ @68:9...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](++[T](xs, that), x))' VC for ++ @68:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](xs, that))' VC for ++ @68:10...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](xs, that))' VC for ++ @68:10...
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for ++ @64:26...
[[34m  Info  [0m] Cache hit: 'body assertion' VC for ++ @64:26...
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for ++ @66:9...
[[34m  Info  [0m] Cache hit: 'body assertion' VC for ++ @66:9...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for ++ @70:16...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for ++ @70:16...
[[34m  Info  [0m]  - Checking cache: 'body assertion: Measure not guaranteed positive' VC for ++ @62:5...
[[34m  Info  [0m] Cache hit: 'body assertion: Measure not guaranteed positive' VC for ++ @62:5...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for ++ @62:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for ++ @62:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](set, y))' VC for addInv @119:12...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](set, y))' VC for addInv @119:12...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for addInv @126:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for addInv @126:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for addInv @126:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for addInv @126:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for addInv @126:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for addInv @126:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for addInv @126:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for addInv @126:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for addInv @126:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for addInv @126:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @126:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @126:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](set, y))' VC for addInv @126:16...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](set, y))' VC for addInv @126:16...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @127:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @127:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](xs, y))' VC for addInv @127:26...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](xs, y))' VC for addInv @127:26...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @128:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @128:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](xs, y))' VC for addInv @128:12...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](xs, y))' VC for addInv @128:12...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](xs, y))' VC for addInv @128:42...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](xs, y))' VC for addInv @128:42...
[[34m  Info  [0m]  - Checking cache: 'precond. (call addInv[T](xs, y))' VC for addInv @128:55...
[[34m  Info  [0m] Cache hit: 'precond. (call addInv[T](xs, y))' VC for addInv @128:55...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @129:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @129:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](xs, y))' VC for addInv @129:11...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](xs, y))' VC for addInv @129:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call addContains[T](xs, y, x))' VC for addInv @129:55...
[[34m  Info  [0m] Cache hit: 'precond. (call addContains[T](xs, y, x))' VC for addInv @129:55...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @130:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @130:9...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for addInv @117:48...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for addInv @117:48...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for addInv @121:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for addInv @121:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](set, y), ind. on (set: USet[T] : USCons))' VC for addContains @114:6...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](set, y), ind. on (set: USet[T] : USCons))' VC for addContains @114:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](set, y), ind. on (set: USet[T] : USNil))' VC for addContains @114:6...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](set, y), ind. on (set: USet[T] : USNil))' VC for addContains @114:6...
[[34m  Info  [0m]  - Checking cache: 'postcond. (ind. on set: USet[T] / USCons)' VC for addContains @112:3...
[[34m  Info  [0m] Cache hit: 'postcond. (ind. on set: USet[T] / USCons)' VC for addContains @112:3...
[[34m  Info  [0m]  - Checking cache: 'postcond. (ind. on set: USet[T] / USNil)' VC for addContains @112:3...
[[34m  Info  [0m] Cache hit: 'postcond. (ind. on set: USet[T] / USNil)' VC for addContains @112:3...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](xs, y))' VC for + @53:21...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](xs, y))' VC for + @53:21...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for + @46:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for + @46:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for subsetOfId @179:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for subsetOfId @179:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subsetOfId @179:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subsetOfId @179:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for subsetOfId @179:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for subsetOfId @179:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subsetOfId @179:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for subsetOfId @179:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subsetOfId @180:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for subsetOfId @180:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](set, p))' VC for subsetOfId @180:9...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](set, p))' VC for subsetOfId @180:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subsetOfId @181:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for subsetOfId @181:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](xs, p))' VC for subsetOfId @181:31...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](xs, p))' VC for subsetOfId @181:31...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for subsetOfId @172:5...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for subsetOfId @172:5...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for subsetOfId @174:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for subsetOfId @174:5...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for subsetTail @165:5...
[[34m  Info  [0m] Cache miss: 'postcondition' VC for subsetTail @165:5...
[[34m  Info  [0m]  - Now solving 'postcondition' VC for subsetTail @165:5...
[[34m  Info  [0m]  - Result for 'postcondition' VC for subsetTail @165:5:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for subsetTail @165:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for subsetTail @165:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](thiss, (x$3: T) => { ...)' VC for subsetOf @23:42...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](thiss, (x$3: T) => { ...)' VC for subsetOf @23:42...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](xs))' VC for size @39:33...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](xs))' VC for size @39:33...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for size @41:16...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for size @41:16...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for size @37:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for size @37:5...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for setInv @106:42...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for setInv @106:42...
[[34m  Info  [0m]  - Checking cache: 'precond. (call exists[T](thiss, (x$2: T) => { ...)' VC for contains @21:33...
[[34m  Info  [0m] Cache hit: 'precond. (call exists[T](thiss, (x$2: T) => { ...)' VC for contains @21:33...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](thiss, (x$1: T) => { ...)' VC for exists @19:42...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](thiss, (x$1: T) => { ...)' VC for exists @19:42...
[[34m  Info  [0m]  - Checking cache: 'lambda precondition' VC for exists @19:14...
[[34m  Info  [0m] Cache hit: 'lambda precondition' VC for exists @19:14...
[[34m  Info  [0m]  - Checking cache: 'lambda precondition' VC for exists @19:50...
[[34m  Info  [0m] Cache hit: 'lambda precondition' VC for exists @19:50...
[[34m  Info  [0m]  - Checking cache: 'lambda precondition' VC for exists @19:50...
[[34m  Info  [0m] Cache hit: 'lambda precondition' VC for exists @19:50...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](xs, p))' VC for forall @16:35...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](xs, p))' VC for forall @16:35...
[[34m  Info  [0m]  - Checking cache: 'lambda precondition' VC for forall @14:14...
[[34m  Info  [0m] Cache hit: 'lambda precondition' VC for forall @14:14...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for forall @14:42...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for forall @14:42...
[[34m  Info  [0m]  - Checking cache: 'lambda precondition' VC for forall @16:27...
[[34m  Info  [0m] Cache hit: 'lambda precondition' VC for forall @16:27...
[[34m  Info  [0m] Result for forall
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for setInv
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for size
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for setInv
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for +
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for setInv
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for addInv
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for ++
[[34m  Info  [0m]  => CLEARED (Decreases Processor)
[[34m  Info  [0m] Result for setInv
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for -
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for setInv
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for subInv
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for --
[[34m  Info  [0m]  => CLEARED (Decreases Processor)
[[34m  Info  [0m] Result for unionSubset
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for subSubContains
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for subSubSize
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m]   ┌──────────────────────┐
[[34m  Info  [0m] ╔═╡ [31mverification summary[0m ╞═════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
[[34m  Info  [0m] ║ └──────────────────────┘                                                                                                                 ║
[[34m  Info  [0m] ║ [33msizeStrictSubsetOf[0m  [33mprecond. (call sizeEq[T](set1, set2))[0m                                   [33mtimeout[0m  [33mnativez3[0m  [33mUSet.scala:269:49[0m  [33m15.443[0m ║
[[34m  Info  [0m] ║ [33msubSize[0m             [33mprecond. (call size[T](-[T](set, y)), ind. on (set: USet[T] : USCons))[0m  [33mtimeout[0m  [33mnativez3[0m  [33mUSet.scala:219:6[0m   [33m15.254[0m ║
[[34m  Info  [0m] ║ [33msubsetTail[0m          [33mpostcondition[0m                                                           [33mtimeout[0m  [33mnativez3[0m  [33mUSet.scala:165:5[0m   [33m15.124[0m ║
[[34m  Info  [0m] ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
[[34m  Info  [0m] ║ [31mtotal: 191  valid: 188  (187 from cache) invalid: 0    unknown: 3    time:  47.583[0m                                                       ║
[[34m  Info  [0m] ╚══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
[[34m  Info  [0m]   ┌─────────────────────┐
[[34m  Info  [0m] ╔═╡ [32mtermination summary[0m ╞══════════════════════════════════════════════════════════╗
[[34m  Info  [0m] ║ └─────────────────────┘                                                          ║
[[34m  Info  [0m] ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
[[34m  Info  [0m] ║ [32mtotal: 28   valid: 28   (0 from cache) invalid: 0    unknown: 0    time:   7.013[0m ║
[[34m  Info  [0m] ╚══════════════════════════════════════════════════════════════════════════════════╝
[[34m  Info  [0m] Cycle took 61460 ms
[[34m  Info  [0m] 
[[34m  Info  [0m] 
[[34m  Info  [0m] Waiting for source changes...
[[34m  Info  [0m] 
[[34m  Info  [0m] 
[[34m  Info  [0m] Detecting some file modifications...: /Users/rodamber/Workspace/LARA/automaton/USet.scala
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for isEmpty @29:26...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for isEmpty @29:26...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](set1, set2))' VC for unionSubset2 @192:19...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](set1, set2))' VC for unionSubset2 @192:19...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](set1, set2))' VC for unionSubset2 @192:50...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](set1, set2))' VC for unionSubset2 @192:50...
[[34m  Info  [0m]  - Checking cache: 'precond. (call unionSubset[T](set1, set2, ++[T](set1, s ...)' VC for unionSubset2 @193:21...
[[34m  Info  [0m] Cache hit: 'precond. (call unionSubset[T](set1, set2, ++[T](set1, s ...)' VC for unionSubset2 @193:21...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](set1, set2))' VC for unionSubset2 @193:45...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](set1, set2))' VC for unionSubset2 @193:45...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](set1, set2))' VC for unionSubset2 @193:73...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](set1, set2))' VC for unionSubset2 @193:73...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for unionSubset2 @190:64...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for unionSubset2 @190:64...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](set1, set2))' VC for unionSubset @148:8...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](set1, set2))' VC for unionSubset @148:8...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for unionSubset @153:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for unionSubset @153:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @153:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @153:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @153:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @153:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @153:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @153:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @153:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @153:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for unionSubset @153:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for unionSubset @153:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @153:10...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @153:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](set1, set2))' VC for unionSubset @153:10...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](set1, set2))' VC for unionSubset @153:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @154:10...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @154:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](++[T](xs, set2), x))' VC for unionSubset @154:10...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](++[T](xs, set2), x))' VC for unionSubset @154:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](xs, set2))' VC for unionSubset @154:11...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](xs, set2))' VC for unionSubset @154:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @155:10...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @155:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](+[T](++[T](xs, set2), x), (x$7 ...)' VC for unionSubset @155:10...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](+[T](++[T](xs, set2), x), (x$7 ...)' VC for unionSubset @155:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](++[T](xs, set2), x))' VC for unionSubset @155:10...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](++[T](xs, set2), x))' VC for unionSubset @155:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](xs, set2))' VC for unionSubset @155:11...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](xs, set2))' VC for unionSubset @155:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call addForall[T](++[T](xs, set2), x, (y: T)  ...)' VC for unionSubset @156:11...
[[34m  Info  [0m] Cache hit: 'precond. (call addForall[T](++[T](xs, set2), x, (y: T)  ...)' VC for unionSubset @156:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](xs, set2))' VC for unionSubset @156:22...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](xs, set2))' VC for unionSubset @156:22...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @157:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @157:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](++[T](xs, set2), (x$8: T) => { ...)' VC for unionSubset @157:11...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](++[T](xs, set2), (x$8: T) => { ...)' VC for unionSubset @157:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](xs, set2))' VC for unionSubset @157:11...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](xs, set2))' VC for unionSubset @157:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @159:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @159:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](xs, set2))' VC for unionSubset @159:11...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](xs, set2))' VC for unionSubset @159:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call unionSubset[T](xs, set2, set3))' VC for unionSubset @159:63...
[[34m  Info  [0m] Cache hit: 'precond. (call unionSubset[T](xs, set2, set3))' VC for unionSubset @159:63...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @160:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @160:9...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for unionSubset @145:78...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for unionSubset @145:78...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for unionSubset @150:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for unionSubset @150:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](+[T](set, x), p ..., ind. on (set: USet[T] : USCons))' VC for addForall @142:6...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](+[T](set, x), p ..., ind. on (set: USet[T] : USCons))' VC for addForall @142:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](+[T](set, x), p ..., ind. on (set: USet[T] : USNil))' VC for addForall @142:6...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](+[T](set, x), p ..., ind. on (set: USet[T] : USNil))' VC for addForall @142:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](set, x), ind. on (set: USet[T] : USCons))' VC for addForall @142:6...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](set, x), ind. on (set: USet[T] : USCons))' VC for addForall @142:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](set, x), ind. on (set: USet[T] : USNil))' VC for addForall @142:6...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](set, x), ind. on (set: USet[T] : USNil))' VC for addForall @142:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](set, p), ind. on (set: USet[T] : USCons))' VC for addForall @142:29...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](set, p), ind. on (set: USet[T] : USCons))' VC for addForall @142:29...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](set, p), ind. on (set: USet[T] : USNil))' VC for addForall @142:29...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](set, p), ind. on (set: USet[T] : USNil))' VC for addForall @142:29...
[[34m  Info  [0m]  - Checking cache: 'postcond. (ind. on set: USet[T] / USCons)' VC for addForall @140:3...
[[34m  Info  [0m] Cache hit: 'postcond. (ind. on set: USet[T] / USCons)' VC for addForall @140:3...
[[34m  Info  [0m]  - Checking cache: 'postcond. (ind. on set: USet[T] / USNil)' VC for addForall @140:3...
[[34m  Info  [0m] Cache hit: 'postcond. (ind. on set: USet[T] / USNil)' VC for addForall @140:3...
[[34m  Info  [0m]  - Checking cache: 'lambda precondition' VC for addForall @140:40...
[[34m  Info  [0m] Cache hit: 'lambda precondition' VC for addForall @140:40...
[[34m  Info  [0m]  - Checking cache: 'lambda precondition' VC for addForall @142:46...
[[34m  Info  [0m] Cache hit: 'lambda precondition' VC for addForall @142:46...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for subsetOfId @182:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for subsetOfId @182:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subsetOfId @182:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subsetOfId @182:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for subsetOfId @182:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for subsetOfId @182:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subsetOfId @182:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for subsetOfId @182:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subsetOfId @183:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for subsetOfId @183:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](set, p))' VC for subsetOfId @183:9...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](set, p))' VC for subsetOfId @183:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subsetOfId @184:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for subsetOfId @184:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](xs, p))' VC for subsetOfId @184:31...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](xs, p))' VC for subsetOfId @184:31...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for subsetOfId @175:5...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for subsetOfId @175:5...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for subsetOfId @177:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for subsetOfId @177:5...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for subsetTail @168:5...
[[34m  Info  [0m] Cache miss: 'postcondition' VC for subsetTail @168:5...
[[34m  Info  [0m]  - Now solving 'postcondition' VC for subsetTail @168:5...
[[34m  Info  [0m]  - Result for 'postcondition' VC for subsetTail @168:5:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for subsetTail @168:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for subsetTail @168:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set1))' VC for sizeEqConv @271:5...
[[34m  Info  [0m] Cache miss: 'precond. (call size[T](set1))' VC for sizeEqConv @271:5...
[[34m  Info  [0m]  - Now solving 'precond. (call size[T](set1))' VC for sizeEqConv @271:5...
[[34m  Info  [0m]  - Result for 'precond. (call size[T](set1))' VC for sizeEqConv @271:5:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set2))' VC for sizeEqConv @271:18...
[[34m  Info  [0m] Cache miss: 'precond. (call size[T](set2))' VC for sizeEqConv @271:18...
[[34m  Info  [0m]  - Now solving 'precond. (call size[T](set2))' VC for sizeEqConv @271:18...
[[34m  Info  [0m]  - Result for 'precond. (call size[T](set2))' VC for sizeEqConv @271:18:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call sizeSubsetOf[T](set1, set2))' VC for sizeEqConv @272:21...
[[34m  Info  [0m] Cache miss: 'precond. (call sizeSubsetOf[T](set1, set2))' VC for sizeEqConv @272:21...
[[34m  Info  [0m]  - Now solving 'precond. (call sizeSubsetOf[T](set1, set2))' VC for sizeEqConv @272:21...
[[34m  Info  [0m]  - Result for 'precond. (call sizeSubsetOf[T](set1, set2))' VC for sizeEqConv @272:21:
[[33mWarning [0m]  => INVALID
[[33mWarning [0m] Found counter-example:
[[33mWarning [0m]   set1: USet[T] -> USCons[T](T#6, USNil[T]())
[[33mWarning [0m]   set2: USet[T] -> USNil[T]()
[[34m  Info  [0m]  - Checking cache: 'precond. (call sizeSubsetOf[T](set2, set1))' VC for sizeEqConv @272:49...
[[34m  Info  [0m] Cache miss: 'precond. (call sizeSubsetOf[T](set2, set1))' VC for sizeEqConv @272:49...
[[34m  Info  [0m]  - Now solving 'precond. (call sizeSubsetOf[T](set2, set1))' VC for sizeEqConv @272:49...
[[34m  Info  [0m]  - Result for 'precond. (call sizeSubsetOf[T](set2, set1))' VC for sizeEqConv @272:49:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for sizeEqConv @269:62...
[[34m  Info  [0m] Cache miss: 'postcondition' VC for sizeEqConv @269:62...
[[34m  Info  [0m]  - Now solving 'postcondition' VC for sizeEqConv @269:62...
[[34m  Info  [0m]  - Result for 'postcondition' VC for sizeEqConv @269:62:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](thiss))' VC for ++ @60:15...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](thiss))' VC for ++ @60:15...
[[34m  Info  [0m]  - Checking cache: 'precond. (call addInv[T](++[T](xs, that), x))' VC for ++ @65:16...
[[34m  Info  [0m] Cache hit: 'precond. (call addInv[T](++[T](xs, that), x))' VC for ++ @65:16...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](xs, that))' VC for ++ @65:23...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](xs, that))' VC for ++ @65:23...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](xs))' VC for ++ @66:16...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](xs))' VC for ++ @66:16...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](thiss))' VC for ++ @66:26...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](thiss))' VC for ++ @66:26...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](++[T](xs, that), x))' VC for ++ @68:9...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](++[T](xs, that), x))' VC for ++ @68:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](xs, that))' VC for ++ @68:10...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](xs, that))' VC for ++ @68:10...
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for ++ @64:26...
[[34m  Info  [0m] Cache hit: 'body assertion' VC for ++ @64:26...
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for ++ @66:9...
[[34m  Info  [0m] Cache hit: 'body assertion' VC for ++ @66:9...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for ++ @70:16...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for ++ @70:16...
[[34m  Info  [0m]  - Checking cache: 'body assertion: Measure not guaranteed positive' VC for ++ @62:5...
[[34m  Info  [0m] Cache hit: 'body assertion: Measure not guaranteed positive' VC for ++ @62:5...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for ++ @62:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for ++ @62:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](set, y))' VC for addInv @122:12...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](set, y))' VC for addInv @122:12...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for addInv @129:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for addInv @129:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for addInv @129:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for addInv @129:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for addInv @129:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for addInv @129:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for addInv @129:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for addInv @129:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for addInv @129:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for addInv @129:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @129:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @129:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](set, y))' VC for addInv @129:16...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](set, y))' VC for addInv @129:16...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @130:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @130:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](xs, y))' VC for addInv @130:26...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](xs, y))' VC for addInv @130:26...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @131:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @131:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](xs, y))' VC for addInv @131:12...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](xs, y))' VC for addInv @131:12...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](xs, y))' VC for addInv @131:42...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](xs, y))' VC for addInv @131:42...
[[34m  Info  [0m]  - Checking cache: 'precond. (call addInv[T](xs, y))' VC for addInv @131:55...
[[34m  Info  [0m] Cache hit: 'precond. (call addInv[T](xs, y))' VC for addInv @131:55...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @132:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @132:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](xs, y))' VC for addInv @132:11...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](xs, y))' VC for addInv @132:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call addContains[T](xs, y, x))' VC for addInv @132:55...
[[34m  Info  [0m] Cache hit: 'precond. (call addContains[T](xs, y, x))' VC for addInv @132:55...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @133:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @133:9...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for addInv @120:48...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for addInv @120:48...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for addInv @124:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for addInv @124:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](set, y), ind. on (set: USet[T] : USCons))' VC for addContains @117:6...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](set, y), ind. on (set: USet[T] : USCons))' VC for addContains @117:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](set, y), ind. on (set: USet[T] : USNil))' VC for addContains @117:6...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](set, y), ind. on (set: USet[T] : USNil))' VC for addContains @117:6...
[[34m  Info  [0m]  - Checking cache: 'postcond. (ind. on set: USet[T] / USCons)' VC for addContains @115:3...
[[34m  Info  [0m] Cache hit: 'postcond. (ind. on set: USet[T] / USCons)' VC for addContains @115:3...
[[34m  Info  [0m]  - Checking cache: 'postcond. (ind. on set: USet[T] / USNil)' VC for addContains @115:3...
[[34m  Info  [0m] Cache hit: 'postcond. (ind. on set: USet[T] / USNil)' VC for addContains @115:3...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](xs, y))' VC for + @53:21...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](xs, y))' VC for + @53:21...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for + @46:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for + @46:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set1))' VC for sizeStrictSubsetOf @276:5...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set1))' VC for sizeStrictSubsetOf @276:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set2))' VC for sizeStrictSubsetOf @276:17...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set2))' VC for sizeStrictSubsetOf @276:17...
[[34m  Info  [0m]  - Checking cache: 'precond. (call sizeSubsetOf[T](set1, set2))' VC for sizeStrictSubsetOf @277:21...
[[34m  Info  [0m] Cache hit: 'precond. (call sizeSubsetOf[T](set1, set2))' VC for sizeStrictSubsetOf @277:21...
[[34m  Info  [0m]  - Checking cache: 'precond. (call sizeEq[T](set1, set2))' VC for sizeStrictSubsetOf @277:49...
[[34m  Info  [0m] Cache miss: 'precond. (call sizeEq[T](set1, set2))' VC for sizeStrictSubsetOf @277:49...
[[34m  Info  [0m]  - Now solving 'precond. (call sizeEq[T](set1, set2))' VC for sizeStrictSubsetOf @277:49...
[[34m  Info  [0m]  - Result for 'precond. (call sizeEq[T](set1, set2))' VC for sizeStrictSubsetOf @277:49:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for sizeStrictSubsetOf @274:70...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for sizeStrictSubsetOf @274:70...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set1))' VC for sizeEq @266:6...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set1))' VC for sizeEq @266:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set2))' VC for sizeEq @266:19...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set2))' VC for sizeEq @266:19...
[[34m  Info  [0m]  - Checking cache: 'precond. (call sizeSubsetOf[T](set1, set2))' VC for sizeEq @267:21...
[[34m  Info  [0m] Cache hit: 'precond. (call sizeSubsetOf[T](set1, set2))' VC for sizeEq @267:21...
[[34m  Info  [0m]  - Checking cache: 'precond. (call sizeSubsetOf[T](set2, set1))' VC for sizeEq @267:49...
[[34m  Info  [0m] Cache hit: 'precond. (call sizeSubsetOf[T](set2, set1))' VC for sizeEq @267:49...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for sizeEq @264:58...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for sizeEq @264:58...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set1))' VC for sizeSubsetOf @261:5...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set1))' VC for sizeSubsetOf @261:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set2))' VC for sizeSubsetOf @261:18...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set2))' VC for sizeSubsetOf @261:18...
[[34m  Info  [0m]  - Checking cache: 'precond. (call subSubSize[T](set2, set1))' VC for sizeSubsetOf @262:21...
[[34m  Info  [0m] Cache hit: 'precond. (call subSubSize[T](set2, set1))' VC for sizeSubsetOf @262:21...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for sizeSubsetOf @259:64...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for sizeSubsetOf @259:64...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](--[T](set1, set2)))' VC for subSubSize @243:6...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](--[T](set1, set2)))' VC for subSubSize @243:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, set2))' VC for subSubSize @243:6...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, set2))' VC for subSubSize @243:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set1))' VC for subSubSize @243:28...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set1))' VC for subSubSize @243:28...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set2))' VC for subSubSize @243:40...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set2))' VC for subSubSize @243:40...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, ys))' VC for subSubSize @248:17...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, ys))' VC for subSubSize @248:17...
[[34m  Info  [0m]  - Checking cache: 'precond. (call subSubContains[T](set1, ys, y))' VC for subSubSize @248:49...
[[34m  Info  [0m] Cache hit: 'precond. (call subSubContains[T](set1, ys, y))' VC for subSubSize @248:49...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[BigInt, BigInt](|[BigInt, BigInt, BigI ...)' VC for subSubSize @250:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[BigInt, BigInt](|[BigInt, BigInt, BigI ...)' VC for subSubSize @250:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[BigInt, BigInt, BigInt](|[BigInt, BigI ...)' VC for subSubSize @250:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[BigInt, BigInt, BigInt](|[BigInt, BigI ...)' VC for subSubSize @250:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[BigInt, BigInt, BigInt](|[BigInt, BigI ...)' VC for subSubSize @250:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[BigInt, BigInt, BigInt](|[BigInt, BigI ...)' VC for subSubSize @250:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[BigInt, BigInt, BigInt](==|[BigInt]({ ...)' VC for subSubSize @250:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[BigInt, BigInt, BigInt](==|[BigInt]({ ...)' VC for subSubSize @250:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @250:10...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @250:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](--[T](set1, set2)))' VC for subSubSize @250:10...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](--[T](set1, set2)))' VC for subSubSize @250:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, set2))' VC for subSubSize @250:10...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, set2))' VC for subSubSize @250:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @251:10...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @251:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](-[T](--[T](set1, ys), y)))' VC for subSubSize @251:10...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](-[T](--[T](set1, ys), y)))' VC for subSubSize @251:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](--[T](set1, ys), y))' VC for subSubSize @251:10...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](--[T](set1, ys), y))' VC for subSubSize @251:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, ys))' VC for subSubSize @251:11...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, ys))' VC for subSubSize @251:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call subSize[T](--[T](set1, ys), y))' VC for subSubSize @251:37...
[[34m  Info  [0m] Cache hit: 'precond. (call subSize[T](--[T](set1, ys), y))' VC for subSubSize @251:37...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, ys))' VC for subSubSize @251:45...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, ys))' VC for subSubSize @251:45...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @252:10...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @252:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](--[T](set1, ys)))' VC for subSubSize @252:10...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](--[T](set1, ys)))' VC for subSubSize @252:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, ys))' VC for subSubSize @252:10...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, ys))' VC for subSubSize @252:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call subSubSize[T](set1, ys))' VC for subSubSize @252:37...
[[34m  Info  [0m] Cache hit: 'precond. (call subSubSize[T](set1, ys))' VC for subSubSize @252:37...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @253:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @253:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set1))' VC for subSubSize @253:9...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set1))' VC for subSubSize @253:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](ys))' VC for subSubSize @253:21...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](ys))' VC for subSubSize @253:21...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set1))' VC for subSubSize @254:9...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set1))' VC for subSubSize @254:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set2))' VC for subSubSize @254:21...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set2))' VC for subSubSize @254:21...
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for subSubSize @247:29...
[[34m  Info  [0m] Cache hit: 'body assertion' VC for subSubSize @247:29...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for subSubSize @241:62...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for subSubSize @241:62...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for subSubSize @245:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for subSubSize @245:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, set2))' VC for subSubContains @228:6...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, set2))' VC for subSubContains @228:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for subSubContains @233:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for subSubContains @233:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subSubContains @233:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subSubContains @233:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for subSubContains @233:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for subSubContains @233:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subSubContains @233:10...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for subSubContains @233:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, set2))' VC for subSubContains @233:10...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, set2))' VC for subSubContains @233:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subSubContains @234:10...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for subSubContains @234:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](--[T](set1, ys), y))' VC for subSubContains @234:10...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](--[T](set1, ys), y))' VC for subSubContains @234:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, ys))' VC for subSubContains @234:11...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, ys))' VC for subSubContains @234:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call subContains[T](--[T](set1, ys), y, z))' VC for subSubContains @234:44...
[[34m  Info  [0m] Cache hit: 'precond. (call subContains[T](--[T](set1, ys), y, z))' VC for subSubContains @234:44...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, ys))' VC for subSubContains @234:56...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, ys))' VC for subSubContains @234:56...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subSubContains @235:10...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for subSubContains @235:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, ys))' VC for subSubContains @235:10...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, ys))' VC for subSubContains @235:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call subSubContains[T](set1, ys, z))' VC for subSubContains @235:44...
[[34m  Info  [0m] Cache hit: 'precond. (call subSubContains[T](set1, ys, z))' VC for subSubContains @235:44...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for subSubContains @225:72...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for subSubContains @225:72...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for subSubContains @230:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for subSubContains @230:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](that))' VC for -- @85:15...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](that))' VC for -- @85:15...
[[34m  Info  [0m]  - Checking cache: 'precond. (call subInv[T](--[T](thiss, ys), y))' VC for -- @90:16...
[[34m  Info  [0m] Cache hit: 'precond. (call subInv[T](--[T](thiss, ys), y))' VC for -- @90:16...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](thiss, ys))' VC for -- @90:23...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](thiss, ys))' VC for -- @90:23...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](ys))' VC for -- @91:16...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](ys))' VC for -- @91:16...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](that))' VC for -- @91:26...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](that))' VC for -- @91:26...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](--[T](thiss, ys), y))' VC for -- @93:9...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](--[T](thiss, ys), y))' VC for -- @93:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](thiss, ys))' VC for -- @93:10...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](thiss, ys))' VC for -- @93:10...
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for -- @89:26...
[[34m  Info  [0m] Cache hit: 'body assertion' VC for -- @89:26...
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for -- @91:9...
[[34m  Info  [0m] Cache hit: 'body assertion' VC for -- @91:9...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for -- @95:16...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for -- @95:16...
[[34m  Info  [0m]  - Checking cache: 'body assertion: Measure not guaranteed positive' VC for -- @87:5...
[[34m  Info  [0m] Cache hit: 'body assertion: Measure not guaranteed positive' VC for -- @87:5...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for -- @87:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for -- @87:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](-[T](set, y)), ind. on (set: USet[T] : USCons))' VC for subSize @222:6...
[[34m  Info  [0m] Cache miss: 'precond. (call size[T](-[T](set, y)), ind. on (set: USet[T] : USCons))' VC for subSize @222:6...
[[34m  Info  [0m]  - Now solving 'precond. (call size[T](-[T](set, y)), ind. on (set: USet[T] : USCons))' VC for subSize @222:6...
[[34m  Info  [0m]  - Result for 'precond. (call size[T](-[T](set, y)), ind. on (set: USet[T] : USCons))' VC for subSize @222:6:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](-[T](set, y)), ind. on (set: USet[T] : USNil))' VC for subSize @222:6...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](-[T](set, y)), ind. on (set: USet[T] : USNil))' VC for subSize @222:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](set, y), ind. on (set: USet[T] : USCons))' VC for subSize @222:6...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](set, y), ind. on (set: USet[T] : USCons))' VC for subSize @222:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](set, y), ind. on (set: USet[T] : USNil))' VC for subSize @222:6...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](set, y), ind. on (set: USet[T] : USNil))' VC for subSize @222:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set), ind. on (set: USet[T] : USCons))' VC for subSize @222:23...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set), ind. on (set: USet[T] : USCons))' VC for subSize @222:23...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set), ind. on (set: USet[T] : USNil))' VC for subSize @222:23...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set), ind. on (set: USet[T] : USNil))' VC for subSize @222:23...
[[34m  Info  [0m]  - Checking cache: 'postcond. (ind. on set: USet[T] / USCons)' VC for subSize @220:3...
[[34m  Info  [0m] Cache hit: 'postcond. (ind. on set: USet[T] / USCons)' VC for subSize @220:3...
[[34m  Info  [0m]  - Checking cache: 'postcond. (ind. on set: USet[T] / USNil)' VC for subSize @220:3...
[[34m  Info  [0m] Cache hit: 'postcond. (ind. on set: USet[T] / USNil)' VC for subSize @220:3...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](set, y))' VC for subInv @203:12...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](set, y))' VC for subInv @203:12...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for subInv @210:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for subInv @210:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subInv @210:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subInv @210:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subInv @210:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subInv @210:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for subInv @210:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for subInv @210:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subInv @210:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for subInv @210:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](set, y))' VC for subInv @210:16...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](set, y))' VC for subInv @210:16...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subInv @211:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for subInv @211:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](xs, y))' VC for subInv @211:26...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](xs, y))' VC for subInv @211:26...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subInv @212:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for subInv @212:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](xs, y))' VC for subInv @212:12...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](xs, y))' VC for subInv @212:12...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](xs, y))' VC for subInv @212:42...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](xs, y))' VC for subInv @212:42...
[[34m  Info  [0m]  - Checking cache: 'precond. (call subInv[T](xs, y))' VC for subInv @212:55...
[[34m  Info  [0m] Cache hit: 'precond. (call subInv[T](xs, y))' VC for subInv @212:55...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subInv @213:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for subInv @213:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](xs, y))' VC for subInv @213:11...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](xs, y))' VC for subInv @213:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call subContains[T](xs, y, x))' VC for subInv @213:55...
[[34m  Info  [0m] Cache hit: 'precond. (call subContains[T](xs, y, x))' VC for subInv @213:55...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for subInv @201:48...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for subInv @201:48...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for subInv @205:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for subInv @205:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](set, y), ind. on (set: USet[T] : USCons))' VC for subContains @198:6...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](set, y), ind. on (set: USet[T] : USCons))' VC for subContains @198:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](set, y), ind. on (set: USet[T] : USNil))' VC for subContains @198:6...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](set, y), ind. on (set: USet[T] : USNil))' VC for subContains @198:6...
[[34m  Info  [0m]  - Checking cache: 'postcond. (ind. on set: USet[T] / USCons)' VC for subContains @196:3...
[[34m  Info  [0m] Cache hit: 'postcond. (ind. on set: USet[T] / USCons)' VC for subContains @196:3...
[[34m  Info  [0m]  - Checking cache: 'postcond. (ind. on set: USet[T] / USNil)' VC for subContains @196:3...
[[34m  Info  [0m] Cache hit: 'postcond. (ind. on set: USet[T] / USNil)' VC for subContains @196:3...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](xs))' VC for size @39:33...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](xs))' VC for size @39:33...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for size @41:16...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for size @41:16...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for size @37:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for size @37:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](thiss, (x$3: T) => { ...)' VC for subsetOf @23:42...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](thiss, (x$3: T) => { ...)' VC for subsetOf @23:42...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](xs, y))' VC for - @79:24...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](xs, y))' VC for - @79:24...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for - @75:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for - @75:5...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for setInv @106:42...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for setInv @106:42...
[[34m  Info  [0m]  - Checking cache: 'precond. (call exists[T](thiss, (x$2: T) => { ...)' VC for contains @21:33...
[[34m  Info  [0m] Cache hit: 'precond. (call exists[T](thiss, (x$2: T) => { ...)' VC for contains @21:33...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](thiss, (x$1: T) => { ...)' VC for exists @19:42...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](thiss, (x$1: T) => { ...)' VC for exists @19:42...
[[34m  Info  [0m]  - Checking cache: 'lambda precondition' VC for exists @19:14...
[[34m  Info  [0m] Cache hit: 'lambda precondition' VC for exists @19:14...
[[34m  Info  [0m]  - Checking cache: 'lambda precondition' VC for exists @19:50...
[[34m  Info  [0m] Cache hit: 'lambda precondition' VC for exists @19:50...
[[34m  Info  [0m]  - Checking cache: 'lambda precondition' VC for exists @19:50...
[[34m  Info  [0m] Cache hit: 'lambda precondition' VC for exists @19:50...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](xs, p))' VC for forall @16:35...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](xs, p))' VC for forall @16:35...
[[34m  Info  [0m]  - Checking cache: 'lambda precondition' VC for forall @14:14...
[[34m  Info  [0m] Cache hit: 'lambda precondition' VC for forall @14:14...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for forall @14:42...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for forall @14:42...
[[34m  Info  [0m]  - Checking cache: 'lambda precondition' VC for forall @16:27...
[[34m  Info  [0m] Cache hit: 'lambda precondition' VC for forall @16:27...
[[34m  Info  [0m] Result for forall
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for setInv
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for size
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for setInv
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for +
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for setInv
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for addInv
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for ++
[[34m  Info  [0m]  => CLEARED (Decreases Processor)
[[34m  Info  [0m] Result for setInv
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for -
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for setInv
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for subInv
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for --
[[34m  Info  [0m]  => CLEARED (Decreases Processor)
[[34m  Info  [0m] Result for unionSubset
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for subSubContains
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for subSubSize
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m]   ┌──────────────────────┐
[[34m  Info  [0m] ╔═╡ [31mverification summary[0m ╞═════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
[[34m  Info  [0m] ║ └──────────────────────┘                                                                                                                 ║
[[34m  Info  [0m] ║ [31msizeEqConv[0m          [31mprecond. (call sizeSubsetOf[T](set1, set2))[0m                             [31minvalid[0m  [31mnativez3[0m  [31mUSet.scala:272:21[0m  [31m0.167[0m  ║
[[34m  Info  [0m] ║ [33msizeEqConv[0m          [33mprecond. (call sizeSubsetOf[T](set2, set1))[0m                             [33mtimeout[0m  [33mnativez3[0m  [33mUSet.scala:272:49[0m  [33m15.165[0m ║
[[34m  Info  [0m] ║ [33msizeStrictSubsetOf[0m  [33mprecond. (call sizeEq[T](set1, set2))[0m                                   [33mtimeout[0m  [33mnativez3[0m  [33mUSet.scala:277:49[0m  [33m15.136[0m ║
[[34m  Info  [0m] ║ [33msubSize[0m             [33mprecond. (call size[T](-[T](set, y)), ind. on (set: USet[T] : USCons))[0m  [33mtimeout[0m  [33mnativez3[0m  [33mUSet.scala:222:6[0m   [33m15.135[0m ║
[[34m  Info  [0m] ║ [33msubsetTail[0m          [33mpostcondition[0m                                                           [33mtimeout[0m  [33mnativez3[0m  [33mUSet.scala:168:5[0m   [33m15.097[0m ║
[[34m  Info  [0m] ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
[[34m  Info  [0m] ║ [31mtotal: 196  valid: 191  (188 from cache) invalid: 1    unknown: 4    time:  62.271[0m                                                       ║
[[34m  Info  [0m] ╚══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
[[34m  Info  [0m]   ┌─────────────────────┐
[[34m  Info  [0m] ╔═╡ [32mtermination summary[0m ╞══════════════════════════════════════════════════════════╗
[[34m  Info  [0m] ║ └─────────────────────┘                                                          ║
[[34m  Info  [0m] ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
[[34m  Info  [0m] ║ [32mtotal: 29   valid: 29   (0 from cache) invalid: 0    unknown: 0    time:   5.826[0m ║
[[34m  Info  [0m] ╚══════════════════════════════════════════════════════════════════════════════════╝
[[34m  Info  [0m] Cycle took 70746 ms
[[34m  Info  [0m] 
[[34m  Info  [0m] 
[[34m  Info  [0m] Waiting for source changes...
[[34m  Info  [0m] 
[[34m  Info  [0m] 
[[34m  Info  [0m] Detecting some file modifications...: /Users/rodamber/Workspace/LARA/automaton/USet.scala
[[31m Error  [0m] USet.scala:276:49: error: not found: value sizeEq
             }.holds because { sizeSubsetOf(set1, set2) && sizeEq(set1, set2) }
                                                           [31m^[0m
[[34m  Info  [0m]   ┌──────────────────────┐
[[34m  Info  [0m] ╔═╡ [32mverification summary[0m ╞═════════════════════════════════════════════════════════╗
[[34m  Info  [0m] ║ └──────────────────────┘                                                         ║
[[34m  Info  [0m] ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
[[34m  Info  [0m] ║ [32mtotal: 0    valid: 0    (0 from cache) invalid: 0    unknown: 0    time:   0.000[0m ║
[[34m  Info  [0m] ╚══════════════════════════════════════════════════════════════════════════════════╝
[[34m  Info  [0m]   ┌─────────────────────┐
[[34m  Info  [0m] ╔═╡ [32mtermination summary[0m ╞══════════════════════════════════════════════════════════╗
[[34m  Info  [0m] ║ └─────────────────────┘                                                          ║
[[34m  Info  [0m] ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
[[34m  Info  [0m] ║ [32mtotal: 0    valid: 0    (0 from cache) invalid: 0    unknown: 0    time:   0.000[0m ║
[[34m  Info  [0m] ╚══════════════════════════════════════════════════════════════════════════════════╝
[[34m  Info  [0m] Cycle took 1069 ms
[[34m  Info  [0m] 
[[34m  Info  [0m] 
[[34m  Info  [0m] Waiting for source changes...
[[34m  Info  [0m] 
[[34m  Info  [0m] 
[[34m  Info  [0m] Detecting some file modifications...: /Users/rodamber/Workspace/LARA/automaton/USet.scala
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for isEmpty @29:26...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for isEmpty @29:26...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set1))' VC for sizeStrictSubsetOf @275:5...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set1))' VC for sizeStrictSubsetOf @275:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set2))' VC for sizeStrictSubsetOf @275:17...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set2))' VC for sizeStrictSubsetOf @275:17...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for sizeStrictSubsetOf @273:70...
[[34m  Info  [0m] Cache miss: 'postcondition' VC for sizeStrictSubsetOf @273:70...
[[34m  Info  [0m]  - Now solving 'postcondition' VC for sizeStrictSubsetOf @273:70...
[[34m  Info  [0m] 
[[33mWarning [0m] Interrupted...
[[34m  Info  [0m]  - Result for 'postcondition' VC for sizeStrictSubsetOf @273:70:
[[33mWarning [0m]  => CANCELLED
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](set1, set2))' VC for unionSubset2 @195:19...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](set1, set2))' VC for unionSubset2 @195:19...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](set1, set2))' VC for unionSubset2 @195:50...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](set1, set2))' VC for unionSubset2 @195:50...
[[34m  Info  [0m]  - Checking cache: 'precond. (call unionSubset[T](set1, set2, ++[T](set1, s ...)' VC for unionSubset2 @196:21...
[[34m  Info  [0m] Cache hit: 'precond. (call unionSubset[T](set1, set2, ++[T](set1, s ...)' VC for unionSubset2 @196:21...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](set1, set2))' VC for unionSubset2 @196:45...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](set1, set2))' VC for unionSubset2 @196:45...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](set1, set2))' VC for unionSubset2 @196:73...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](set1, set2))' VC for unionSubset2 @196:73...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for unionSubset2 @193:64...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for unionSubset2 @193:64...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set1))' VC for sizeSubsetOf @270:5...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set1))' VC for sizeSubsetOf @270:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set2))' VC for sizeSubsetOf @270:18...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set2))' VC for sizeSubsetOf @270:18...
[[34m  Info  [0m]  - Checking cache: 'precond. (call subSubSize[T](set2, set1))' VC for sizeSubsetOf @271:21...
[[34m  Info  [0m] Cache hit: 'precond. (call subSubSize[T](set2, set1))' VC for sizeSubsetOf @271:21...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for sizeSubsetOf @268:64...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for sizeSubsetOf @268:64...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](--[T](set1, set2)))' VC for subSubSize @250:6...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](--[T](set1, set2)))' VC for subSubSize @250:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, set2))' VC for subSubSize @250:6...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, set2))' VC for subSubSize @250:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set1))' VC for subSubSize @250:28...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set1))' VC for subSubSize @250:28...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set2))' VC for subSubSize @250:40...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set2))' VC for subSubSize @250:40...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, ys))' VC for subSubSize @255:17...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, ys))' VC for subSubSize @255:17...
[[34m  Info  [0m]  - Checking cache: 'precond. (call subSubContains[T](set1, ys, y))' VC for subSubSize @255:49...
[[34m  Info  [0m] Cache hit: 'precond. (call subSubContains[T](set1, ys, y))' VC for subSubSize @255:49...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[BigInt, BigInt](|[BigInt, BigInt, BigI ...)' VC for subSubSize @257:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[BigInt, BigInt](|[BigInt, BigInt, BigI ...)' VC for subSubSize @257:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[BigInt, BigInt, BigInt](|[BigInt, BigI ...)' VC for subSubSize @257:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[BigInt, BigInt, BigInt](|[BigInt, BigI ...)' VC for subSubSize @257:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[BigInt, BigInt, BigInt](|[BigInt, BigI ...)' VC for subSubSize @257:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[BigInt, BigInt, BigInt](|[BigInt, BigI ...)' VC for subSubSize @257:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[BigInt, BigInt, BigInt](==|[BigInt]({ ...)' VC for subSubSize @257:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[BigInt, BigInt, BigInt](==|[BigInt]({ ...)' VC for subSubSize @257:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @257:10...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @257:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](--[T](set1, set2)))' VC for subSubSize @257:10...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](--[T](set1, set2)))' VC for subSubSize @257:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, set2))' VC for subSubSize @257:10...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, set2))' VC for subSubSize @257:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @258:10...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @258:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](-[T](--[T](set1, ys), y)))' VC for subSubSize @258:10...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](-[T](--[T](set1, ys), y)))' VC for subSubSize @258:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](--[T](set1, ys), y))' VC for subSubSize @258:10...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](--[T](set1, ys), y))' VC for subSubSize @258:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, ys))' VC for subSubSize @258:11...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, ys))' VC for subSubSize @258:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call subSize[T](--[T](set1, ys), y))' VC for subSubSize @258:37...
[[34m  Info  [0m] Cache hit: 'precond. (call subSize[T](--[T](set1, ys), y))' VC for subSubSize @258:37...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, ys))' VC for subSubSize @258:45...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, ys))' VC for subSubSize @258:45...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @259:10...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @259:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](--[T](set1, ys)))' VC for subSubSize @259:10...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](--[T](set1, ys)))' VC for subSubSize @259:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, ys))' VC for subSubSize @259:10...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, ys))' VC for subSubSize @259:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call subSubSize[T](set1, ys))' VC for subSubSize @259:37...
[[34m  Info  [0m] Cache hit: 'precond. (call subSubSize[T](set1, ys))' VC for subSubSize @259:37...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @260:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @260:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set1))' VC for subSubSize @260:9...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set1))' VC for subSubSize @260:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](ys))' VC for subSubSize @260:21...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](ys))' VC for subSubSize @260:21...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set1))' VC for subSubSize @261:9...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set1))' VC for subSubSize @261:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set2))' VC for subSubSize @261:21...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set2))' VC for subSubSize @261:21...
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for subSubSize @254:29...
[[34m  Info  [0m] Cache hit: 'body assertion' VC for subSubSize @254:29...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for subSubSize @248:62...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for subSubSize @248:62...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for subSubSize @252:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for subSubSize @252:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, set2))' VC for subSubContains @235:6...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, set2))' VC for subSubContains @235:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for subSubContains @240:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for subSubContains @240:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subSubContains @240:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subSubContains @240:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for subSubContains @240:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for subSubContains @240:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subSubContains @240:10...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for subSubContains @240:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, set2))' VC for subSubContains @240:10...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, set2))' VC for subSubContains @240:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subSubContains @241:10...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for subSubContains @241:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](--[T](set1, ys), y))' VC for subSubContains @241:10...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](--[T](set1, ys), y))' VC for subSubContains @241:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, ys))' VC for subSubContains @241:11...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, ys))' VC for subSubContains @241:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call subContains[T](--[T](set1, ys), y, z))' VC for subSubContains @241:44...
[[34m  Info  [0m] Cache hit: 'precond. (call subContains[T](--[T](set1, ys), y, z))' VC for subSubContains @241:44...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, ys))' VC for subSubContains @241:56...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, ys))' VC for subSubContains @241:56...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subSubContains @242:10...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for subSubContains @242:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, ys))' VC for subSubContains @242:10...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, ys))' VC for subSubContains @242:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call subSubContains[T](set1, ys, z))' VC for subSubContains @242:44...
[[34m  Info  [0m] Cache hit: 'precond. (call subSubContains[T](set1, ys, z))' VC for subSubContains @242:44...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for subSubContains @232:72...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for subSubContains @232:72...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for subSubContains @237:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for subSubContains @237:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](-[T](set, y)), ind. on (set: USet[T] : USCons))' VC for subSize @229:6...
[[34m  Info  [0m] Cache miss: 'precond. (call size[T](-[T](set, y)), ind. on (set: USet[T] : USCons))' VC for subSize @229:6...
[[34m  Info  [0m]  - Now solving 'precond. (call size[T](-[T](set, y)), ind. on (set: USet[T] : USCons))' VC for subSize @229:6...
[[34m  Info  [0m] 
[[33mWarning [0m] Interrupted...
[[34m  Info  [0m]  - Result for 'precond. (call size[T](-[T](set, y)), ind. on (set: USet[T] : USCons))' VC for subSize @229:6:
[[33mWarning [0m]  => CANCELLED
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](-[T](set, y)), ind. on (set: USet[T] : USNil))' VC for subSize @229:6...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](-[T](set, y)), ind. on (set: USet[T] : USNil))' VC for subSize @229:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](set, y), ind. on (set: USet[T] : USCons))' VC for subSize @229:6...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](set, y), ind. on (set: USet[T] : USCons))' VC for subSize @229:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](set, y), ind. on (set: USet[T] : USNil))' VC for subSize @229:6...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](set, y), ind. on (set: USet[T] : USNil))' VC for subSize @229:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set), ind. on (set: USet[T] : USCons))' VC for subSize @229:23...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set), ind. on (set: USet[T] : USCons))' VC for subSize @229:23...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](set), ind. on (set: USet[T] : USNil))' VC for subSize @229:23...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](set), ind. on (set: USet[T] : USNil))' VC for subSize @229:23...
[[34m  Info  [0m]  - Checking cache: 'postcond. (ind. on set: USet[T] / USCons)' VC for subSize @227:3...
[[34m  Info  [0m] Cache hit: 'postcond. (ind. on set: USet[T] / USCons)' VC for subSize @227:3...
[[34m  Info  [0m]  - Checking cache: 'postcond. (ind. on set: USet[T] / USNil)' VC for subSize @227:3...
[[34m  Info  [0m] Cache hit: 'postcond. (ind. on set: USet[T] / USNil)' VC for subSize @227:3...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](that))' VC for -- @85:15...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](that))' VC for -- @85:15...
[[34m  Info  [0m]  - Checking cache: 'precond. (call subInv[T](--[T](thiss, ys), y))' VC for -- @90:16...
[[34m  Info  [0m] Cache hit: 'precond. (call subInv[T](--[T](thiss, ys), y))' VC for -- @90:16...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](thiss, ys))' VC for -- @90:23...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](thiss, ys))' VC for -- @90:23...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](ys))' VC for -- @91:16...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](ys))' VC for -- @91:16...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](that))' VC for -- @91:26...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](that))' VC for -- @91:26...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](--[T](thiss, ys), y))' VC for -- @93:9...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](--[T](thiss, ys), y))' VC for -- @93:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](thiss, ys))' VC for -- @93:10...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](thiss, ys))' VC for -- @93:10...
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for -- @89:26...
[[34m  Info  [0m] Cache hit: 'body assertion' VC for -- @89:26...
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for -- @91:9...
[[34m  Info  [0m] Cache hit: 'body assertion' VC for -- @91:9...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for -- @95:16...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for -- @95:16...
[[34m  Info  [0m]  - Checking cache: 'body assertion: Measure not guaranteed positive' VC for -- @87:5...
[[34m  Info  [0m] Cache hit: 'body assertion: Measure not guaranteed positive' VC for -- @87:5...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for -- @87:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for -- @87:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](set, y))' VC for subInv @208:12...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](set, y))' VC for subInv @208:12...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for subInv @215:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for subInv @215:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subInv @215:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subInv @215:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subInv @215:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subInv @215:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for subInv @215:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for subInv @215:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subInv @215:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for subInv @215:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](set, y))' VC for subInv @215:16...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](set, y))' VC for subInv @215:16...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subInv @216:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for subInv @216:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](xs, y))' VC for subInv @216:26...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](xs, y))' VC for subInv @216:26...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subInv @217:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for subInv @217:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](xs, y))' VC for subInv @217:12...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](xs, y))' VC for subInv @217:12...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](xs, y))' VC for subInv @217:42...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](xs, y))' VC for subInv @217:42...
[[34m  Info  [0m]  - Checking cache: 'precond. (call subInv[T](xs, y))' VC for subInv @217:55...
[[34m  Info  [0m] Cache hit: 'precond. (call subInv[T](xs, y))' VC for subInv @217:55...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subInv @218:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for subInv @218:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](xs, y))' VC for subInv @218:11...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](xs, y))' VC for subInv @218:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call subContains[T](xs, y, x))' VC for subInv @218:55...
[[34m  Info  [0m] Cache hit: 'precond. (call subContains[T](xs, y, x))' VC for subInv @218:55...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for subInv @206:48...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for subInv @206:48...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for subInv @210:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for subInv @210:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](set, y), ind. on (set: USet[T] : USCons))' VC for subContains @203:6...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](set, y), ind. on (set: USet[T] : USCons))' VC for subContains @203:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](set, y), ind. on (set: USet[T] : USNil))' VC for subContains @203:6...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](set, y), ind. on (set: USet[T] : USNil))' VC for subContains @203:6...
[[34m  Info  [0m]  - Checking cache: 'postcond. (ind. on set: USet[T] / USCons)' VC for subContains @201:3...
[[34m  Info  [0m] Cache hit: 'postcond. (ind. on set: USet[T] / USCons)' VC for subContains @201:3...
[[34m  Info  [0m]  - Checking cache: 'postcond. (ind. on set: USet[T] / USNil)' VC for subContains @201:3...
[[34m  Info  [0m] Cache hit: 'postcond. (ind. on set: USet[T] / USNil)' VC for subContains @201:3...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](xs, y))' VC for - @79:24...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](xs, y))' VC for - @79:24...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for - @75:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for - @75:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](set1, set2))' VC for unionSubset @149:8...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](set1, set2))' VC for unionSubset @149:8...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for unionSubset @154:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for unionSubset @154:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @154:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @154:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @154:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @154:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @154:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @154:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @154:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @154:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for unionSubset @154:10...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for unionSubset @154:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @154:10...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @154:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](set1, set2))' VC for unionSubset @154:10...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](set1, set2))' VC for unionSubset @154:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @155:10...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @155:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](++[T](xs, set2), x))' VC for unionSubset @155:10...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](++[T](xs, set2), x))' VC for unionSubset @155:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](xs, set2))' VC for unionSubset @155:11...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](xs, set2))' VC for unionSubset @155:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @156:10...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @156:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](+[T](++[T](xs, set2), x), (x$7 ...)' VC for unionSubset @156:10...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](+[T](++[T](xs, set2), x), (x$7 ...)' VC for unionSubset @156:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](++[T](xs, set2), x))' VC for unionSubset @156:10...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](++[T](xs, set2), x))' VC for unionSubset @156:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](xs, set2))' VC for unionSubset @156:11...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](xs, set2))' VC for unionSubset @156:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call addForall[T](++[T](xs, set2), x, (y: T)  ...)' VC for unionSubset @157:11...
[[34m  Info  [0m] Cache hit: 'precond. (call addForall[T](++[T](xs, set2), x, (y: T)  ...)' VC for unionSubset @157:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](xs, set2))' VC for unionSubset @157:22...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](xs, set2))' VC for unionSubset @157:22...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @158:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @158:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](++[T](xs, set2), (x$8: T) => { ...)' VC for unionSubset @158:11...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](++[T](xs, set2), (x$8: T) => { ...)' VC for unionSubset @158:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](xs, set2))' VC for unionSubset @158:11...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](xs, set2))' VC for unionSubset @158:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @160:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @160:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](xs, set2))' VC for unionSubset @160:11...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](xs, set2))' VC for unionSubset @160:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call unionSubset[T](xs, set2, set3))' VC for unionSubset @160:63...
[[34m  Info  [0m] Cache hit: 'precond. (call unionSubset[T](xs, set2, set3))' VC for unionSubset @160:63...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @161:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @161:9...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for unionSubset @146:78...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for unionSubset @146:78...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for unionSubset @151:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for unionSubset @151:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](+[T](set, x), p ..., ind. on (set: USet[T] : USCons))' VC for addForall @143:6...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](+[T](set, x), p ..., ind. on (set: USet[T] : USCons))' VC for addForall @143:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](+[T](set, x), p ..., ind. on (set: USet[T] : USNil))' VC for addForall @143:6...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](+[T](set, x), p ..., ind. on (set: USet[T] : USNil))' VC for addForall @143:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](set, x), ind. on (set: USet[T] : USCons))' VC for addForall @143:6...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](set, x), ind. on (set: USet[T] : USCons))' VC for addForall @143:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](set, x), ind. on (set: USet[T] : USNil))' VC for addForall @143:6...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](set, x), ind. on (set: USet[T] : USNil))' VC for addForall @143:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](set, p), ind. on (set: USet[T] : USCons))' VC for addForall @143:29...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](set, p), ind. on (set: USet[T] : USCons))' VC for addForall @143:29...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](set, p), ind. on (set: USet[T] : USNil))' VC for addForall @143:29...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](set, p), ind. on (set: USet[T] : USNil))' VC for addForall @143:29...
[[34m  Info  [0m]  - Checking cache: 'postcond. (ind. on set: USet[T] / USCons)' VC for addForall @141:3...
[[34m  Info  [0m] Cache hit: 'postcond. (ind. on set: USet[T] / USCons)' VC for addForall @141:3...
[[34m  Info  [0m]  - Checking cache: 'postcond. (ind. on set: USet[T] / USNil)' VC for addForall @141:3...
[[34m  Info  [0m] Cache hit: 'postcond. (ind. on set: USet[T] / USNil)' VC for addForall @141:3...
[[34m  Info  [0m]  - Checking cache: 'lambda precondition' VC for addForall @141:40...
[[34m  Info  [0m] Cache hit: 'lambda precondition' VC for addForall @141:40...
[[34m  Info  [0m]  - Checking cache: 'lambda precondition' VC for addForall @143:46...
[[34m  Info  [0m] Cache hit: 'lambda precondition' VC for addForall @143:46...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](thiss))' VC for ++ @60:15...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](thiss))' VC for ++ @60:15...
[[34m  Info  [0m]  - Checking cache: 'precond. (call addInv[T](++[T](xs, that), x))' VC for ++ @65:16...
[[34m  Info  [0m] Cache hit: 'precond. (call addInv[T](++[T](xs, that), x))' VC for ++ @65:16...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](xs, that))' VC for ++ @65:23...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](xs, that))' VC for ++ @65:23...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](xs))' VC for ++ @66:16...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](xs))' VC for ++ @66:16...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](thiss))' VC for ++ @66:26...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](thiss))' VC for ++ @66:26...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](++[T](xs, that), x))' VC for ++ @68:9...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](++[T](xs, that), x))' VC for ++ @68:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](xs, that))' VC for ++ @68:10...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](xs, that))' VC for ++ @68:10...
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for ++ @64:26...
[[34m  Info  [0m] Cache hit: 'body assertion' VC for ++ @64:26...
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for ++ @66:9...
[[34m  Info  [0m] Cache hit: 'body assertion' VC for ++ @66:9...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for ++ @70:16...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for ++ @70:16...
[[34m  Info  [0m]  - Checking cache: 'body assertion: Measure not guaranteed positive' VC for ++ @62:5...
[[34m  Info  [0m] Cache hit: 'body assertion: Measure not guaranteed positive' VC for ++ @62:5...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for ++ @62:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for ++ @62:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call size[T](xs))' VC for size @39:33...
[[34m  Info  [0m] Cache hit: 'precond. (call size[T](xs))' VC for size @39:33...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for size @41:16...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for size @41:16...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for size @37:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for size @37:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](set, y))' VC for addInv @121:12...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](set, y))' VC for addInv @121:12...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for addInv @128:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for addInv @128:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for addInv @128:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for addInv @128:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for addInv @128:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for addInv @128:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for addInv @128:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for addInv @128:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for addInv @128:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for addInv @128:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @128:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @128:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](set, y))' VC for addInv @128:16...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](set, y))' VC for addInv @128:16...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @129:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @129:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](xs, y))' VC for addInv @129:26...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](xs, y))' VC for addInv @129:26...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @130:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @130:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](xs, y))' VC for addInv @130:12...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](xs, y))' VC for addInv @130:12...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](xs, y))' VC for addInv @130:42...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](xs, y))' VC for addInv @130:42...
[[34m  Info  [0m]  - Checking cache: 'precond. (call addInv[T](xs, y))' VC for addInv @130:55...
[[34m  Info  [0m] Cache hit: 'precond. (call addInv[T](xs, y))' VC for addInv @130:55...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @131:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @131:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](xs, y))' VC for addInv @131:11...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](xs, y))' VC for addInv @131:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call addContains[T](xs, y, x))' VC for addInv @131:55...
[[34m  Info  [0m] Cache hit: 'precond. (call addContains[T](xs, y, x))' VC for addInv @131:55...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @132:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @132:9...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for addInv @119:48...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for addInv @119:48...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for addInv @123:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for addInv @123:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](set, y), ind. on (set: USet[T] : USCons))' VC for addContains @116:6...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](set, y), ind. on (set: USet[T] : USCons))' VC for addContains @116:6...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](set, y), ind. on (set: USet[T] : USNil))' VC for addContains @116:6...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](set, y), ind. on (set: USet[T] : USNil))' VC for addContains @116:6...
[[34m  Info  [0m]  - Checking cache: 'postcond. (ind. on set: USet[T] / USCons)' VC for addContains @114:3...
[[34m  Info  [0m] Cache hit: 'postcond. (ind. on set: USet[T] / USCons)' VC for addContains @114:3...
[[34m  Info  [0m]  - Checking cache: 'postcond. (ind. on set: USet[T] / USNil)' VC for addContains @114:3...
[[34m  Info  [0m] Cache hit: 'postcond. (ind. on set: USet[T] / USNil)' VC for addContains @114:3...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](xs, y))' VC for + @53:21...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](xs, y))' VC for + @53:21...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for + @46:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for + @46:5...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for setInv @106:42...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for setInv @106:42...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for subsetOfId @185:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for subsetOfId @185:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subsetOfId @185:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subsetOfId @185:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for subsetOfId @185:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for subsetOfId @185:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subsetOfId @185:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for subsetOfId @185:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subsetOfId @186:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for subsetOfId @186:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](set, p))' VC for subsetOfId @186:9...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](set, p))' VC for subsetOfId @186:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subsetOfId @187:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for subsetOfId @187:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](xs, p))' VC for subsetOfId @187:31...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](xs, p))' VC for subsetOfId @187:31...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for subsetOfId @178:5...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for subsetOfId @178:5...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for subsetOfId @180:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for subsetOfId @180:5...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for subsetTail @171:5...
[[34m  Info  [0m] Cache miss: 'postcondition' VC for subsetTail @171:5...
[[34m  Info  [0m]  - Now solving 'postcondition' VC for subsetTail @171:5...
[[34m  Info  [0m] 
[[33mWarning [0m] Interrupted...
[[34m  Info  [0m]  - Result for 'postcondition' VC for subsetTail @171:5:
[[33mWarning [0m]  => CANCELLED
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for subsetTail @171:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for subsetTail @171:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](thiss, (x$3: T) => { ...)' VC for subsetOf @23:42...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](thiss, (x$3: T) => { ...)' VC for subsetOf @23:42...
[[34m  Info  [0m]  - Checking cache: 'precond. (call exists[T](thiss, (x$2: T) => { ...)' VC for contains @21:33...
[[34m  Info  [0m] Cache hit: 'precond. (call exists[T](thiss, (x$2: T) => { ...)' VC for contains @21:33...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](thiss, (x$1: T) => { ...)' VC for exists @19:42...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](thiss, (x$1: T) => { ...)' VC for exists @19:42...
[[34m  Info  [0m]  - Checking cache: 'lambda precondition' VC for exists @19:14...
[[34m  Info  [0m] Cache hit: 'lambda precondition' VC for exists @19:14...
[[34m  Info  [0m]  - Checking cache: 'lambda precondition' VC for exists @19:50...
[[34m  Info  [0m] Cache hit: 'lambda precondition' VC for exists @19:50...
[[34m  Info  [0m]  - Checking cache: 'lambda precondition' VC for exists @19:50...
[[34m  Info  [0m] Cache hit: 'lambda precondition' VC for exists @19:50...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](xs, p))' VC for forall @16:35...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](xs, p))' VC for forall @16:35...
[[34m  Info  [0m]  - Checking cache: 'lambda precondition' VC for forall @14:14...
[[34m  Info  [0m] Cache hit: 'lambda precondition' VC for forall @14:14...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for forall @14:42...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for forall @14:42...
[[34m  Info  [0m]  - Checking cache: 'lambda precondition' VC for forall @16:27...
[[34m  Info  [0m] Cache hit: 'lambda precondition' VC for forall @16:27...
[[34m  Info  [0m] Result for forall
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for setInv
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for size
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for setInv
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for +
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for setInv
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for addInv
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for ++
[[34m  Info  [0m]  => CLEARED (Decreases Processor)
[[34m  Info  [0m] Result for setInv
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for -
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for setInv
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for subInv
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for --
[[34m  Info  [0m]  => CLEARED (Decreases Processor)
[[34m  Info  [0m] Result for unionSubset
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for subSubContains
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for subSubSize
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m]   ┌──────────────────────┐
[[34m  Info  [0m] ╔═╡ [31mverification summary[0m ╞══════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
[[34m  Info  [0m] ║ └──────────────────────┘                                                                                                                  ║
[[34m  Info  [0m] ║ [33msizeStrictSubsetOf[0m  [33mpostcondition[0m                                                           [33mcancelled[0m  [33mnativez3[0m  [33mUSet.scala:273:70[0m  [33m4.492[0m ║
[[34m  Info  [0m] ║ [33msubSize[0m             [33mprecond. (call size[T](-[T](set, y)), ind. on (set: USet[T] : USCons))[0m  [33mcancelled[0m  [33mnativez3[0m  [33mUSet.scala:229:6[0m   [33m1.884[0m ║
[[34m  Info  [0m] ║ [33msubsetTail[0m          [33mpostcondition[0m                                                           [33mcancelled[0m  [33mnativez3[0m  [33mUSet.scala:171:5[0m   [33m1.761[0m ║
[[34m  Info  [0m] ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
[[34m  Info  [0m] ║ [31mtotal: 184  valid: 181  (181 from cache) invalid: 0    unknown: 3    time:   9.492[0m                                                        ║
[[34m  Info  [0m] ╚═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
[[34m  Info  [0m]   ┌─────────────────────┐
[[34m  Info  [0m] ╔═╡ [32mtermination summary[0m ╞══════════════════════════════════════════════════════════╗
[[34m  Info  [0m] ║ └─────────────────────┘                                                          ║
[[34m  Info  [0m] ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
[[34m  Info  [0m] ║ [32mtotal: 27   valid: 27   (0 from cache) invalid: 0    unknown: 0    time:   5.771[0m ║
[[34m  Info  [0m] ╚══════════════════════════════════════════════════════════════════════════════════╝
[[34m  Info  [0m] Cycle took 17295 ms
[[34m  Info  [0m] 
[[34m  Info  [0m] 
[[34m  Info  [0m] Waiting for source changes...
[[34m  Info  [0m] 
[[34m  Info  [0m] 
