[[33mWarning [0m] Parallelism is disabled.
[[31m Error  [0m] Automaton.scala:75:25: error: not found: value alphabet
               require(word.forall(alphabet contains _))
                                   [31m^[0m
[[34m  Info  [0m] Cycle took 4250 ms
[[34m  Info  [0m] 
[[34m  Info  [0m] 
[[34m  Info  [0m] Waiting for source changes...
[[34m  Info  [0m] 
[[34m  Info  [0m] 
[[34m  Info  [0m] Detecting some file modifications...: /Users/rodamber/Workspace/LARA/automaton/Automaton.scala
[[33mWarning [0m] The Z3 native interface is not available. Falling back onto smt-z3.
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @42:49...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @42:49...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @44:5...
[[34m  Info  [0m] Cache miss: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @44:5...
[[34m  Info  [0m]  - Now solving 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @44:5...
[[34m  Info  [0m]  - Result for 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @44:5:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[Set[State], Sym](apply[State, Sym](n ...)' VC for lemma @44:30...
[[34m  Info  [0m] Cache miss: 'precond. (call run[Set[State], Sym](apply[State, Sym](n ...)' VC for lemma @44:30...
[[34m  Info  [0m]  - Now solving 'precond. (call run[Set[State], Sym](apply[State, Sym](n ...)' VC for lemma @44:30...
[[34m  Info  [0m]  - Result for 'precond. (call run[Set[State], Sym](apply[State, Sym](n ...)' VC for lemma @44:30:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for lemma @50:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for lemma @50:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for lemma @50:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for lemma @50:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @50:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @50:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @50:10...
[[34m  Info  [0m] Cache hit: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @50:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @50:35...
[[34m  Info  [0m] Cache miss: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @50:35...
[[34m  Info  [0m]  - Now solving 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @50:35...
[[34m  Info  [0m]  - Result for 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @50:35:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @51:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @51:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @51:10...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @51:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @51:36...
[[34m  Info  [0m] Cache miss: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @51:36...
[[34m  Info  [0m]  - Now solving 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @51:36...
[[34m  Info  [0m]  - Result for 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @51:36:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @52:12...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @52:12...
[[34m  Info  [0m]  - Checking cache: 'precond. (call eqTrans[State](states, epsClosure[State, ...)' VC for lemma @53:14...
[[34m  Info  [0m] Cache hit: 'precond. (call eqTrans[State](states, epsClosure[State, ...)' VC for lemma @53:14...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @53:30...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @53:30...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @53:54...
[[34m  Info  [0m] Cache miss: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @53:54...
[[34m  Info  [0m]  - Now solving 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @53:54...
[[34m  Info  [0m]  - Result for 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @53:54:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @54:20...
[[34m  Info  [0m] Cache miss: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @54:20...
[[34m  Info  [0m]  - Now solving 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @54:20...
[[34m  Info  [0m]  - Result for 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @54:20:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'precond. (call move[State, Sym](nfa, states, Some[Sym]( ...)' VC for lemma @58:20...
[[34m  Info  [0m] Cache hit: 'precond. (call move[State, Sym](nfa, states, Some[Sym]( ...)' VC for lemma @58:20...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosureIdem[State, Sym](nfa, step))' VC for lemma @60:16...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosureIdem[State, Sym](nfa, step))' VC for lemma @60:16...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosed[State, Sym](nfa, epsClosure[St ...)' VC for lemma @61:16...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosed[State, Sym](nfa, epsClosure[St ...)' VC for lemma @61:16...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @61:30...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @61:30...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for lemma @63:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for lemma @63:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for lemma @63:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for lemma @63:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @63:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @63:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @63:10...
[[34m  Info  [0m] Cache hit: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @63:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @63:35...
[[34m  Info  [0m] Cache hit: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @63:35...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @64:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @64:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @64:10...
[[34m  Info  [0m] Cache hit: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @64:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[Set[State], Sym](dfa, epsClosure[Sta ...)' VC for lemma @64:35...
[[34m  Info  [0m] Cache hit: 'precond. (call run[Set[State], Sym](dfa, epsClosure[Sta ...)' VC for lemma @64:35...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @64:43...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @64:43...
[[34m  Info  [0m]  - Checking cache: 'precond. (call lemma[State, Sym](nfa, epsClosure[State, ...)' VC for lemma @65:12...
[[34m  Info  [0m] Cache hit: 'precond. (call lemma[State, Sym](nfa, epsClosure[State, ...)' VC for lemma @65:12...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @65:23...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @65:23...
[[34m  Info  [0m]  - Checking cache: 'precond. (call eqTrans[State](run[State, Sym](nfa, stat ...)' VC for lemma @66:14...
[[34m  Info  [0m] Cache hit: 'precond. (call eqTrans[State](run[State, Sym](nfa, stat ...)' VC for lemma @66:14...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @66:22...
[[34m  Info  [0m] Cache hit: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @66:22...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[Set[State], Sym](dfa, epsClosure[Sta ...)' VC for lemma @67:22...
[[34m  Info  [0m] Cache hit: 'precond. (call run[Set[State], Sym](dfa, epsClosure[Sta ...)' VC for lemma @67:22...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @67:30...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @67:30...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, epsClosure[State, S ...)' VC for lemma @68:22...
[[34m  Info  [0m] Cache hit: 'precond. (call run[State, Sym](nfa, epsClosure[State, S ...)' VC for lemma @68:22...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @68:30...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @68:30...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @69:10...
[[34m  Info  [0m] Cache hit: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @69:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, epsClosure[State, S ...)' VC for lemma @69:35...
[[34m  Info  [0m] Cache hit: 'precond. (call run[State, Sym](nfa, epsClosure[State, S ...)' VC for lemma @69:35...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @69:43...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @69:43...
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for lemma @60:9...
[[34m  Info  [0m] Cache hit: 'body assertion' VC for lemma @60:9...
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for lemma @61:9...
[[34m  Info  [0m] Cache hit: 'body assertion' VC for lemma @61:9...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for lemma @41:53...
[[34m  Info  [0m] Cache hit: 'postcondition' VC for lemma @41:53...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for lemma @48:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for lemma @48:5...
[[34m  Info  [0m]   ┌──────────────────────┐
[[34m  Info  [0m] ╔═╡ [31mverification summary[0m ╞══════════════════════════════════════════════════════════════════════════════════════════════╗
[[34m  Info  [0m] ║ └──────────────────────┘                                                                                              ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call run[State, Sym](nfa, states, word))[0m            [33mtimeout[0m  [33mU:smt-z3[0m  [33mAutomaton.scala:44:5[0m   [33m20.636[0m ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call run[Set[State], Sym](apply[State, Sym](n ...)[0m  [33mtimeout[0m  [33mU:smt-z3[0m  [33mAutomaton.scala:44:30[0m  [33m22.792[0m ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call run[Set[State], Sym](dfa, states, word))[0m       [33mtimeout[0m  [33mU:smt-z3[0m  [33mAutomaton.scala:50:35[0m  [33m45.439[0m ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call run[Set[State], Sym](dfa, states, word))[0m       [33mtimeout[0m  [33mU:smt-z3[0m  [33mAutomaton.scala:51:36[0m  [33m41.443[0m ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call run[Set[State], Sym](dfa, states, word))[0m       [33mtimeout[0m  [33mU:smt-z3[0m  [33mAutomaton.scala:53:54[0m  [33m43.570[0m ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call run[Set[State], Sym](dfa, states, word))[0m       [33mtimeout[0m  [33mU:smt-z3[0m  [33mAutomaton.scala:54:20[0m  [33m35.588[0m ║
[[34m  Info  [0m] ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
[[34m  Info  [0m] ║ [31mtotal: 41   valid: 35   (35 from cache) invalid: 0    unknown: 6    time: 211.667[0m                                     ║
[[34m  Info  [0m] ╚═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
[[34m  Info  [0m] Cycle took 216703 ms
[[34m  Info  [0m] 
[[34m  Info  [0m] 
[[34m  Info  [0m] Waiting for source changes...
[[34m  Info  [0m] 
[[34m  Info  [0m] 
[[34m  Info  [0m] Detecting some file modifications...: /Users/rodamber/Workspace/LARA/automaton/Automaton.scala
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[Sym](word, (x$1: Sym) => { ...)' VC for lemma @43:13...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[Sym](word, (x$1: Sym) => { ...)' VC for lemma @43:13...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @44:13...
[[34m  Info  [0m] Cache miss: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @44:13...
[[34m  Info  [0m]  - Now solving 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @44:13...
[[34m  Info  [0m]  - Result for 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @44:13:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @46:5...
[[34m  Info  [0m] Cache miss: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @46:5...
[[34m  Info  [0m]  - Now solving 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @46:5...
[[34m  Info  [0m]  - Result for 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @46:5:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[Set[State], Sym](apply[State, Sym](n ...)' VC for lemma @46:30...
[[34m  Info  [0m] Cache miss: 'precond. (call run[Set[State], Sym](apply[State, Sym](n ...)' VC for lemma @46:30...
[[34m  Info  [0m]  - Now solving 'precond. (call run[Set[State], Sym](apply[State, Sym](n ...)' VC for lemma @46:30...
[[34m  Info  [0m]  - Result for 'precond. (call run[Set[State], Sym](apply[State, Sym](n ...)' VC for lemma @46:30:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for lemma @52:9...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for lemma @52:9...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for lemma @52:9...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for lemma @52:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for lemma @52:9...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for lemma @52:9...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for lemma @52:9...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for lemma @52:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @52:9...
[[34m  Info  [0m] Cache miss: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @52:9...
[[34m  Info  [0m]  - Now solving 'precond. (call ==|[Boolean]({ ...)' VC for lemma @52:9...
[[34m  Info  [0m]  - Result for 'precond. (call ==|[Boolean]({ ...)' VC for lemma @52:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @52:10...
[[34m  Info  [0m] Cache miss: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @52:10...
[[34m  Info  [0m]  - Now solving 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @52:10...
[[34m  Info  [0m]  - Result for 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @52:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @52:35...
[[34m  Info  [0m] Cache miss: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @52:35...
[[34m  Info  [0m]  - Now solving 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @52:35...
[[34m  Info  [0m]  - Result for 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @52:35:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @53:9...
[[34m  Info  [0m] Cache miss: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @53:9...
[[34m  Info  [0m]  - Now solving 'precond. (call ==|[Boolean]({ ...)' VC for lemma @53:9...
[[34m  Info  [0m]  - Result for 'precond. (call ==|[Boolean]({ ...)' VC for lemma @53:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @53:10...
[[34m  Info  [0m] Cache miss: 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @53:10...
[[34m  Info  [0m]  - Now solving 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @53:10...
[[34m  Info  [0m]  - Result for 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @53:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @53:36...
[[34m  Info  [0m] Cache miss: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @53:36...
[[34m  Info  [0m]  - Now solving 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @53:36...
[[34m  Info  [0m]  - Result for 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @53:36:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @54:12...
[[34m  Info  [0m] Cache miss: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @54:12...
[[34m  Info  [0m]  - Now solving 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @54:12...
[[34m  Info  [0m]  - Result for 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @54:12:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call eqTrans[State](states, epsClosure[State, ...)' VC for lemma @55:14...
[[34m  Info  [0m] Cache miss: 'precond. (call eqTrans[State](states, epsClosure[State, ...)' VC for lemma @55:14...
[[34m  Info  [0m]  - Now solving 'precond. (call eqTrans[State](states, epsClosure[State, ...)' VC for lemma @55:14...
[[34m  Info  [0m]  - Result for 'precond. (call eqTrans[State](states, epsClosure[State, ...)' VC for lemma @55:14:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @55:30...
[[34m  Info  [0m] Cache miss: 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @55:30...
[[34m  Info  [0m]  - Now solving 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @55:30...
[[34m  Info  [0m]  - Result for 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @55:30:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @55:54...
[[34m  Info  [0m] Cache miss: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @55:54...
[[34m  Info  [0m]  - Now solving 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @55:54...
[[34m  Info  [0m]  - Result for 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @55:54:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @56:20...
[[34m  Info  [0m] Cache miss: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @56:20...
[[34m  Info  [0m]  - Now solving 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @56:20...
[[34m  Info  [0m]  - Result for 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @56:20:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'precond. (call move[State, Sym](nfa, states, Some[Sym]( ...)' VC for lemma @60:20...
[[34m  Info  [0m] Cache miss: 'precond. (call move[State, Sym](nfa, states, Some[Sym]( ...)' VC for lemma @60:20...
[[34m  Info  [0m]  - Now solving 'precond. (call move[State, Sym](nfa, states, Some[Sym]( ...)' VC for lemma @60:20...
[[34m  Info  [0m]  - Result for 'precond. (call move[State, Sym](nfa, states, Some[Sym]( ...)' VC for lemma @60:20:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosureIdem[State, Sym](nfa, step))' VC for lemma @62:16...
[[34m  Info  [0m] Cache miss: 'precond. (call epsClosureIdem[State, Sym](nfa, step))' VC for lemma @62:16...
[[34m  Info  [0m]  - Now solving 'precond. (call epsClosureIdem[State, Sym](nfa, step))' VC for lemma @62:16...
[[34m  Info  [0m]  - Result for 'precond. (call epsClosureIdem[State, Sym](nfa, step))' VC for lemma @62:16:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosed[State, Sym](nfa, epsClosure[St ...)' VC for lemma @63:16...
[[34m  Info  [0m] Cache miss: 'precond. (call epsClosed[State, Sym](nfa, epsClosure[St ...)' VC for lemma @63:16...
[[34m  Info  [0m]  - Now solving 'precond. (call epsClosed[State, Sym](nfa, epsClosure[St ...)' VC for lemma @63:16...
[[34m  Info  [0m]  - Result for 'precond. (call epsClosed[State, Sym](nfa, epsClosure[St ...)' VC for lemma @63:16:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @63:30...
[[34m  Info  [0m] Cache miss: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @63:30...
[[34m  Info  [0m]  - Now solving 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @63:30...
[[34m  Info  [0m]  - Result for 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @63:30:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for lemma @65:9...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for lemma @65:9...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for lemma @65:9...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for lemma @65:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for lemma @65:9...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for lemma @65:9...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for lemma @65:9...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for lemma @65:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @65:9...
[[34m  Info  [0m] Cache miss: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @65:9...
[[34m  Info  [0m]  - Now solving 'precond. (call ==|[Boolean]({ ...)' VC for lemma @65:9...
[[34m  Info  [0m]  - Result for 'precond. (call ==|[Boolean]({ ...)' VC for lemma @65:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @65:10...
[[34m  Info  [0m] Cache miss: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @65:10...
[[34m  Info  [0m]  - Now solving 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @65:10...
[[34m  Info  [0m]  - Result for 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @65:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @65:35...
[[34m  Info  [0m] Cache miss: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @65:35...
[[34m  Info  [0m]  - Now solving 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @65:35...
[[34m  Info  [0m]  - Result for 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @65:35:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @66:9...
[[34m  Info  [0m] Cache miss: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @66:9...
[[34m  Info  [0m]  - Now solving 'precond. (call ==|[Boolean]({ ...)' VC for lemma @66:9...
[[34m  Info  [0m]  - Result for 'precond. (call ==|[Boolean]({ ...)' VC for lemma @66:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @66:10...
[[34m  Info  [0m] Cache hit: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @66:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[Set[State], Sym](dfa, epsClosure[Sta ...)' VC for lemma @66:35...
[[34m  Info  [0m] Cache miss: 'precond. (call run[Set[State], Sym](dfa, epsClosure[Sta ...)' VC for lemma @66:35...
[[34m  Info  [0m]  - Now solving 'precond. (call run[Set[State], Sym](dfa, epsClosure[Sta ...)' VC for lemma @66:35...
[[34m  Info  [0m]  - Result for 'precond. (call run[Set[State], Sym](dfa, epsClosure[Sta ...)' VC for lemma @66:35:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @66:43...
[[34m  Info  [0m] Cache miss: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @66:43...
[[34m  Info  [0m]  - Now solving 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @66:43...
[[34m  Info  [0m]  - Result for 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @66:43:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call lemma[State, Sym](nfa, epsClosure[State, ...)' VC for lemma @67:12...
[[34m  Info  [0m] Cache miss: 'precond. (call lemma[State, Sym](nfa, epsClosure[State, ...)' VC for lemma @67:12...
[[34m  Info  [0m]  - Now solving 'precond. (call lemma[State, Sym](nfa, epsClosure[State, ...)' VC for lemma @67:12...
[[34m  Info  [0m]  - Result for 'precond. (call lemma[State, Sym](nfa, epsClosure[State, ...)' VC for lemma @67:12:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @67:23...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @67:23...
[[34m  Info  [0m]  - Checking cache: 'precond. (call eqTrans[State](run[State, Sym](nfa, stat ...)' VC for lemma @68:14...
[[34m  Info  [0m] Cache miss: 'precond. (call eqTrans[State](run[State, Sym](nfa, stat ...)' VC for lemma @68:14...
[[34m  Info  [0m]  - Now solving 'precond. (call eqTrans[State](run[State, Sym](nfa, stat ...)' VC for lemma @68:14...
[[34m  Info  [0m]  - Result for 'precond. (call eqTrans[State](run[State, Sym](nfa, stat ...)' VC for lemma @68:14:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @68:22...
[[34m  Info  [0m] Cache miss: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @68:22...
[[34m  Info  [0m]  - Now solving 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @68:22...
[[34m  Info  [0m]  - Result for 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @68:22:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[Set[State], Sym](dfa, epsClosure[Sta ...)' VC for lemma @69:22...
[[34m  Info  [0m] Cache miss: 'precond. (call run[Set[State], Sym](dfa, epsClosure[Sta ...)' VC for lemma @69:22...
[[34m  Info  [0m]  - Now solving 'precond. (call run[Set[State], Sym](dfa, epsClosure[Sta ...)' VC for lemma @69:22...
[[34m  Info  [0m]  - Result for 'precond. (call run[Set[State], Sym](dfa, epsClosure[Sta ...)' VC for lemma @69:22:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @69:30...
[[34m  Info  [0m] Cache miss: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @69:30...
[[34m  Info  [0m]  - Now solving 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @69:30...
[[34m  Info  [0m]  - Result for 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @69:30:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, epsClosure[State, S ...)' VC for lemma @70:22...
[[34m  Info  [0m] Cache miss: 'precond. (call run[State, Sym](nfa, epsClosure[State, S ...)' VC for lemma @70:22...
[[34m  Info  [0m]  - Now solving 'precond. (call run[State, Sym](nfa, epsClosure[State, S ...)' VC for lemma @70:22...
[[34m  Info  [0m]  - Result for 'precond. (call run[State, Sym](nfa, epsClosure[State, S ...)' VC for lemma @70:22:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @70:30...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @70:30...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @71:10...
[[34m  Info  [0m] Cache hit: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @71:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, epsClosure[State, S ...)' VC for lemma @71:35...
[[34m  Info  [0m] Cache miss: 'precond. (call run[State, Sym](nfa, epsClosure[State, S ...)' VC for lemma @71:35...
[[34m  Info  [0m]  - Now solving 'precond. (call run[State, Sym](nfa, epsClosure[State, S ...)' VC for lemma @71:35...
[[34m  Info  [0m]  - Result for 'precond. (call run[State, Sym](nfa, epsClosure[State, S ...)' VC for lemma @71:35:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @71:43...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @71:43...
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for lemma @62:9...
[[34m  Info  [0m] Cache miss: 'body assertion' VC for lemma @62:9...
[[34m  Info  [0m]  - Now solving 'body assertion' VC for lemma @62:9...
[[34m  Info  [0m]  - Result for 'body assertion' VC for lemma @62:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for lemma @63:9...
[[34m  Info  [0m] Cache miss: 'body assertion' VC for lemma @63:9...
[[34m  Info  [0m]  - Now solving 'body assertion' VC for lemma @63:9...
[[34m  Info  [0m]  - Result for 'body assertion' VC for lemma @63:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for lemma @41:53...
[[34m  Info  [0m] Cache miss: 'postcondition' VC for lemma @41:53...
[[34m  Info  [0m]  - Now solving 'postcondition' VC for lemma @41:53...
[[34m  Info  [0m]  - Result for 'postcondition' VC for lemma @41:53:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for lemma @50:5...
[[34m  Info  [0m] Cache miss: 'match exhaustiveness' VC for lemma @50:5...
[[34m  Info  [0m]  - Now solving 'match exhaustiveness' VC for lemma @50:5...
[[34m  Info  [0m]  - Result for 'match exhaustiveness' VC for lemma @50:5:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]   ┌──────────────────────┐
[[34m  Info  [0m] ╔═╡ [31mverification summary[0m ╞══════════════════════════════════════════════════════════════════════════════════════════════╗
[[34m  Info  [0m] ║ └──────────────────────┘                                                                                              ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call run[Set[State], Sym](apply[State, Sym](n ...)[0m  [33mtimeout[0m  [33mU:smt-z3[0m  [33mAutomaton.scala:46:30[0m  [33m22.098[0m ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call run[Set[State], Sym](dfa, states, word))[0m       [33mtimeout[0m  [33mU:smt-z3[0m  [33mAutomaton.scala:52:35[0m  [33m45.409[0m ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call run[Set[State], Sym](dfa, states, word))[0m       [33mtimeout[0m  [33mU:smt-z3[0m  [33mAutomaton.scala:53:36[0m  [33m43.166[0m ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call run[Set[State], Sym](dfa, states, word))[0m       [33mtimeout[0m  [33mU:smt-z3[0m  [33mAutomaton.scala:55:54[0m  [33m43.694[0m ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call run[Set[State], Sym](dfa, states, word))[0m       [33mtimeout[0m  [33mU:smt-z3[0m  [33mAutomaton.scala:56:20[0m  [33m44.172[0m ║
[[34m  Info  [0m] ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
[[34m  Info  [0m] ║ [31mtotal: 42   valid: 37   (5 from cache) invalid: 0    unknown: 5    time: 220.164[0m                                      ║
[[34m  Info  [0m] ╚═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
[[34m  Info  [0m] Cycle took 224642 ms
[[34m  Info  [0m] 
[[34m  Info  [0m] 
[[34m  Info  [0m] Waiting for source changes...
[[34m  Info  [0m] 
[[34m  Info  [0m] 
[[34m  Info  [0m] Detecting some file modifications...: /Users/rodamber/Workspace/LARA/automaton/Automaton.scala
[[34m  Info  [0m]   ┌──────────────────────┐
[[34m  Info  [0m] ╔═╡ [31mverification summary[0m ╞══════════════════════════════════════════════════════════════════════════════════════════════╗
[[34m  Info  [0m] ║ └──────────────────────┘                                                                                              ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call run[Set[State], Sym](apply[State, Sym](n ...)[0m  [33mtimeout[0m  [33mU:smt-z3[0m  [33mAutomaton.scala:46:30[0m  [33m22.098[0m ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call run[Set[State], Sym](dfa, states, word))[0m       [33mtimeout[0m  [33mU:smt-z3[0m  [33mAutomaton.scala:52:35[0m  [33m45.409[0m ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call run[Set[State], Sym](dfa, states, word))[0m       [33mtimeout[0m  [33mU:smt-z3[0m  [33mAutomaton.scala:53:36[0m  [33m43.166[0m ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call run[Set[State], Sym](dfa, states, word))[0m       [33mtimeout[0m  [33mU:smt-z3[0m  [33mAutomaton.scala:55:54[0m  [33m43.694[0m ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call run[Set[State], Sym](dfa, states, word))[0m       [33mtimeout[0m  [33mU:smt-z3[0m  [33mAutomaton.scala:56:20[0m  [33m44.172[0m ║
[[34m  Info  [0m] ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
[[34m  Info  [0m] ║ [31mtotal: 42   valid: 37   (5 from cache) invalid: 0    unknown: 5    time: 220.164[0m                                      ║
[[34m  Info  [0m] ╚═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
[[34m  Info  [0m] Cycle took 1932 ms
[[34m  Info  [0m] 
[[34m  Info  [0m] 
[[34m  Info  [0m] Waiting for source changes...
[[34m  Info  [0m] 
[[34m  Info  [0m] 
[[34m  Info  [0m] Detecting some file modifications...: /Users/rodamber/Workspace/LARA/automaton/Automaton.scala
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[Sym](word, (x$1: Sym) => { ...)' VC for lemma @43:13...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[Sym](word, (x$1: Sym) => { ...)' VC for lemma @43:13...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @44:13...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @44:13...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @46:5...
[[34m  Info  [0m] Cache hit: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @46:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for lemma @53:9...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for lemma @53:9...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for lemma @53:9...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for lemma @53:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for lemma @53:9...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for lemma @53:9...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for lemma @53:9...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for lemma @53:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @53:9...
[[34m  Info  [0m] Cache miss: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @53:9...
[[34m  Info  [0m]  - Now solving 'precond. (call ==|[Boolean]({ ...)' VC for lemma @53:9...
[[34m  Info  [0m]  - Result for 'precond. (call ==|[Boolean]({ ...)' VC for lemma @53:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @53:10...
[[34m  Info  [0m] Cache miss: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @53:10...
[[34m  Info  [0m]  - Now solving 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @53:10...
[[34m  Info  [0m]  - Result for 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @53:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @53:35...
[[34m  Info  [0m] Cache miss: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @53:35...
[[34m  Info  [0m]  - Now solving 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @53:35...
[[34m  Info  [0m]  - Result for 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @53:35:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @54:9...
[[34m  Info  [0m] Cache miss: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @54:9...
[[34m  Info  [0m]  - Now solving 'precond. (call ==|[Boolean]({ ...)' VC for lemma @54:9...
[[34m  Info  [0m]  - Result for 'precond. (call ==|[Boolean]({ ...)' VC for lemma @54:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @54:10...
[[34m  Info  [0m] Cache miss: 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @54:10...
[[34m  Info  [0m]  - Now solving 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @54:10...
[[34m  Info  [0m]  - Result for 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @54:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @54:36...
[[34m  Info  [0m] Cache miss: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @54:36...
[[34m  Info  [0m]  - Now solving 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @54:36...
[[34m  Info  [0m]  - Result for 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @54:36:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @55:12...
[[34m  Info  [0m] Cache miss: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @55:12...
[[34m  Info  [0m]  - Now solving 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @55:12...
[[34m  Info  [0m]  - Result for 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @55:12:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call eqTrans[State](states, epsClosure[State, ...)' VC for lemma @56:14...
[[34m  Info  [0m] Cache miss: 'precond. (call eqTrans[State](states, epsClosure[State, ...)' VC for lemma @56:14...
[[34m  Info  [0m]  - Now solving 'precond. (call eqTrans[State](states, epsClosure[State, ...)' VC for lemma @56:14...
[[34m  Info  [0m]  - Result for 'precond. (call eqTrans[State](states, epsClosure[State, ...)' VC for lemma @56:14:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @56:30...
[[34m  Info  [0m] Cache miss: 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @56:30...
[[34m  Info  [0m]  - Now solving 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @56:30...
[[34m  Info  [0m]  - Result for 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @56:30:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @56:54...
[[34m  Info  [0m] Cache miss: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @56:54...
[[34m  Info  [0m]  - Now solving 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @56:54...
[[34m  Info  [0m]  - Result for 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @56:54:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @57:20...
[[34m  Info  [0m] Cache miss: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @57:20...
[[34m  Info  [0m]  - Now solving 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @57:20...
[[34m  Info  [0m]  - Result for 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @57:20:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'precond. (call move[State, Sym](nfa, states, Some[Sym]( ...)' VC for lemma @61:20...
[[34m  Info  [0m] Cache miss: 'precond. (call move[State, Sym](nfa, states, Some[Sym]( ...)' VC for lemma @61:20...
[[34m  Info  [0m]  - Now solving 'precond. (call move[State, Sym](nfa, states, Some[Sym]( ...)' VC for lemma @61:20...
[[34m  Info  [0m]  - Result for 'precond. (call move[State, Sym](nfa, states, Some[Sym]( ...)' VC for lemma @61:20:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosureIdem[State, Sym](nfa, step))' VC for lemma @63:16...
[[34m  Info  [0m] Cache miss: 'precond. (call epsClosureIdem[State, Sym](nfa, step))' VC for lemma @63:16...
[[34m  Info  [0m]  - Now solving 'precond. (call epsClosureIdem[State, Sym](nfa, step))' VC for lemma @63:16...
[[34m  Info  [0m]  - Result for 'precond. (call epsClosureIdem[State, Sym](nfa, step))' VC for lemma @63:16:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosed[State, Sym](nfa, epsClosure[St ...)' VC for lemma @64:16...
[[34m  Info  [0m] Cache miss: 'precond. (call epsClosed[State, Sym](nfa, epsClosure[St ...)' VC for lemma @64:16...
[[34m  Info  [0m]  - Now solving 'precond. (call epsClosed[State, Sym](nfa, epsClosure[St ...)' VC for lemma @64:16...
[[34m  Info  [0m]  - Result for 'precond. (call epsClosed[State, Sym](nfa, epsClosure[St ...)' VC for lemma @64:16:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @64:30...
[[34m  Info  [0m] Cache miss: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @64:30...
[[34m  Info  [0m]  - Now solving 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @64:30...
[[34m  Info  [0m]  - Result for 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @64:30:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for lemma @66:9...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for lemma @66:9...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for lemma @66:9...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for lemma @66:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for lemma @66:9...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for lemma @66:9...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for lemma @66:9...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for lemma @66:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @66:9...
[[34m  Info  [0m] Cache miss: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @66:9...
[[34m  Info  [0m]  - Now solving 'precond. (call ==|[Boolean]({ ...)' VC for lemma @66:9...
[[34m  Info  [0m]  - Result for 'precond. (call ==|[Boolean]({ ...)' VC for lemma @66:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @66:10...
[[34m  Info  [0m] Cache miss: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @66:10...
[[34m  Info  [0m]  - Now solving 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @66:10...
[[34m  Info  [0m]  - Result for 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @66:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @66:35...
[[34m  Info  [0m] Cache miss: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @66:35...
[[34m  Info  [0m]  - Now solving 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @66:35...
[[34m  Info  [0m]  - Result for 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @66:35:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @67:9...
[[34m  Info  [0m] Cache miss: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @67:9...
[[34m  Info  [0m]  - Now solving 'precond. (call ==|[Boolean]({ ...)' VC for lemma @67:9...
[[34m  Info  [0m]  - Result for 'precond. (call ==|[Boolean]({ ...)' VC for lemma @67:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @67:10...
[[34m  Info  [0m] Cache hit: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @67:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[Set[State], Sym](dfa, epsClosure[Sta ...)' VC for lemma @67:35...
[[34m  Info  [0m] Cache miss: 'precond. (call run[Set[State], Sym](dfa, epsClosure[Sta ...)' VC for lemma @67:35...
[[34m  Info  [0m]  - Now solving 'precond. (call run[Set[State], Sym](dfa, epsClosure[Sta ...)' VC for lemma @67:35...
[[34m  Info  [0m]  - Result for 'precond. (call run[Set[State], Sym](dfa, epsClosure[Sta ...)' VC for lemma @67:35:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @67:43...
[[34m  Info  [0m] Cache miss: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @67:43...
[[34m  Info  [0m]  - Now solving 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @67:43...
[[34m  Info  [0m]  - Result for 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @67:43:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call lemma[State, Sym](nfa, epsClosure[State, ...)' VC for lemma @68:12...
[[34m  Info  [0m] Cache miss: 'precond. (call lemma[State, Sym](nfa, epsClosure[State, ...)' VC for lemma @68:12...
[[34m  Info  [0m]  - Now solving 'precond. (call lemma[State, Sym](nfa, epsClosure[State, ...)' VC for lemma @68:12...
[[34m  Info  [0m]  - Result for 'precond. (call lemma[State, Sym](nfa, epsClosure[State, ...)' VC for lemma @68:12:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @68:23...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @68:23...
[[34m  Info  [0m]  - Checking cache: 'precond. (call eqTrans[State](run[State, Sym](nfa, stat ...)' VC for lemma @69:14...
[[34m  Info  [0m] Cache miss: 'precond. (call eqTrans[State](run[State, Sym](nfa, stat ...)' VC for lemma @69:14...
[[34m  Info  [0m]  - Now solving 'precond. (call eqTrans[State](run[State, Sym](nfa, stat ...)' VC for lemma @69:14...
[[34m  Info  [0m]  - Result for 'precond. (call eqTrans[State](run[State, Sym](nfa, stat ...)' VC for lemma @69:14:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @69:22...
[[34m  Info  [0m] Cache miss: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @69:22...
[[34m  Info  [0m]  - Now solving 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @69:22...
[[34m  Info  [0m]  - Result for 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @69:22:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[Set[State], Sym](dfa, epsClosure[Sta ...)' VC for lemma @70:22...
[[34m  Info  [0m] Cache miss: 'precond. (call run[Set[State], Sym](dfa, epsClosure[Sta ...)' VC for lemma @70:22...
[[34m  Info  [0m]  - Now solving 'precond. (call run[Set[State], Sym](dfa, epsClosure[Sta ...)' VC for lemma @70:22...
[[34m  Info  [0m]  - Result for 'precond. (call run[Set[State], Sym](dfa, epsClosure[Sta ...)' VC for lemma @70:22:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @70:30...
[[34m  Info  [0m] Cache miss: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @70:30...
[[34m  Info  [0m]  - Now solving 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @70:30...
[[34m  Info  [0m]  - Result for 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @70:30:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, epsClosure[State, S ...)' VC for lemma @71:22...
[[34m  Info  [0m] Cache miss: 'precond. (call run[State, Sym](nfa, epsClosure[State, S ...)' VC for lemma @71:22...
[[34m  Info  [0m]  - Now solving 'precond. (call run[State, Sym](nfa, epsClosure[State, S ...)' VC for lemma @71:22...
[[34m  Info  [0m]  - Result for 'precond. (call run[State, Sym](nfa, epsClosure[State, S ...)' VC for lemma @71:22:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @71:30...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @71:30...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @72:10...
[[34m  Info  [0m] Cache hit: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @72:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, epsClosure[State, S ...)' VC for lemma @72:35...
[[34m  Info  [0m] Cache miss: 'precond. (call run[State, Sym](nfa, epsClosure[State, S ...)' VC for lemma @72:35...
[[34m  Info  [0m]  - Now solving 'precond. (call run[State, Sym](nfa, epsClosure[State, S ...)' VC for lemma @72:35...
[[34m  Info  [0m]  - Result for 'precond. (call run[State, Sym](nfa, epsClosure[State, S ...)' VC for lemma @72:35:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @72:43...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @72:43...
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for lemma @63:9...
[[34m  Info  [0m] Cache miss: 'body assertion' VC for lemma @63:9...
[[34m  Info  [0m]  - Now solving 'body assertion' VC for lemma @63:9...
[[34m  Info  [0m]  - Result for 'body assertion' VC for lemma @63:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for lemma @64:9...
[[34m  Info  [0m] Cache miss: 'body assertion' VC for lemma @64:9...
[[34m  Info  [0m]  - Now solving 'body assertion' VC for lemma @64:9...
[[34m  Info  [0m]  - Result for 'body assertion' VC for lemma @64:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for lemma @41:53...
[[34m  Info  [0m] Cache miss: 'postcondition' VC for lemma @41:53...
[[34m  Info  [0m]  - Now solving 'postcondition' VC for lemma @41:53...
[[34m  Info  [0m]  - Result for 'postcondition' VC for lemma @41:53:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for lemma @51:5...
[[34m  Info  [0m] Cache miss: 'match exhaustiveness' VC for lemma @51:5...
[[34m  Info  [0m]  - Now solving 'match exhaustiveness' VC for lemma @51:5...
[[34m  Info  [0m]  - Result for 'match exhaustiveness' VC for lemma @51:5:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]   ┌──────────────────────┐
[[34m  Info  [0m] ╔═╡ [31mverification summary[0m ╞══════════════════════════════════════════════════════════════════════════════════════════════╗
[[34m  Info  [0m] ║ └──────────────────────┘                                                                                              ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mpostcondition[0m                                                 [33mtimeout[0m  [33mU:smt-z3[0m  [33mAutomaton.scala:41:53[0m  [33m94.939[0m ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call run[Set[State], Sym](dfa, states, word))[0m       [33mtimeout[0m  [33mU:smt-z3[0m  [33mAutomaton.scala:53:35[0m  [33m45.238[0m ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call run[Set[State], Sym](dfa, states, word))[0m       [33mtimeout[0m  [33mU:smt-z3[0m  [33mAutomaton.scala:54:36[0m  [33m44.744[0m ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call run[Set[State], Sym](dfa, states, word))[0m       [33mtimeout[0m  [33mU:smt-z3[0m  [33mAutomaton.scala:56:54[0m  [33m46.892[0m ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call run[Set[State], Sym](dfa, states, word))[0m       [33mtimeout[0m  [33mU:smt-z3[0m  [33mAutomaton.scala:57:20[0m  [33m43.365[0m ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call run[Set[State], Sym](dfa, states, word))[0m       [33mtimeout[0m  [33mU:smt-z3[0m  [33mAutomaton.scala:66:35[0m  [33m40.617[0m ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call run[Set[State], Sym](dfa, epsClosure[Sta ...)[0m  [33mtimeout[0m  [33mU:smt-z3[0m  [33mAutomaton.scala:67:35[0m  [33m20.213[0m ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call run[Set[State], Sym](dfa, epsClosure[Sta ...)[0m  [33mtimeout[0m  [33mU:smt-z3[0m  [33mAutomaton.scala:70:22[0m  [33m58.535[0m ║
[[34m  Info  [0m] ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
[[34m  Info  [0m] ║ [31mtotal: 41   valid: 33   (7 from cache) invalid: 0    unknown: 8    time: 413.434[0m                                      ║
[[34m  Info  [0m] ╚═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
[[34m  Info  [0m] Cycle took 419494 ms
[[34m  Info  [0m] 
[[34m  Info  [0m] 
[[34m  Info  [0m] Waiting for source changes...
[[34m  Info  [0m] 
[[34m  Info  [0m] 
[[34m  Info  [0m] Detecting some file modifications...: /Users/rodamber/Workspace/LARA/automaton/Automaton.scala
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[Sym](word, (x$1: Sym) => { ...)' VC for lemma @43:13...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[Sym](word, (x$1: Sym) => { ...)' VC for lemma @43:13...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @44:13...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @44:13...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[Set[State], Sym](apply[State, Sym](n ...)' VC for lemma @46:5...
[[34m  Info  [0m] Cache miss: 'precond. (call run[Set[State], Sym](apply[State, Sym](n ...)' VC for lemma @46:5...
[[34m  Info  [0m]  - Now solving 'precond. (call run[Set[State], Sym](apply[State, Sym](n ...)' VC for lemma @46:5...
[[34m  Info  [0m]  - Result for 'precond. (call run[Set[State], Sym](apply[State, Sym](n ...)' VC for lemma @46:5:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for lemma @53:9...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for lemma @53:9...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for lemma @53:9...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for lemma @53:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for lemma @53:9...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for lemma @53:9...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for lemma @53:9...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for lemma @53:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @53:9...
[[34m  Info  [0m] Cache miss: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @53:9...
[[34m  Info  [0m]  - Now solving 'precond. (call ==|[Boolean]({ ...)' VC for lemma @53:9...
[[34m  Info  [0m]  - Result for 'precond. (call ==|[Boolean]({ ...)' VC for lemma @53:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @53:10...
[[34m  Info  [0m] Cache miss: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @53:10...
[[34m  Info  [0m]  - Now solving 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @53:10...
[[34m  Info  [0m]  - Result for 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @53:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @53:35...
[[34m  Info  [0m] Cache miss: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @53:35...
[[34m  Info  [0m]  - Now solving 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @53:35...
[[34m  Info  [0m]  - Result for 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @53:35:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @54:9...
[[34m  Info  [0m] Cache miss: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @54:9...
[[34m  Info  [0m]  - Now solving 'precond. (call ==|[Boolean]({ ...)' VC for lemma @54:9...
[[34m  Info  [0m]  - Result for 'precond. (call ==|[Boolean]({ ...)' VC for lemma @54:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @54:10...
[[34m  Info  [0m] Cache miss: 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @54:10...
[[34m  Info  [0m]  - Now solving 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @54:10...
[[34m  Info  [0m]  - Result for 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @54:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @54:36...
[[34m  Info  [0m] Cache miss: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @54:36...
[[34m  Info  [0m]  - Now solving 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @54:36...
[[34m  Info  [0m]  - Result for 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @54:36:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @55:12...
[[34m  Info  [0m] Cache miss: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @55:12...
[[34m  Info  [0m]  - Now solving 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @55:12...
[[34m  Info  [0m]  - Result for 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @55:12:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call eqTrans[State](states, epsClosure[State, ...)' VC for lemma @56:14...
[[34m  Info  [0m] Cache miss: 'precond. (call eqTrans[State](states, epsClosure[State, ...)' VC for lemma @56:14...
[[34m  Info  [0m]  - Now solving 'precond. (call eqTrans[State](states, epsClosure[State, ...)' VC for lemma @56:14...
[[34m  Info  [0m]  - Result for 'precond. (call eqTrans[State](states, epsClosure[State, ...)' VC for lemma @56:14:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @56:30...
[[34m  Info  [0m] Cache miss: 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @56:30...
[[34m  Info  [0m]  - Now solving 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @56:30...
[[34m  Info  [0m]  - Result for 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @56:30:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @56:54...
[[34m  Info  [0m] Cache miss: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @56:54...
[[34m  Info  [0m]  - Now solving 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @56:54...
[[34m  Info  [0m]  - Result for 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @56:54:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @57:20...
[[34m  Info  [0m] Cache miss: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @57:20...
[[34m  Info  [0m]  - Now solving 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @57:20...
[[34m  Info  [0m]  - Result for 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @57:20:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'precond. (call move[State, Sym](nfa, states, Some[Sym]( ...)' VC for lemma @61:20...
[[34m  Info  [0m] Cache miss: 'precond. (call move[State, Sym](nfa, states, Some[Sym]( ...)' VC for lemma @61:20...
[[34m  Info  [0m]  - Now solving 'precond. (call move[State, Sym](nfa, states, Some[Sym]( ...)' VC for lemma @61:20...
[[34m  Info  [0m]  - Result for 'precond. (call move[State, Sym](nfa, states, Some[Sym]( ...)' VC for lemma @61:20:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosureIdem[State, Sym](nfa, step))' VC for lemma @63:16...
[[34m  Info  [0m] Cache miss: 'precond. (call epsClosureIdem[State, Sym](nfa, step))' VC for lemma @63:16...
[[34m  Info  [0m]  - Now solving 'precond. (call epsClosureIdem[State, Sym](nfa, step))' VC for lemma @63:16...
[[34m  Info  [0m]  - Result for 'precond. (call epsClosureIdem[State, Sym](nfa, step))' VC for lemma @63:16:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosed[State, Sym](nfa, epsClosure[St ...)' VC for lemma @64:16...
[[34m  Info  [0m] Cache miss: 'precond. (call epsClosed[State, Sym](nfa, epsClosure[St ...)' VC for lemma @64:16...
[[34m  Info  [0m]  - Now solving 'precond. (call epsClosed[State, Sym](nfa, epsClosure[St ...)' VC for lemma @64:16...
[[34m  Info  [0m]  - Result for 'precond. (call epsClosed[State, Sym](nfa, epsClosure[St ...)' VC for lemma @64:16:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @64:30...
[[34m  Info  [0m] Cache miss: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @64:30...
[[34m  Info  [0m]  - Now solving 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @64:30...
[[34m  Info  [0m]  - Result for 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @64:30:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for lemma @66:9...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for lemma @66:9...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for lemma @66:9...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for lemma @66:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for lemma @66:9...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for lemma @66:9...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for lemma @66:9...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for lemma @66:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @66:9...
[[34m  Info  [0m] Cache miss: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @66:9...
[[34m  Info  [0m]  - Now solving 'precond. (call ==|[Boolean]({ ...)' VC for lemma @66:9...
[[34m  Info  [0m]  - Result for 'precond. (call ==|[Boolean]({ ...)' VC for lemma @66:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @66:10...
[[34m  Info  [0m] Cache miss: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @66:10...
[[34m  Info  [0m]  - Now solving 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @66:10...
[[34m  Info  [0m]  - Result for 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @66:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @66:35...
[[34m  Info  [0m] Cache miss: 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @66:35...
[[34m  Info  [0m]  - Now solving 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @66:35...
[[34m  Info  [0m]  - Result for 'precond. (call run[Set[State], Sym](dfa, states, word))' VC for lemma @66:35:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @67:9...
[[34m  Info  [0m] Cache miss: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @67:9...
[[34m  Info  [0m]  - Now solving 'precond. (call ==|[Boolean]({ ...)' VC for lemma @67:9...
[[34m  Info  [0m]  - Result for 'precond. (call ==|[Boolean]({ ...)' VC for lemma @67:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @67:10...
[[34m  Info  [0m] Cache hit: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @67:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[Set[State], Sym](dfa, epsClosure[Sta ...)' VC for lemma @67:35...
[[34m  Info  [0m] Cache miss: 'precond. (call run[Set[State], Sym](dfa, epsClosure[Sta ...)' VC for lemma @67:35...
[[34m  Info  [0m]  - Now solving 'precond. (call run[Set[State], Sym](dfa, epsClosure[Sta ...)' VC for lemma @67:35...
[[34m  Info  [0m]  - Result for 'precond. (call run[Set[State], Sym](dfa, epsClosure[Sta ...)' VC for lemma @67:35:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @67:43...
[[34m  Info  [0m] Cache miss: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @67:43...
[[34m  Info  [0m]  - Now solving 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @67:43...
[[34m  Info  [0m]  - Result for 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @67:43:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call lemma[State, Sym](nfa, epsClosure[State, ...)' VC for lemma @68:12...
[[34m  Info  [0m] Cache miss: 'precond. (call lemma[State, Sym](nfa, epsClosure[State, ...)' VC for lemma @68:12...
[[34m  Info  [0m]  - Now solving 'precond. (call lemma[State, Sym](nfa, epsClosure[State, ...)' VC for lemma @68:12...
[[34m  Info  [0m]  - Result for 'precond. (call lemma[State, Sym](nfa, epsClosure[State, ...)' VC for lemma @68:12:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @68:23...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @68:23...
[[34m  Info  [0m]  - Checking cache: 'precond. (call eqTrans[State](run[State, Sym](nfa, stat ...)' VC for lemma @69:14...
[[34m  Info  [0m] Cache miss: 'precond. (call eqTrans[State](run[State, Sym](nfa, stat ...)' VC for lemma @69:14...
[[34m  Info  [0m]  - Now solving 'precond. (call eqTrans[State](run[State, Sym](nfa, stat ...)' VC for lemma @69:14...
[[34m  Info  [0m]  - Result for 'precond. (call eqTrans[State](run[State, Sym](nfa, stat ...)' VC for lemma @69:14:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @69:22...
[[34m  Info  [0m] Cache miss: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @69:22...
[[34m  Info  [0m]  - Now solving 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @69:22...
[[34m  Info  [0m]  - Result for 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @69:22:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[Set[State], Sym](dfa, epsClosure[Sta ...)' VC for lemma @70:22...
[[34m  Info  [0m] Cache miss: 'precond. (call run[Set[State], Sym](dfa, epsClosure[Sta ...)' VC for lemma @70:22...
[[34m  Info  [0m]  - Now solving 'precond. (call run[Set[State], Sym](dfa, epsClosure[Sta ...)' VC for lemma @70:22...
[[34m  Info  [0m]  - Result for 'precond. (call run[Set[State], Sym](dfa, epsClosure[Sta ...)' VC for lemma @70:22:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @70:30...
[[34m  Info  [0m] Cache miss: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @70:30...
[[34m  Info  [0m]  - Now solving 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @70:30...
[[34m  Info  [0m]  - Result for 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @70:30:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, epsClosure[State, S ...)' VC for lemma @71:22...
[[34m  Info  [0m] Cache miss: 'precond. (call run[State, Sym](nfa, epsClosure[State, S ...)' VC for lemma @71:22...
[[34m  Info  [0m]  - Now solving 'precond. (call run[State, Sym](nfa, epsClosure[State, S ...)' VC for lemma @71:22...
[[34m  Info  [0m]  - Result for 'precond. (call run[State, Sym](nfa, epsClosure[State, S ...)' VC for lemma @71:22:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @71:30...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @71:30...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @72:10...
[[34m  Info  [0m] Cache hit: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @72:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, epsClosure[State, S ...)' VC for lemma @72:35...
[[34m  Info  [0m] Cache miss: 'precond. (call run[State, Sym](nfa, epsClosure[State, S ...)' VC for lemma @72:35...
[[34m  Info  [0m]  - Now solving 'precond. (call run[State, Sym](nfa, epsClosure[State, S ...)' VC for lemma @72:35...
[[34m  Info  [0m]  - Result for 'precond. (call run[State, Sym](nfa, epsClosure[State, S ...)' VC for lemma @72:35:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @72:43...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @72:43...
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for lemma @63:9...
[[34m  Info  [0m] Cache miss: 'body assertion' VC for lemma @63:9...
[[34m  Info  [0m]  - Now solving 'body assertion' VC for lemma @63:9...
[[34m  Info  [0m]  - Result for 'body assertion' VC for lemma @63:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for lemma @64:9...
[[34m  Info  [0m] Cache miss: 'body assertion' VC for lemma @64:9...
[[34m  Info  [0m]  - Now solving 'body assertion' VC for lemma @64:9...
[[34m  Info  [0m]  - Result for 'body assertion' VC for lemma @64:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for lemma @41:53...
[[34m  Info  [0m] Cache miss: 'postcondition' VC for lemma @41:53...
[[34m  Info  [0m]  - Now solving 'postcondition' VC for lemma @41:53...
[[34m  Info  [0m]  - Result for 'postcondition' VC for lemma @41:53:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for lemma @51:5...
[[34m  Info  [0m] Cache miss: 'match exhaustiveness' VC for lemma @51:5...
[[34m  Info  [0m]  - Now solving 'match exhaustiveness' VC for lemma @51:5...
[[34m  Info  [0m]  - Result for 'match exhaustiveness' VC for lemma @51:5:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]   ┌──────────────────────┐
[[34m  Info  [0m] ╔═╡ [31mverification summary[0m ╞══════════════════════════════════════════════════════════════════════════════════════════════╗
[[34m  Info  [0m] ║ └──────────────────────┘                                                                                              ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mpostcondition[0m                                                 [33mtimeout[0m  [33mU:smt-z3[0m  [33mAutomaton.scala:41:53[0m  [33m20.441[0m ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call run[Set[State], Sym](apply[State, Sym](n ...)[0m  [33mtimeout[0m  [33mU:smt-z3[0m  [33mAutomaton.scala:46:5[0m   [33m20.320[0m ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call run[Set[State], Sym](dfa, states, word))[0m       [33mtimeout[0m  [33mU:smt-z3[0m  [33mAutomaton.scala:53:35[0m  [33m25.079[0m ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call run[Set[State], Sym](dfa, states, word))[0m       [33mtimeout[0m  [33mU:smt-z3[0m  [33mAutomaton.scala:54:36[0m  [33m23.674[0m ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call run[Set[State], Sym](dfa, states, word))[0m       [33mtimeout[0m  [33mU:smt-z3[0m  [33mAutomaton.scala:56:54[0m  [33m20.269[0m ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call run[Set[State], Sym](dfa, states, word))[0m       [33mtimeout[0m  [33mU:smt-z3[0m  [33mAutomaton.scala:57:20[0m  [33m25.785[0m ║
[[34m  Info  [0m] ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
[[34m  Info  [0m] ║ [31mtotal: 41   valid: 35   (6 from cache) invalid: 0    unknown: 6    time: 152.562[0m                                      ║
[[34m  Info  [0m] ╚═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
[[34m  Info  [0m] Cycle took 156202 ms
[[34m  Info  [0m] 
[[34m  Info  [0m] 
[[34m  Info  [0m] Waiting for source changes...
[[34m  Info  [0m] 
[[34m  Info  [0m] 
[[34m  Info  [0m] Detecting some file modifications...: /Users/rodamber/Workspace/LARA/automaton/Automaton.scala
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[Sym](word, (x$1: Sym) => { ...)' VC for lemma @43:13...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[Sym](word, (x$1: Sym) => { ...)' VC for lemma @43:13...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @44:13...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @44:13...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @46:5...
[[34m  Info  [0m] Cache hit: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @46:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[Set[State], Sym](apply[State, Sym](n ...)' VC for lemma @46:30...
[[34m  Info  [0m] Cache miss: 'precond. (call run[Set[State], Sym](apply[State, Sym](n ...)' VC for lemma @46:30...
[[34m  Info  [0m]  - Now solving 'precond. (call run[Set[State], Sym](apply[State, Sym](n ...)' VC for lemma @46:30...
