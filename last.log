[[33mWarning [0m] Parallelism is disabled.
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](set1, set2))' VC for unionSubset @136:8...
[[34m  Info  [0m] Cache miss: 'precond. (call ++[T](set1, set2))' VC for unionSubset @136:8...
[[34m  Info  [0m]  - Now solving 'precond. (call ++[T](set1, set2))' VC for unionSubset @136:8...
[[34m  Info  [0m]  - Result for 'precond. (call ++[T](set1, set2))' VC for unionSubset @136:8:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for unionSubset @141:10...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for unionSubset @141:10...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for unionSubset @141:10...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for unionSubset @141:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @141:10...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @141:10...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @141:10...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @141:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @141:10...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @141:10...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @141:10...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @141:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @141:10...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @141:10...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @141:10...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @141:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @141:10...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @141:10...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @141:10...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for unionSubset @141:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for unionSubset @141:10...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for unionSubset @141:10...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for unionSubset @141:10...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for unionSubset @141:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @141:10...
[[34m  Info  [0m] Cache miss: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @141:10...
[[34m  Info  [0m]  - Now solving 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @141:10...
[[34m  Info  [0m]  - Result for 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @141:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](set1, set2))' VC for unionSubset @141:10...
[[34m  Info  [0m] Cache miss: 'precond. (call ++[T](set1, set2))' VC for unionSubset @141:10...
[[34m  Info  [0m]  - Now solving 'precond. (call ++[T](set1, set2))' VC for unionSubset @141:10...
[[34m  Info  [0m]  - Result for 'precond. (call ++[T](set1, set2))' VC for unionSubset @141:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @142:10...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @142:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](++[T](xs, set2), x))' VC for unionSubset @142:10...
[[34m  Info  [0m] Cache miss: 'precond. (call +[T](++[T](xs, set2), x))' VC for unionSubset @142:10...
[[34m  Info  [0m]  - Now solving 'precond. (call +[T](++[T](xs, set2), x))' VC for unionSubset @142:10...
[[34m  Info  [0m]  - Result for 'precond. (call +[T](++[T](xs, set2), x))' VC for unionSubset @142:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](xs, set2))' VC for unionSubset @142:11...
[[34m  Info  [0m] Cache miss: 'precond. (call ++[T](xs, set2))' VC for unionSubset @142:11...
[[34m  Info  [0m]  - Now solving 'precond. (call ++[T](xs, set2))' VC for unionSubset @142:11...
[[34m  Info  [0m]  - Result for 'precond. (call ++[T](xs, set2))' VC for unionSubset @142:11:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @143:10...
[[34m  Info  [0m] Cache miss: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @143:10...
[[34m  Info  [0m]  - Now solving 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @143:10...
[[34m  Info  [0m]  - Result for 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @143:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](+[T](++[T](xs, set2), x), (x$6 ...)' VC for unionSubset @143:10...
[[34m  Info  [0m] Cache miss: 'precond. (call forall[T](+[T](++[T](xs, set2), x), (x$6 ...)' VC for unionSubset @143:10...
[[34m  Info  [0m]  - Now solving 'precond. (call forall[T](+[T](++[T](xs, set2), x), (x$6 ...)' VC for unionSubset @143:10...
[[34m  Info  [0m]  - Result for 'precond. (call forall[T](+[T](++[T](xs, set2), x), (x$6 ...)' VC for unionSubset @143:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](++[T](xs, set2), x))' VC for unionSubset @143:10...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](++[T](xs, set2), x))' VC for unionSubset @143:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](xs, set2))' VC for unionSubset @143:11...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](xs, set2))' VC for unionSubset @143:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call addForall[T](++[T](xs, set2), x, (y: T)  ...)' VC for unionSubset @144:11...
[[34m  Info  [0m] Cache miss: 'precond. (call addForall[T](++[T](xs, set2), x, (y: T)  ...)' VC for unionSubset @144:11...
[[34m  Info  [0m]  - Now solving 'precond. (call addForall[T](++[T](xs, set2), x, (y: T)  ...)' VC for unionSubset @144:11...
[[34m  Info  [0m]  - Result for 'precond. (call addForall[T](++[T](xs, set2), x, (y: T)  ...)' VC for unionSubset @144:11:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](xs, set2))' VC for unionSubset @144:22...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](xs, set2))' VC for unionSubset @144:22...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @145:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @145:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](++[T](xs, set2), (x$7: T) => { ...)' VC for unionSubset @145:11...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](++[T](xs, set2), (x$7: T) => { ...)' VC for unionSubset @145:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](xs, set2))' VC for unionSubset @145:11...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](xs, set2))' VC for unionSubset @145:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @147:9...
[[34m  Info  [0m] Cache miss: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @147:9...
[[34m  Info  [0m]  - Now solving 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @147:9...
[[34m  Info  [0m]  - Result for 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @147:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](xs, set2))' VC for unionSubset @147:11...
[[34m  Info  [0m] Cache hit: 'precond. (call ++[T](xs, set2))' VC for unionSubset @147:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call unionSubset[T](xs, set2, set3))' VC for unionSubset @147:63...
[[34m  Info  [0m] Cache hit: 'precond. (call unionSubset[T](xs, set2, set3))' VC for unionSubset @147:63...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @148:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for unionSubset @148:9...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for unionSubset @133:75...
[[34m  Info  [0m] Cache miss: 'postcondition' VC for unionSubset @133:75...
[[34m  Info  [0m]  - Now solving 'postcondition' VC for unionSubset @133:75...
[[34m  Info  [0m]  - Result for 'postcondition' VC for unionSubset @133:75:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for unionSubset @138:5...
[[34m  Info  [0m] Cache miss: 'match exhaustiveness' VC for unionSubset @138:5...
[[34m  Info  [0m]  - Now solving 'match exhaustiveness' VC for unionSubset @138:5...
[[34m  Info  [0m]  - Result for 'match exhaustiveness' VC for unionSubset @138:5:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call addInv[T](++[T](xs, that), x))' VC for ++ @57:16...
[[34m  Info  [0m] Cache miss: 'precond. (call addInv[T](++[T](xs, that), x))' VC for ++ @57:16...
[[34m  Info  [0m]  - Now solving 'precond. (call addInv[T](++[T](xs, that), x))' VC for ++ @57:16...
[[34m  Info  [0m]  - Result for 'precond. (call addInv[T](++[T](xs, that), x))' VC for ++ @57:16:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](xs, that))' VC for ++ @57:23...
[[34m  Info  [0m] Cache miss: 'precond. (call ++[T](xs, that))' VC for ++ @57:23...
[[34m  Info  [0m]  - Now solving 'precond. (call ++[T](xs, that))' VC for ++ @57:23...
[[34m  Info  [0m]  - Result for 'precond. (call ++[T](xs, that))' VC for ++ @57:23:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](++[T](xs, that), x))' VC for ++ @60:9...
[[34m  Info  [0m] Cache miss: 'precond. (call +[T](++[T](xs, that), x))' VC for ++ @60:9...
[[34m  Info  [0m]  - Now solving 'precond. (call +[T](++[T](xs, that), x))' VC for ++ @60:9...
[[34m  Info  [0m]  - Result for 'precond. (call +[T](++[T](xs, that), x))' VC for ++ @60:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call ++[T](xs, that))' VC for ++ @60:10...
[[34m  Info  [0m] Cache miss: 'precond. (call ++[T](xs, that))' VC for ++ @60:10...
[[34m  Info  [0m]  - Now solving 'precond. (call ++[T](xs, that))' VC for ++ @60:10...
[[34m  Info  [0m]  - Result for 'precond. (call ++[T](xs, that))' VC for ++ @60:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for ++ @56:25...
[[34m  Info  [0m] Cache miss: 'body assertion' VC for ++ @56:25...
[[34m  Info  [0m]  - Now solving 'body assertion' VC for ++ @56:25...
[[34m  Info  [0m]  - Result for 'body assertion' VC for ++ @56:25:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for ++ @58:9...
[[34m  Info  [0m] Cache miss: 'body assertion' VC for ++ @58:9...
[[34m  Info  [0m]  - Now solving 'body assertion' VC for ++ @58:9...
[[34m  Info  [0m]  - Result for 'body assertion' VC for ++ @58:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for ++ @62:16...
[[34m  Info  [0m] Cache miss: 'postcondition' VC for ++ @62:16...
[[34m  Info  [0m]  - Now solving 'postcondition' VC for ++ @62:16...
[[34m  Info  [0m]  - Result for 'postcondition' VC for ++ @62:16:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'body assertion: Measure not guaranteed positive' VC for ++ @54:5...
[[34m  Info  [0m] Cache miss: 'body assertion: Measure not guaranteed positive' VC for ++ @54:5...
[[34m  Info  [0m]  - Now solving 'body assertion: Measure not guaranteed positive' VC for ++ @54:5...
[[34m  Info  [0m]  - Result for 'body assertion: Measure not guaranteed positive' VC for ++ @54:5:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for ++ @54:5...
[[34m  Info  [0m] Cache miss: 'match exhaustiveness' VC for ++ @54:5...
[[34m  Info  [0m]  - Now solving 'match exhaustiveness' VC for ++ @54:5...
[[34m  Info  [0m]  - Result for 'match exhaustiveness' VC for ++ @54:5:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](set, y))' VC for addInv @110:12...
[[34m  Info  [0m] Cache miss: 'precond. (call +[T](set, y))' VC for addInv @110:12...
[[34m  Info  [0m]  - Now solving 'precond. (call +[T](set, y))' VC for addInv @110:12...
[[34m  Info  [0m]  - Result for 'precond. (call +[T](set, y))' VC for addInv @110:12:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for addInv @117:9...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for addInv @117:9...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for addInv @117:9...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for addInv @117:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for addInv @117:9...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for addInv @117:9...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for addInv @117:9...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for addInv @117:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for addInv @117:9...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for addInv @117:9...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for addInv @117:9...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for addInv @117:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for addInv @117:9...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for addInv @117:9...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for addInv @117:9...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for addInv @117:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for addInv @117:9...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for addInv @117:9...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for addInv @117:9...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for addInv @117:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @117:9...
[[34m  Info  [0m] Cache miss: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @117:9...
[[34m  Info  [0m]  - Now solving 'precond. (call ==|[Boolean]({ ...)' VC for addInv @117:9...
[[34m  Info  [0m]  - Result for 'precond. (call ==|[Boolean]({ ...)' VC for addInv @117:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](set, y))' VC for addInv @117:16...
[[34m  Info  [0m] Cache miss: 'precond. (call +[T](set, y))' VC for addInv @117:16...
[[34m  Info  [0m]  - Now solving 'precond. (call +[T](set, y))' VC for addInv @117:16...
[[34m  Info  [0m]  - Result for 'precond. (call +[T](set, y))' VC for addInv @117:16:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @118:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @118:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](xs, y))' VC for addInv @118:25...
[[34m  Info  [0m] Cache miss: 'precond. (call +[T](xs, y))' VC for addInv @118:25...
[[34m  Info  [0m]  - Now solving 'precond. (call +[T](xs, y))' VC for addInv @118:25...
[[34m  Info  [0m]  - Result for 'precond. (call +[T](xs, y))' VC for addInv @118:25:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @119:9...
[[34m  Info  [0m] Cache miss: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @119:9...
[[34m  Info  [0m]  - Now solving 'precond. (call ==|[Boolean]({ ...)' VC for addInv @119:9...
[[34m  Info  [0m]  - Result for 'precond. (call ==|[Boolean]({ ...)' VC for addInv @119:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](xs, y))' VC for addInv @119:12...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](xs, y))' VC for addInv @119:12...
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](xs, y))' VC for addInv @119:42...
[[34m  Info  [0m] Cache miss: 'precond. (call +[T](xs, y))' VC for addInv @119:42...
[[34m  Info  [0m]  - Now solving 'precond. (call +[T](xs, y))' VC for addInv @119:42...
[[34m  Info  [0m]  - Result for 'precond. (call +[T](xs, y))' VC for addInv @119:42:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call addInv[T](xs, y))' VC for addInv @119:55...
[[34m  Info  [0m] Cache hit: 'precond. (call addInv[T](xs, y))' VC for addInv @119:55...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @120:9...
[[34m  Info  [0m] Cache miss: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @120:9...
[[34m  Info  [0m]  - Now solving 'precond. (call ==|[Boolean]({ ...)' VC for addInv @120:9...
[[34m  Info  [0m]  - Result for 'precond. (call ==|[Boolean]({ ...)' VC for addInv @120:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](xs, y))' VC for addInv @120:11...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](xs, y))' VC for addInv @120:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call addContains[T](xs, y, x))' VC for addInv @120:55...
[[34m  Info  [0m] Cache hit: 'precond. (call addContains[T](xs, y, x))' VC for addInv @120:55...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @121:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for addInv @121:9...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for addInv @108:47...
[[34m  Info  [0m] Cache miss: 'postcondition' VC for addInv @108:47...
[[34m  Info  [0m]  - Now solving 'postcondition' VC for addInv @108:47...
[[34m  Info  [0m]  - Result for 'postcondition' VC for addInv @108:47:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for addInv @112:5...
[[34m  Info  [0m] Cache miss: 'match exhaustiveness' VC for addInv @112:5...
[[34m  Info  [0m]  - Now solving 'match exhaustiveness' VC for addInv @112:5...
[[34m  Info  [0m]  - Result for 'match exhaustiveness' VC for addInv @112:5:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](set, y), ind. on (set: Set[T] : SCons))' VC for addContains @105:6...
[[34m  Info  [0m] Cache miss: 'precond. (call +[T](set, y), ind. on (set: Set[T] : SCons))' VC for addContains @105:6...
[[34m  Info  [0m]  - Now solving 'precond. (call +[T](set, y), ind. on (set: Set[T] : SCons))' VC for addContains @105:6...
[[34m  Info  [0m]  - Result for 'precond. (call +[T](set, y), ind. on (set: Set[T] : SCons))' VC for addContains @105:6:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](set, y), ind. on (set: Set[T] : SNil))' VC for addContains @105:6...
[[34m  Info  [0m] Cache miss: 'precond. (call +[T](set, y), ind. on (set: Set[T] : SNil))' VC for addContains @105:6...
[[34m  Info  [0m]  - Now solving 'precond. (call +[T](set, y), ind. on (set: Set[T] : SNil))' VC for addContains @105:6...
[[34m  Info  [0m]  - Result for 'precond. (call +[T](set, y), ind. on (set: Set[T] : SNil))' VC for addContains @105:6:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'postcond. (ind. on set: Set[T] / SCons)' VC for addContains @103:3...
[[34m  Info  [0m] Cache miss: 'postcond. (ind. on set: Set[T] / SCons)' VC for addContains @103:3...
[[34m  Info  [0m]  - Now solving 'postcond. (ind. on set: Set[T] / SCons)' VC for addContains @103:3...
[[34m  Info  [0m]  - Result for 'postcond. (ind. on set: Set[T] / SCons)' VC for addContains @103:3:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'postcond. (ind. on set: Set[T] / SNil)' VC for addContains @103:3...
[[34m  Info  [0m] Cache miss: 'postcond. (ind. on set: Set[T] / SNil)' VC for addContains @103:3...
[[34m  Info  [0m]  - Now solving 'postcond. (ind. on set: Set[T] / SNil)' VC for addContains @103:3...
[[34m  Info  [0m]  - Result for 'postcond. (ind. on set: Set[T] / SNil)' VC for addContains @103:3:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](+[T](set, x), p ..., ind. on (set: Set[T] : SCons))' VC for addForall @130:6...
[[34m  Info  [0m] Cache miss: 'precond. (call forall[T](+[T](set, x), p ..., ind. on (set: Set[T] : SCons))' VC for addForall @130:6...
[[34m  Info  [0m]  - Now solving 'precond. (call forall[T](+[T](set, x), p ..., ind. on (set: Set[T] : SCons))' VC for addForall @130:6...
[[34m  Info  [0m]  - Result for 'precond. (call forall[T](+[T](set, x), p ..., ind. on (set: Set[T] : SCons))' VC for addForall @130:6:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](+[T](set, x), p ..., ind. on (set: Set[T] : SNil))' VC for addForall @130:6...
[[34m  Info  [0m] Cache miss: 'precond. (call forall[T](+[T](set, x), p ..., ind. on (set: Set[T] : SNil))' VC for addForall @130:6...
[[34m  Info  [0m]  - Now solving 'precond. (call forall[T](+[T](set, x), p ..., ind. on (set: Set[T] : SNil))' VC for addForall @130:6...
[[34m  Info  [0m]  - Result for 'precond. (call forall[T](+[T](set, x), p ..., ind. on (set: Set[T] : SNil))' VC for addForall @130:6:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](set, x), ind. on (set: Set[T] : SCons))' VC for addForall @130:6...
[[34m  Info  [0m] Cache miss: 'precond. (call +[T](set, x), ind. on (set: Set[T] : SCons))' VC for addForall @130:6...
[[34m  Info  [0m]  - Now solving 'precond. (call +[T](set, x), ind. on (set: Set[T] : SCons))' VC for addForall @130:6...
[[34m  Info  [0m]  - Result for 'precond. (call +[T](set, x), ind. on (set: Set[T] : SCons))' VC for addForall @130:6:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](set, x), ind. on (set: Set[T] : SNil))' VC for addForall @130:6...
[[34m  Info  [0m] Cache miss: 'precond. (call +[T](set, x), ind. on (set: Set[T] : SNil))' VC for addForall @130:6...
[[34m  Info  [0m]  - Now solving 'precond. (call +[T](set, x), ind. on (set: Set[T] : SNil))' VC for addForall @130:6...
[[34m  Info  [0m]  - Result for 'precond. (call +[T](set, x), ind. on (set: Set[T] : SNil))' VC for addForall @130:6:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](set, p), ind. on (set: Set[T] : SCons))' VC for addForall @130:29...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](set, p), ind. on (set: Set[T] : SCons))' VC for addForall @130:29...
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](set, p), ind. on (set: Set[T] : SNil))' VC for addForall @130:29...
[[34m  Info  [0m] Cache hit: 'precond. (call forall[T](set, p), ind. on (set: Set[T] : SNil))' VC for addForall @130:29...
[[34m  Info  [0m]  - Checking cache: 'postcond. (ind. on set: Set[T] / SCons)' VC for addForall @128:3...
[[34m  Info  [0m] Cache miss: 'postcond. (ind. on set: Set[T] / SCons)' VC for addForall @128:3...
[[34m  Info  [0m]  - Now solving 'postcond. (ind. on set: Set[T] / SCons)' VC for addForall @128:3...
[[34m  Info  [0m]  - Result for 'postcond. (ind. on set: Set[T] / SCons)' VC for addForall @128:3:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'postcond. (ind. on set: Set[T] / SNil)' VC for addForall @128:3...
[[34m  Info  [0m] Cache miss: 'postcond. (ind. on set: Set[T] / SNil)' VC for addForall @128:3...
[[34m  Info  [0m]  - Now solving 'postcond. (ind. on set: Set[T] / SNil)' VC for addForall @128:3...
[[34m  Info  [0m]  - Result for 'postcond. (ind. on set: Set[T] / SNil)' VC for addForall @128:3:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'lambda precondition' VC for addForall @128:39...
[[34m  Info  [0m] Cache hit: 'lambda precondition' VC for addForall @128:39...
[[34m  Info  [0m]  - Checking cache: 'lambda precondition' VC for addForall @130:46...
[[34m  Info  [0m] Cache miss: 'lambda precondition' VC for addForall @130:46...
[[34m  Info  [0m]  - Now solving 'lambda precondition' VC for addForall @130:46...
[[34m  Info  [0m]  - Result for 'lambda precondition' VC for addForall @130:46:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call subSubSize[T](set2, set1))' VC for sizeSubsetOf @222:21...
[[34m  Info  [0m] Cache miss: 'precond. (call subSubSize[T](set2, set1))' VC for sizeSubsetOf @222:21...
[[34m  Info  [0m]  - Now solving 'precond. (call subSubSize[T](set2, set1))' VC for sizeSubsetOf @222:21...
[[34m  Info  [0m]  - Result for 'precond. (call subSubSize[T](set2, set1))' VC for sizeSubsetOf @222:21:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for sizeSubsetOf @219:62...
[[34m  Info  [0m] Cache miss: 'postcondition' VC for sizeSubsetOf @219:62...
[[34m  Info  [0m]  - Now solving 'postcondition' VC for sizeSubsetOf @219:62...
[[34m  Info  [0m]  - Result for 'postcondition' VC for sizeSubsetOf @219:62:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, set2))' VC for subSubSize @203:6...
[[34m  Info  [0m] Cache miss: 'precond. (call --[T](set1, set2))' VC for subSubSize @203:6...
[[34m  Info  [0m]  - Now solving 'precond. (call --[T](set1, set2))' VC for subSubSize @203:6...
[[34m  Info  [0m]  - Result for 'precond. (call --[T](set1, set2))' VC for subSubSize @203:6:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, ys))' VC for subSubSize @208:17...
[[34m  Info  [0m] Cache miss: 'precond. (call --[T](set1, ys))' VC for subSubSize @208:17...
[[34m  Info  [0m]  - Now solving 'precond. (call --[T](set1, ys))' VC for subSubSize @208:17...
[[34m  Info  [0m]  - Result for 'precond. (call --[T](set1, ys))' VC for subSubSize @208:17:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call subSubContains[T](set1, ys, y))' VC for subSubSize @208:49...
[[34m  Info  [0m] Cache miss: 'precond. (call subSubContains[T](set1, ys, y))' VC for subSubSize @208:49...
[[34m  Info  [0m]  - Now solving 'precond. (call subSubContains[T](set1, ys, y))' VC for subSubSize @208:49...
[[34m  Info  [0m]  - Result for 'precond. (call subSubContains[T](set1, ys, y))' VC for subSubSize @208:49:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[BigInt, BigInt](|[BigInt, BigInt, BigI ...)' VC for subSubSize @210:10...
[[34m  Info  [0m] Cache miss: 'precond. (call |[BigInt, BigInt](|[BigInt, BigInt, BigI ...)' VC for subSubSize @210:10...
[[34m  Info  [0m]  - Now solving 'precond. (call |[BigInt, BigInt](|[BigInt, BigInt, BigI ...)' VC for subSubSize @210:10...
[[34m  Info  [0m]  - Result for 'precond. (call |[BigInt, BigInt](|[BigInt, BigInt, BigI ...)' VC for subSubSize @210:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[BigInt, BigInt, BigInt](|[BigInt, BigI ...)' VC for subSubSize @210:10...
[[34m  Info  [0m] Cache miss: 'precond. (call |[BigInt, BigInt, BigInt](|[BigInt, BigI ...)' VC for subSubSize @210:10...
[[34m  Info  [0m]  - Now solving 'precond. (call |[BigInt, BigInt, BigInt](|[BigInt, BigI ...)' VC for subSubSize @210:10...
[[34m  Info  [0m]  - Result for 'precond. (call |[BigInt, BigInt, BigInt](|[BigInt, BigI ...)' VC for subSubSize @210:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[BigInt, BigInt, BigInt](|[BigInt, BigI ...)' VC for subSubSize @210:10...
[[34m  Info  [0m] Cache miss: 'precond. (call |[BigInt, BigInt, BigInt](|[BigInt, BigI ...)' VC for subSubSize @210:10...
[[34m  Info  [0m]  - Now solving 'precond. (call |[BigInt, BigInt, BigInt](|[BigInt, BigI ...)' VC for subSubSize @210:10...
[[34m  Info  [0m]  - Result for 'precond. (call |[BigInt, BigInt, BigInt](|[BigInt, BigI ...)' VC for subSubSize @210:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[BigInt, BigInt, BigInt](==|[BigInt]({ ...)' VC for subSubSize @210:10...
[[34m  Info  [0m] Cache miss: 'precond. (call |[BigInt, BigInt, BigInt](==|[BigInt]({ ...)' VC for subSubSize @210:10...
[[34m  Info  [0m]  - Now solving 'precond. (call |[BigInt, BigInt, BigInt](==|[BigInt]({ ...)' VC for subSubSize @210:10...
[[34m  Info  [0m]  - Result for 'precond. (call |[BigInt, BigInt, BigInt](==|[BigInt]({ ...)' VC for subSubSize @210:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @210:10...
[[34m  Info  [0m] Cache miss: 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @210:10...
[[34m  Info  [0m]  - Now solving 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @210:10...
[[34m  Info  [0m]  - Result for 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @210:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, set2))' VC for subSubSize @210:10...
[[34m  Info  [0m] Cache miss: 'precond. (call --[T](set1, set2))' VC for subSubSize @210:10...
[[34m  Info  [0m]  - Now solving 'precond. (call --[T](set1, set2))' VC for subSubSize @210:10...
[[34m  Info  [0m]  - Result for 'precond. (call --[T](set1, set2))' VC for subSubSize @210:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @211:10...
[[34m  Info  [0m] Cache miss: 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @211:10...
[[34m  Info  [0m]  - Now solving 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @211:10...
[[34m  Info  [0m]  - Result for 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @211:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](--[T](set1, ys), y))' VC for subSubSize @211:10...
[[34m  Info  [0m] Cache miss: 'precond. (call -[T](--[T](set1, ys), y))' VC for subSubSize @211:10...
[[34m  Info  [0m]  - Now solving 'precond. (call -[T](--[T](set1, ys), y))' VC for subSubSize @211:10...
[[34m  Info  [0m]  - Result for 'precond. (call -[T](--[T](set1, ys), y))' VC for subSubSize @211:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, ys))' VC for subSubSize @211:11...
[[34m  Info  [0m] Cache miss: 'precond. (call --[T](set1, ys))' VC for subSubSize @211:11...
[[34m  Info  [0m]  - Now solving 'precond. (call --[T](set1, ys))' VC for subSubSize @211:11...
[[34m  Info  [0m]  - Result for 'precond. (call --[T](set1, ys))' VC for subSubSize @211:11:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call subSize[T](--[T](set1, ys), y))' VC for subSubSize @211:37...
[[34m  Info  [0m] Cache miss: 'precond. (call subSize[T](--[T](set1, ys), y))' VC for subSubSize @211:37...
[[34m  Info  [0m]  - Now solving 'precond. (call subSize[T](--[T](set1, ys), y))' VC for subSubSize @211:37...
[[34m  Info  [0m]  - Result for 'precond. (call subSize[T](--[T](set1, ys), y))' VC for subSubSize @211:37:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, ys))' VC for subSubSize @211:45...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, ys))' VC for subSubSize @211:45...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @212:10...
[[34m  Info  [0m] Cache miss: 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @212:10...
[[34m  Info  [0m]  - Now solving 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @212:10...
[[34m  Info  [0m]  - Result for 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @212:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, ys))' VC for subSubSize @212:10...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, ys))' VC for subSubSize @212:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call subSubSize[T](set1, ys))' VC for subSubSize @212:37...
[[34m  Info  [0m] Cache miss: 'precond. (call subSubSize[T](set1, ys))' VC for subSubSize @212:37...
[[34m  Info  [0m]  - Now solving 'precond. (call subSubSize[T](set1, ys))' VC for subSubSize @212:37...
[[34m  Info  [0m]  - Result for 'precond. (call subSubSize[T](set1, ys))' VC for subSubSize @212:37:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @213:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[BigInt]({ ...)' VC for subSubSize @213:9...
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for subSubSize @207:28...
[[34m  Info  [0m] Cache miss: 'body assertion' VC for subSubSize @207:28...
[[34m  Info  [0m]  - Now solving 'body assertion' VC for subSubSize @207:28...
[[34m  Info  [0m]  - Result for 'body assertion' VC for subSubSize @207:28:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for subSubSize @201:60...
[[34m  Info  [0m] Cache miss: 'postcondition' VC for subSubSize @201:60...
[[34m  Info  [0m]  - Now solving 'postcondition' VC for subSubSize @201:60...
[[34m  Info  [0m]  - Result for 'postcondition' VC for subSubSize @201:60:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for subSubSize @205:5...
[[34m  Info  [0m] Cache miss: 'match exhaustiveness' VC for subSubSize @205:5...
[[34m  Info  [0m]  - Now solving 'match exhaustiveness' VC for subSubSize @205:5...
[[34m  Info  [0m]  - Result for 'match exhaustiveness' VC for subSubSize @205:5:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, set2))' VC for subSubContains @188:6...
[[34m  Info  [0m] Cache miss: 'precond. (call --[T](set1, set2))' VC for subSubContains @188:6...
[[34m  Info  [0m]  - Now solving 'precond. (call --[T](set1, set2))' VC for subSubContains @188:6...
[[34m  Info  [0m]  - Result for 'precond. (call --[T](set1, set2))' VC for subSubContains @188:6:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for subSubContains @193:10...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for subSubContains @193:10...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for subSubContains @193:10...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for subSubContains @193:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subSubContains @193:10...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subSubContains @193:10...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subSubContains @193:10...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subSubContains @193:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for subSubContains @193:10...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for subSubContains @193:10...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for subSubContains @193:10...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for subSubContains @193:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subSubContains @193:10...
[[34m  Info  [0m] Cache miss: 'precond. (call ==|[Boolean]({ ...)' VC for subSubContains @193:10...
[[34m  Info  [0m]  - Now solving 'precond. (call ==|[Boolean]({ ...)' VC for subSubContains @193:10...
[[34m  Info  [0m]  - Result for 'precond. (call ==|[Boolean]({ ...)' VC for subSubContains @193:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, set2))' VC for subSubContains @193:10...
[[34m  Info  [0m] Cache miss: 'precond. (call --[T](set1, set2))' VC for subSubContains @193:10...
[[34m  Info  [0m]  - Now solving 'precond. (call --[T](set1, set2))' VC for subSubContains @193:10...
[[34m  Info  [0m]  - Result for 'precond. (call --[T](set1, set2))' VC for subSubContains @193:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subSubContains @194:10...
[[34m  Info  [0m] Cache miss: 'precond. (call ==|[Boolean]({ ...)' VC for subSubContains @194:10...
[[34m  Info  [0m]  - Now solving 'precond. (call ==|[Boolean]({ ...)' VC for subSubContains @194:10...
[[34m  Info  [0m]  - Result for 'precond. (call ==|[Boolean]({ ...)' VC for subSubContains @194:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](--[T](set1, ys), y))' VC for subSubContains @194:10...
[[34m  Info  [0m] Cache miss: 'precond. (call -[T](--[T](set1, ys), y))' VC for subSubContains @194:10...
[[34m  Info  [0m]  - Now solving 'precond. (call -[T](--[T](set1, ys), y))' VC for subSubContains @194:10...
[[34m  Info  [0m]  - Result for 'precond. (call -[T](--[T](set1, ys), y))' VC for subSubContains @194:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, ys))' VC for subSubContains @194:11...
[[34m  Info  [0m] Cache miss: 'precond. (call --[T](set1, ys))' VC for subSubContains @194:11...
[[34m  Info  [0m]  - Now solving 'precond. (call --[T](set1, ys))' VC for subSubContains @194:11...
[[34m  Info  [0m]  - Result for 'precond. (call --[T](set1, ys))' VC for subSubContains @194:11:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call subContains[T](--[T](set1, ys), y, z))' VC for subSubContains @194:44...
[[34m  Info  [0m] Cache miss: 'precond. (call subContains[T](--[T](set1, ys), y, z))' VC for subSubContains @194:44...
[[34m  Info  [0m]  - Now solving 'precond. (call subContains[T](--[T](set1, ys), y, z))' VC for subSubContains @194:44...
[[34m  Info  [0m]  - Result for 'precond. (call subContains[T](--[T](set1, ys), y, z))' VC for subSubContains @194:44:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, ys))' VC for subSubContains @194:56...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, ys))' VC for subSubContains @194:56...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subSubContains @195:10...
[[34m  Info  [0m] Cache miss: 'precond. (call ==|[Boolean]({ ...)' VC for subSubContains @195:10...
[[34m  Info  [0m]  - Now solving 'precond. (call ==|[Boolean]({ ...)' VC for subSubContains @195:10...
[[34m  Info  [0m]  - Result for 'precond. (call ==|[Boolean]({ ...)' VC for subSubContains @195:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](set1, ys))' VC for subSubContains @195:10...
[[34m  Info  [0m] Cache hit: 'precond. (call --[T](set1, ys))' VC for subSubContains @195:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call subSubContains[T](set1, ys, z))' VC for subSubContains @195:44...
[[34m  Info  [0m] Cache miss: 'precond. (call subSubContains[T](set1, ys, z))' VC for subSubContains @195:44...
[[34m  Info  [0m]  - Now solving 'precond. (call subSubContains[T](set1, ys, z))' VC for subSubContains @195:44...
[[34m  Info  [0m]  - Result for 'precond. (call subSubContains[T](set1, ys, z))' VC for subSubContains @195:44:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for subSubContains @185:70...
[[34m  Info  [0m] Cache miss: 'postcondition' VC for subSubContains @185:70...
[[34m  Info  [0m]  - Now solving 'postcondition' VC for subSubContains @185:70...
[[34m  Info  [0m]  - Result for 'postcondition' VC for subSubContains @185:70:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for subSubContains @190:5...
[[34m  Info  [0m] Cache miss: 'match exhaustiveness' VC for subSubContains @190:5...
[[34m  Info  [0m]  - Now solving 'match exhaustiveness' VC for subSubContains @190:5...
[[34m  Info  [0m]  - Result for 'match exhaustiveness' VC for subSubContains @190:5:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call subInv[T](--[T](thiss, ys), y))' VC for -- @82:16...
[[34m  Info  [0m] Cache miss: 'precond. (call subInv[T](--[T](thiss, ys), y))' VC for -- @82:16...
[[34m  Info  [0m]  - Now solving 'precond. (call subInv[T](--[T](thiss, ys), y))' VC for -- @82:16...
[[34m  Info  [0m]  - Result for 'precond. (call subInv[T](--[T](thiss, ys), y))' VC for -- @82:16:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](thiss, ys))' VC for -- @82:23...
[[34m  Info  [0m] Cache miss: 'precond. (call --[T](thiss, ys))' VC for -- @82:23...
[[34m  Info  [0m]  - Now solving 'precond. (call --[T](thiss, ys))' VC for -- @82:23...
[[34m  Info  [0m]  - Result for 'precond. (call --[T](thiss, ys))' VC for -- @82:23:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](--[T](thiss, ys), y))' VC for -- @85:9...
[[34m  Info  [0m] Cache miss: 'precond. (call -[T](--[T](thiss, ys), y))' VC for -- @85:9...
[[34m  Info  [0m]  - Now solving 'precond. (call -[T](--[T](thiss, ys), y))' VC for -- @85:9...
[[34m  Info  [0m]  - Result for 'precond. (call -[T](--[T](thiss, ys), y))' VC for -- @85:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call --[T](thiss, ys))' VC for -- @85:10...
[[34m  Info  [0m] Cache miss: 'precond. (call --[T](thiss, ys))' VC for -- @85:10...
[[34m  Info  [0m]  - Now solving 'precond. (call --[T](thiss, ys))' VC for -- @85:10...
[[34m  Info  [0m]  - Result for 'precond. (call --[T](thiss, ys))' VC for -- @85:10:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for -- @81:25...
[[34m  Info  [0m] Cache miss: 'body assertion' VC for -- @81:25...
[[34m  Info  [0m]  - Now solving 'body assertion' VC for -- @81:25...
[[34m  Info  [0m]  - Result for 'body assertion' VC for -- @81:25:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for -- @83:9...
[[34m  Info  [0m] Cache miss: 'body assertion' VC for -- @83:9...
[[34m  Info  [0m]  - Now solving 'body assertion' VC for -- @83:9...
[[34m  Info  [0m]  - Result for 'body assertion' VC for -- @83:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for -- @87:16...
[[34m  Info  [0m] Cache miss: 'postcondition' VC for -- @87:16...
[[34m  Info  [0m]  - Now solving 'postcondition' VC for -- @87:16...
[[34m  Info  [0m]  - Result for 'postcondition' VC for -- @87:16:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'body assertion: Measure not guaranteed positive' VC for -- @79:5...
[[34m  Info  [0m] Cache miss: 'body assertion: Measure not guaranteed positive' VC for -- @79:5...
[[34m  Info  [0m]  - Now solving 'body assertion: Measure not guaranteed positive' VC for -- @79:5...
[[34m  Info  [0m]  - Result for 'body assertion: Measure not guaranteed positive' VC for -- @79:5:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for -- @79:5...
[[34m  Info  [0m] Cache miss: 'match exhaustiveness' VC for -- @79:5...
[[34m  Info  [0m]  - Now solving 'match exhaustiveness' VC for -- @79:5...
[[34m  Info  [0m]  - Result for 'match exhaustiveness' VC for -- @79:5:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](set, y))' VC for subInv @163:12...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](set, y))' VC for subInv @163:12...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for subInv @170:9...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for subInv @170:9...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for subInv @170:9...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for subInv @170:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subInv @170:9...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subInv @170:9...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subInv @170:9...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subInv @170:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subInv @170:9...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subInv @170:9...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subInv @170:9...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for subInv @170:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for subInv @170:9...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for subInv @170:9...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for subInv @170:9...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for subInv @170:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subInv @170:9...
[[34m  Info  [0m] Cache miss: 'precond. (call ==|[Boolean]({ ...)' VC for subInv @170:9...
[[34m  Info  [0m]  - Now solving 'precond. (call ==|[Boolean]({ ...)' VC for subInv @170:9...
[[34m  Info  [0m]  - Result for 'precond. (call ==|[Boolean]({ ...)' VC for subInv @170:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](set, y))' VC for subInv @170:16...
[[34m  Info  [0m] Cache miss: 'precond. (call -[T](set, y))' VC for subInv @170:16...
[[34m  Info  [0m]  - Now solving 'precond. (call -[T](set, y))' VC for subInv @170:16...
[[34m  Info  [0m]  - Result for 'precond. (call -[T](set, y))' VC for subInv @170:16:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subInv @171:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for subInv @171:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](xs, y))' VC for subInv @171:25...
[[34m  Info  [0m] Cache miss: 'precond. (call -[T](xs, y))' VC for subInv @171:25...
[[34m  Info  [0m]  - Now solving 'precond. (call -[T](xs, y))' VC for subInv @171:25...
[[34m  Info  [0m]  - Result for 'precond. (call -[T](xs, y))' VC for subInv @171:25:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subInv @172:9...
[[34m  Info  [0m] Cache miss: 'precond. (call ==|[Boolean]({ ...)' VC for subInv @172:9...
[[34m  Info  [0m]  - Now solving 'precond. (call ==|[Boolean]({ ...)' VC for subInv @172:9...
[[34m  Info  [0m]  - Result for 'precond. (call ==|[Boolean]({ ...)' VC for subInv @172:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](xs, y))' VC for subInv @172:12...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](xs, y))' VC for subInv @172:12...
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](xs, y))' VC for subInv @172:42...
[[34m  Info  [0m] Cache miss: 'precond. (call -[T](xs, y))' VC for subInv @172:42...
[[34m  Info  [0m]  - Now solving 'precond. (call -[T](xs, y))' VC for subInv @172:42...
[[34m  Info  [0m]  - Result for 'precond. (call -[T](xs, y))' VC for subInv @172:42:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call subInv[T](xs, y))' VC for subInv @172:55...
[[34m  Info  [0m] Cache hit: 'precond. (call subInv[T](xs, y))' VC for subInv @172:55...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for subInv @173:9...
[[34m  Info  [0m] Cache miss: 'precond. (call ==|[Boolean]({ ...)' VC for subInv @173:9...
[[34m  Info  [0m]  - Now solving 'precond. (call ==|[Boolean]({ ...)' VC for subInv @173:9...
[[34m  Info  [0m]  - Result for 'precond. (call ==|[Boolean]({ ...)' VC for subInv @173:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](xs, y))' VC for subInv @173:11...
[[34m  Info  [0m] Cache hit: 'precond. (call -[T](xs, y))' VC for subInv @173:11...
[[34m  Info  [0m]  - Checking cache: 'precond. (call subContains[T](xs, y, x))' VC for subInv @173:55...
[[34m  Info  [0m] Cache miss: 'precond. (call subContains[T](xs, y, x))' VC for subInv @173:55...
[[34m  Info  [0m]  - Now solving 'precond. (call subContains[T](xs, y, x))' VC for subInv @173:55...
[[34m  Info  [0m]  - Result for 'precond. (call subContains[T](xs, y, x))' VC for subInv @173:55:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for subInv @161:47...
[[34m  Info  [0m] Cache miss: 'postcondition' VC for subInv @161:47...
[[34m  Info  [0m]  - Now solving 'postcondition' VC for subInv @161:47...
[[34m  Info  [0m]  - Result for 'postcondition' VC for subInv @161:47:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for subInv @165:5...
[[34m  Info  [0m] Cache miss: 'match exhaustiveness' VC for subInv @165:5...
[[34m  Info  [0m]  - Now solving 'match exhaustiveness' VC for subInv @165:5...
[[34m  Info  [0m]  - Result for 'match exhaustiveness' VC for subInv @165:5:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](set, y), ind. on (set: Set[T] : SCons))' VC for subContains @158:6...
[[34m  Info  [0m] Cache miss: 'precond. (call -[T](set, y), ind. on (set: Set[T] : SCons))' VC for subContains @158:6...
[[34m  Info  [0m]  - Now solving 'precond. (call -[T](set, y), ind. on (set: Set[T] : SCons))' VC for subContains @158:6...
[[34m  Info  [0m]  - Result for 'precond. (call -[T](set, y), ind. on (set: Set[T] : SCons))' VC for subContains @158:6:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](set, y), ind. on (set: Set[T] : SNil))' VC for subContains @158:6...
[[34m  Info  [0m] Cache miss: 'precond. (call -[T](set, y), ind. on (set: Set[T] : SNil))' VC for subContains @158:6...
[[34m  Info  [0m]  - Now solving 'precond. (call -[T](set, y), ind. on (set: Set[T] : SNil))' VC for subContains @158:6...
[[34m  Info  [0m]  - Result for 'precond. (call -[T](set, y), ind. on (set: Set[T] : SNil))' VC for subContains @158:6:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'postcond. (ind. on set: Set[T] / SCons)' VC for subContains @156:3...
[[34m  Info  [0m] Cache miss: 'postcond. (ind. on set: Set[T] / SCons)' VC for subContains @156:3...
[[34m  Info  [0m]  - Now solving 'postcond. (ind. on set: Set[T] / SCons)' VC for subContains @156:3...
[[34m  Info  [0m]  - Result for 'postcond. (ind. on set: Set[T] / SCons)' VC for subContains @156:3:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'postcond. (ind. on set: Set[T] / SNil)' VC for subContains @156:3...
[[34m  Info  [0m] Cache miss: 'postcond. (ind. on set: Set[T] / SNil)' VC for subContains @156:3...
[[34m  Info  [0m]  - Now solving 'postcond. (ind. on set: Set[T] / SNil)' VC for subContains @156:3...
[[34m  Info  [0m]  - Result for 'postcond. (ind. on set: Set[T] / SNil)' VC for subContains @156:3:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](set, x), ind. on (set: Set[T] : SCons))' VC for subSize @182:6...
[[34m  Info  [0m] Cache miss: 'precond. (call -[T](set, x), ind. on (set: Set[T] : SCons))' VC for subSize @182:6...
[[34m  Info  [0m]  - Now solving 'precond. (call -[T](set, x), ind. on (set: Set[T] : SCons))' VC for subSize @182:6...
[[34m  Info  [0m]  - Result for 'precond. (call -[T](set, x), ind. on (set: Set[T] : SCons))' VC for subSize @182:6:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](set, x), ind. on (set: Set[T] : SNil))' VC for subSize @182:6...
[[34m  Info  [0m] Cache miss: 'precond. (call -[T](set, x), ind. on (set: Set[T] : SNil))' VC for subSize @182:6...
[[34m  Info  [0m]  - Now solving 'precond. (call -[T](set, x), ind. on (set: Set[T] : SNil))' VC for subSize @182:6...
[[34m  Info  [0m]  - Result for 'precond. (call -[T](set, x), ind. on (set: Set[T] : SNil))' VC for subSize @182:6:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'postcond. (ind. on set: Set[T] / SCons)' VC for subSize @180:3...
[[34m  Info  [0m] Cache miss: 'postcond. (ind. on set: Set[T] / SCons)' VC for subSize @180:3...
[[34m  Info  [0m]  - Now solving 'postcond. (ind. on set: Set[T] / SCons)' VC for subSize @180:3...
[[34m  Info  [0m]  - Result for 'postcond. (ind. on set: Set[T] / SCons)' VC for subSize @180:3:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'postcond. (ind. on set: Set[T] / SNil)' VC for subSize @180:3...
[[34m  Info  [0m] Cache miss: 'postcond. (ind. on set: Set[T] / SNil)' VC for subSize @180:3...
[[34m  Info  [0m]  - Now solving 'postcond. (ind. on set: Set[T] / SNil)' VC for subSize @180:3...
[[34m  Info  [0m]  - Result for 'postcond. (ind. on set: Set[T] / SNil)' VC for subSize @180:3:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for size @19:16...
[[34m  Info  [0m] Cache miss: 'postcondition' VC for size @19:16...
[[34m  Info  [0m]  - Now solving 'postcondition' VC for size @19:16...
[[34m  Info  [0m]  - Result for 'postcondition' VC for size @19:16:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for size @15:5...
[[34m  Info  [0m] Cache miss: 'match exhaustiveness' VC for size @15:5...
[[34m  Info  [0m]  - Now solving 'match exhaustiveness' VC for size @15:5...
[[34m  Info  [0m]  - Result for 'match exhaustiveness' VC for size @15:5:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](thiss, (x$3: T) => { ...)' VC for subsetOf @33:39...
[[34m  Info  [0m] Cache miss: 'precond. (call forall[T](thiss, (x$3: T) => { ...)' VC for subsetOf @33:39...
[[34m  Info  [0m]  - Now solving 'precond. (call forall[T](thiss, (x$3: T) => { ...)' VC for subsetOf @33:39...
[[34m  Info  [0m]  - Result for 'precond. (call forall[T](thiss, (x$3: T) => { ...)' VC for subsetOf @33:39:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call forall[T](xs, p))' VC for forall @23:34...
[[34m  Info  [0m] Cache miss: 'precond. (call forall[T](xs, p))' VC for forall @23:34...
[[34m  Info  [0m]  - Now solving 'precond. (call forall[T](xs, p))' VC for forall @23:34...
[[34m  Info  [0m]  - Result for 'precond. (call forall[T](xs, p))' VC for forall @23:34:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'lambda precondition' VC for forall @21:14...
[[34m  Info  [0m] Cache hit: 'lambda precondition' VC for forall @21:14...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for forall @21:42...
[[34m  Info  [0m] Cache miss: 'match exhaustiveness' VC for forall @21:42...
[[34m  Info  [0m]  - Now solving 'match exhaustiveness' VC for forall @21:42...
[[34m  Info  [0m]  - Result for 'match exhaustiveness' VC for forall @21:42:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'lambda precondition' VC for forall @23:26...
[[34m  Info  [0m] Cache miss: 'lambda precondition' VC for forall @23:26...
[[34m  Info  [0m]  - Now solving 'lambda precondition' VC for forall @23:26...
[[34m  Info  [0m]  - Result for 'lambda precondition' VC for forall @23:26:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call -[T](xs, y))' VC for - @71:23...
[[34m  Info  [0m] Cache miss: 'precond. (call -[T](xs, y))' VC for - @71:23...
[[34m  Info  [0m]  - Now solving 'precond. (call -[T](xs, y))' VC for - @71:23...
[[34m  Info  [0m]  - Result for 'precond. (call -[T](xs, y))' VC for - @71:23:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for - @67:5...
[[34m  Info  [0m] Cache miss: 'match exhaustiveness' VC for - @67:5...
[[34m  Info  [0m]  - Now solving 'match exhaustiveness' VC for - @67:5...
[[34m  Info  [0m]  - Result for 'match exhaustiveness' VC for - @67:5:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call +[T](xs, y))' VC for + @45:20...
[[34m  Info  [0m] Cache hit: 'precond. (call +[T](xs, y))' VC for + @45:20...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for + @38:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for + @38:5...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for setInv @97:41...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for setInv @97:41...
[[34m  Info  [0m]  - Checking cache: 'precond. (call exists[T](thiss, (x$2: T) => { ...)' VC for contains @31:33...
[[34m  Info  [0m] Cache hit: 'precond. (call exists[T](thiss, (x$2: T) => { ...)' VC for contains @31:33...
[[34m  Info  [0m]  - Checking cache: 'precond. (call exists[T](xs, p))' VC for exists @28:34...
[[34m  Info  [0m] Cache miss: 'precond. (call exists[T](xs, p))' VC for exists @28:34...
[[34m  Info  [0m]  - Now solving 'precond. (call exists[T](xs, p))' VC for exists @28:34...
[[34m  Info  [0m]  - Result for 'precond. (call exists[T](xs, p))' VC for exists @28:34:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'lambda precondition' VC for exists @26:14...
[[34m  Info  [0m] Cache hit: 'lambda precondition' VC for exists @26:14...
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for exists @26:42...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for exists @26:42...
[[34m  Info  [0m]  - Checking cache: 'lambda precondition' VC for exists @28:26...
[[34m  Info  [0m] Cache hit: 'lambda precondition' VC for exists @28:26...
[[34m  Info  [0m] Result for size
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for forall
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for exists
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for setInv
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for +
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for setInv
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for addInv
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for ++
[[34m  Info  [0m]  => CLEARED (Decreases Processor)
[[34m  Info  [0m] Result for setInv
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for -
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for setInv
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for subInv
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for --
[[34m  Info  [0m]  => CLEARED (Decreases Processor)
[[34m  Info  [0m] Result for unionSubset
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for subSubContains
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m] Result for subSubSize
[[34m  Info  [0m]  => CLEARED (Relation Processor comparing sum of argument sizes)
[[34m  Info  [0m]   ┌──────────────────────┐
[[34m  Info  [0m] ╔═╡ [32mverification summary[0m ╞══════════════════════════════════════════════════════════╗
[[34m  Info  [0m] ║ └──────────────────────┘                                                          ║
[[34m  Info  [0m] ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
[[34m  Info  [0m] ║ [32mtotal: 141  valid: 141  (27 from cache) invalid: 0    unknown: 0    time:  29.165[0m ║
[[34m  Info  [0m] ╚═══════════════════════════════════════════════════════════════════════════════════╝
[[34m  Info  [0m]   ┌─────────────────────┐
[[34m  Info  [0m] ╔═╡ [32mtermination summary[0m ╞══════════════════════════════════════════════════════════╗
[[34m  Info  [0m] ║ └─────────────────────┘                                                          ║
[[34m  Info  [0m] ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
[[34m  Info  [0m] ║ [32mtotal: 20   valid: 20   (0 from cache) invalid: 0    unknown: 0    time:   5.251[0m ║
[[34m  Info  [0m] ╚══════════════════════════════════════════════════════════════════════════════════╝
[[34m  Info  [0m] Cycle took 42563 ms
[[34m  Info  [0m] 
[[34m  Info  [0m] 
[[34m  Info  [0m] Waiting for source changes...
[[34m  Info  [0m] 
[[34m  Info  [0m] 
