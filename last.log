[[33mWarning [0m] Parallelism is disabled.
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @32:49...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @32:49...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @35:5...
[[34m  Info  [0m] Cache hit: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @35:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Set[State], Set[State]](|[Set[State],  ...)' VC for lemma @41:9...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Set[State], Set[State]](|[Set[State],  ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Set[State], Set[State]](|[Set[State],  ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Result for 'precond. (call |[Set[State], Set[State]](|[Set[State],  ...)' VC for lemma @41:9:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Set[State], Set[State], Set[State]](|[ ...)' VC for lemma @41:9...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Set[State], Set[State], Set[State]](|[ ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Set[State], Set[State], Set[State]](|[ ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Result for 'precond. (call |[Set[State], Set[State], Set[State]](|[ ...)' VC for lemma @41:9:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Set[State], Set[State], Set[State]](== ...)' VC for lemma @41:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Set[State], Set[State], Set[State]](== ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Set[State]]({ ...)' VC for lemma @41:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Set[State]]({ ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @41:9...
[[34m  Info  [0m] Cache hit: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @41:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Set[State]]({ ...)' VC for lemma @42:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Set[State]]({ ...)' VC for lemma @42:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @42:9...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @42:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @42:36...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @42:36...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Set[State]]({ ...)' VC for lemma @43:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Set[State]]({ ...)' VC for lemma @43:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosureIdem[State, Sym](nfa, step))' VC for lemma @49:16...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosureIdem[State, Sym](nfa, step))' VC for lemma @49:16...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosed[State, Sym](nfa, epsClosure[St ...)' VC for lemma @50:16...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosed[State, Sym](nfa, epsClosure[St ...)' VC for lemma @50:16...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @50:30...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @50:30...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Set[State], Set[State]](==|[Set[State] ...)' VC for lemma @52:9...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Set[State], Set[State]](==|[Set[State] ...)' VC for lemma @52:9...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Set[State], Set[State]](==|[Set[State] ...)' VC for lemma @52:9...
[[34m  Info  [0m]  - Result for 'precond. (call |[Set[State], Set[State]](==|[Set[State] ...)' VC for lemma @52:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Set[State]]({ ...)' VC for lemma @52:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Set[State]]({ ...)' VC for lemma @52:9...
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for lemma @49:9...
[[34m  Info  [0m] Cache hit: 'body assertion' VC for lemma @49:9...
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for lemma @50:9...
[[34m  Info  [0m] Cache hit: 'body assertion' VC for lemma @50:9...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for lemma @31:53...
[[34m  Info  [0m] Cache miss: 'postcondition' VC for lemma @31:53...
[[34m  Info  [0m]  - Now solving 'postcondition' VC for lemma @31:53...
[[34m  Info  [0m]  - Result for 'postcondition' VC for lemma @31:53:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for lemma @39:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for lemma @39:5...
[[34m  Info  [0m]  - Checking cache: 'lambda precondition' VC for lemma @53:17...
[[34m  Info  [0m] Cache hit: 'lambda precondition' VC for lemma @53:17...
[[34m  Info  [0m]   ┌──────────────────────┐
[[34m  Info  [0m] ╔═╡ [31mverification summary[0m ╞══════════════════════════════════════════════════════════════════════════════════════════════╗
[[34m  Info  [0m] ║ └──────────────────────┘                                                                                              ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mpostcondition[0m                                                 [33mtimeout[0m  [33mnativez3[0m  [33mAutomaton.scala:31:53[0m  [33m15.736[0m ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call |[Set[State], Set[State], Set[State]](|[ ...)[0m  [33mtimeout[0m  [33mnativez3[0m  [33mAutomaton.scala:41:9[0m   [33m15.950[0m ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call |[Set[State], Set[State]](|[Set[State],  ...)[0m  [33mtimeout[0m  [33mnativez3[0m  [33mAutomaton.scala:41:9[0m   [33m16.969[0m ║
[[34m  Info  [0m] ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
[[34m  Info  [0m] ║ [31mtotal: 20   valid: 17   (16 from cache) invalid: 0    unknown: 3    time:  50.002[0m                                     ║
[[34m  Info  [0m] ╚═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
[[34m  Info  [0m] Cycle took 57333 ms
[[34m  Info  [0m] 
[[34m  Info  [0m] 
[[34m  Info  [0m] Waiting for source changes...
[[34m  Info  [0m] 
[[34m  Info  [0m] 
[[34m  Info  [0m] Detecting some file modifications...: /Users/rodamber/Workspace/LARA/automaton/Automaton.scala
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @32:49...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @32:49...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @35:5...
[[34m  Info  [0m] Cache hit: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @35:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Set[State], Set[State]](|[Set[State],  ...)' VC for lemma @41:9...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Set[State], Set[State]](|[Set[State],  ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Set[State], Set[State]](|[Set[State],  ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Result for 'precond. (call |[Set[State], Set[State]](|[Set[State],  ...)' VC for lemma @41:9:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Set[State], Set[State], Set[State]](|[ ...)' VC for lemma @41:9...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Set[State], Set[State], Set[State]](|[ ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Set[State], Set[State], Set[State]](|[ ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Result for 'precond. (call |[Set[State], Set[State], Set[State]](|[ ...)' VC for lemma @41:9:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Set[State], Set[State], Set[State]](== ...)' VC for lemma @41:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Set[State], Set[State], Set[State]](== ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Set[State]]({ ...)' VC for lemma @41:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Set[State]]({ ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @41:9...
[[34m  Info  [0m] Cache hit: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @41:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Set[State]]({ ...)' VC for lemma @42:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Set[State]]({ ...)' VC for lemma @42:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @42:9...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @42:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @42:36...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @42:36...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Set[State]]({ ...)' VC for lemma @43:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Set[State]]({ ...)' VC for lemma @43:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosureIdem[State, Sym](nfa, step))' VC for lemma @49:16...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosureIdem[State, Sym](nfa, step))' VC for lemma @49:16...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosed[State, Sym](nfa, epsClosure[St ...)' VC for lemma @50:16...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosed[State, Sym](nfa, epsClosure[St ...)' VC for lemma @50:16...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @50:30...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @50:30...
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for lemma @49:9...
[[34m  Info  [0m] Cache hit: 'body assertion' VC for lemma @49:9...
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for lemma @50:9...
[[34m  Info  [0m] Cache hit: 'body assertion' VC for lemma @50:9...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for lemma @31:53...
[[34m  Info  [0m] Cache miss: 'postcondition' VC for lemma @31:53...
[[34m  Info  [0m]  - Now solving 'postcondition' VC for lemma @31:53...
[[34m  Info  [0m]  - Result for 'postcondition' VC for lemma @31:53:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for lemma @39:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for lemma @39:5...
[[34m  Info  [0m]   ┌──────────────────────┐
[[34m  Info  [0m] ╔═╡ [31mverification summary[0m ╞══════════════════════════════════════════════════════════════════════════════════════════════╗
[[34m  Info  [0m] ║ └──────────────────────┘                                                                                              ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mpostcondition[0m                                                 [33mtimeout[0m  [33mnativez3[0m  [33mAutomaton.scala:31:53[0m  [33m15.715[0m ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call |[Set[State], Set[State], Set[State]](|[ ...)[0m  [33mtimeout[0m  [33mnativez3[0m  [33mAutomaton.scala:41:9[0m   [33m16.431[0m ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call |[Set[State], Set[State]](|[Set[State],  ...)[0m  [33mtimeout[0m  [33mnativez3[0m  [33mAutomaton.scala:41:9[0m   [33m16.055[0m ║
[[34m  Info  [0m] ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
[[34m  Info  [0m] ║ [31mtotal: 17   valid: 14   (14 from cache) invalid: 0    unknown: 3    time:  48.881[0m                                     ║
[[34m  Info  [0m] ╚═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
[[34m  Info  [0m] Cycle took 51318 ms
[[34m  Info  [0m] 
[[34m  Info  [0m] 
[[34m  Info  [0m] Waiting for source changes...
[[34m  Info  [0m] 
[[34m  Info  [0m] 
[[34m  Info  [0m] Detecting some file modifications...: /Users/rodamber/Workspace/LARA/automaton/Automaton.scala
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @32:49...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @32:49...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @35:5...
[[34m  Info  [0m] Cache hit: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @35:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Set[State], Set[State]](==|[Set[State] ...)' VC for lemma @41:9...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Set[State], Set[State]](==|[Set[State] ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Set[State], Set[State]](==|[Set[State] ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Result for 'precond. (call |[Set[State], Set[State]](==|[Set[State] ...)' VC for lemma @41:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Set[State]]({ ...)' VC for lemma @41:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Set[State]]({ ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @41:9...
[[34m  Info  [0m] Cache hit: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @41:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @42:9...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @42:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosureIdem[State, Sym](nfa, step))' VC for lemma @49:16...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosureIdem[State, Sym](nfa, step))' VC for lemma @49:16...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosed[State, Sym](nfa, epsClosure[St ...)' VC for lemma @50:16...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosed[State, Sym](nfa, epsClosure[St ...)' VC for lemma @50:16...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @50:30...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @50:30...
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for lemma @49:9...
[[34m  Info  [0m] Cache hit: 'body assertion' VC for lemma @49:9...
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for lemma @50:9...
[[34m  Info  [0m] Cache hit: 'body assertion' VC for lemma @50:9...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for lemma @31:53...
[[34m  Info  [0m] Cache miss: 'postcondition' VC for lemma @31:53...
[[34m  Info  [0m]  - Now solving 'postcondition' VC for lemma @31:53...
[[34m  Info  [0m]  - Result for 'postcondition' VC for lemma @31:53:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for lemma @39:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for lemma @39:5...
[[34m  Info  [0m]   ┌──────────────────────┐
[[34m  Info  [0m] ╔═╡ [31mverification summary[0m ╞════════════════════════════════════════════════════════════════════╗
[[34m  Info  [0m] ║ └──────────────────────┘                                                                    ║
[[34m  Info  [0m] ║ [33mlemma[0m    [33mpostcondition[0m       [33mtimeout[0m    [33mnativez3[0m     [33mAutomaton.scala:31:53[0m         [33m15.544[0m   ║
[[34m  Info  [0m] ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
[[34m  Info  [0m] ║ [31mtotal: 13   valid: 12   (11 from cache) invalid: 0    unknown: 1    time:  16.476[0m           ║
[[34m  Info  [0m] ╚═════════════════════════════════════════════════════════════════════════════════════════════╝
[[34m  Info  [0m] Cycle took 18517 ms
[[34m  Info  [0m] 
[[34m  Info  [0m] 
[[34m  Info  [0m] Waiting for source changes...
[[34m  Info  [0m] 
[[34m  Info  [0m] 
[[34m  Info  [0m] Detecting some file modifications...: /Users/rodamber/Workspace/LARA/automaton/Automaton.scala
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @32:49...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @32:49...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @35:5...
[[34m  Info  [0m] Cache hit: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @35:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Set[State], Set[State]](|[Set[State],  ...)' VC for lemma @41:9...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Set[State], Set[State]](|[Set[State],  ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Set[State], Set[State]](|[Set[State],  ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Result for 'precond. (call |[Set[State], Set[State]](|[Set[State],  ...)' VC for lemma @41:9:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Set[State], Set[State], Set[State]](== ...)' VC for lemma @41:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Set[State], Set[State], Set[State]](== ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Set[State]]({ ...)' VC for lemma @41:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Set[State]]({ ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @41:9...
[[34m  Info  [0m] Cache hit: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @41:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Set[State]]({ ...)' VC for lemma @42:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Set[State]]({ ...)' VC for lemma @42:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @42:9...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @42:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @42:36...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @42:36...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosureIdem[State, Sym](nfa, step))' VC for lemma @49:16...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosureIdem[State, Sym](nfa, step))' VC for lemma @49:16...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosed[State, Sym](nfa, epsClosure[St ...)' VC for lemma @50:16...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosed[State, Sym](nfa, epsClosure[St ...)' VC for lemma @50:16...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @50:30...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @50:30...
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for lemma @49:9...
[[34m  Info  [0m] Cache hit: 'body assertion' VC for lemma @49:9...
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for lemma @50:9...
[[34m  Info  [0m] Cache hit: 'body assertion' VC for lemma @50:9...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for lemma @31:53...
[[34m  Info  [0m] Cache miss: 'postcondition' VC for lemma @31:53...
[[34m  Info  [0m]  - Now solving 'postcondition' VC for lemma @31:53...
[[34m  Info  [0m]  - Result for 'postcondition' VC for lemma @31:53:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for lemma @39:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for lemma @39:5...
[[34m  Info  [0m]   ┌──────────────────────┐
[[34m  Info  [0m] ╔═╡ [31mverification summary[0m ╞══════════════════════════════════════════════════════════════════════════════════════════════╗
[[34m  Info  [0m] ║ └──────────────────────┘                                                                                              ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mpostcondition[0m                                                 [33mtimeout[0m  [33mnativez3[0m  [33mAutomaton.scala:31:53[0m  [33m15.582[0m ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call |[Set[State], Set[State]](|[Set[State],  ...)[0m  [33mtimeout[0m  [33mnativez3[0m  [33mAutomaton.scala:41:9[0m   [33m15.867[0m ║
[[34m  Info  [0m] ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
[[34m  Info  [0m] ║ [31mtotal: 16   valid: 14   (14 from cache) invalid: 0    unknown: 2    time:  32.169[0m                                     ║
[[34m  Info  [0m] ╚═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
[[34m  Info  [0m] Cycle took 33864 ms
[[34m  Info  [0m] 
[[34m  Info  [0m] 
[[34m  Info  [0m] Waiting for source changes...
[[34m  Info  [0m] 
[[34m  Info  [0m] 
[[34m  Info  [0m] Detecting some file modifications...: /Users/rodamber/Workspace/LARA/automaton/Automaton.scala
[[31m Error  [0m] Automaton.scala:44:63: error: not found: value subsetRefl
                   (dfa.run(states, word) eq dfa.run(states, word))  ==| subsetRefl(dfa.run(states, word)) |
                                                                         [31m^[0m
[[34m  Info  [0m]   ┌──────────────────────┐
[[34m  Info  [0m] ╔═╡ [32mverification summary[0m ╞═════════════════════════════════════════════════════════╗
[[34m  Info  [0m] ║ └──────────────────────┘                                                         ║
[[34m  Info  [0m] ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
[[34m  Info  [0m] ║ [32mtotal: 0    valid: 0    (0 from cache) invalid: 0    unknown: 0    time:   0.000[0m ║
[[34m  Info  [0m] ╚══════════════════════════════════════════════════════════════════════════════════╝
[[34m  Info  [0m] Cycle took 1020 ms
[[34m  Info  [0m] 
[[34m  Info  [0m] 
[[34m  Info  [0m] Waiting for source changes...
[[34m  Info  [0m] 
[[34m  Info  [0m] 
[[34m  Info  [0m] Detecting some file modifications...: /Users/rodamber/Workspace/LARA/automaton/Set.scala
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @32:49...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @32:49...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @35:5...
[[34m  Info  [0m] Cache hit: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @35:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for lemma @41:9...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for lemma @41:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for lemma @41:9...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for lemma @41:9:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for lemma @41:9...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for lemma @41:9:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for lemma @41:9...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for lemma @41:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @41:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @41:10...
[[34m  Info  [0m] Cache hit: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @41:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @42:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @42:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @42:10...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @42:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @42:63...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @42:63...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @43:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @43:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @44:9...
[[34m  Info  [0m] Cache miss: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @44:9...
[[34m  Info  [0m]  - Now solving 'precond. (call ==|[Boolean]({ ...)' VC for lemma @44:9...
[[34m  Info  [0m]  - Result for 'precond. (call ==|[Boolean]({ ...)' VC for lemma @44:9:
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosureIdem[State, Sym](nfa, step))' VC for lemma @50:16...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosureIdem[State, Sym](nfa, step))' VC for lemma @50:16...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosed[State, Sym](nfa, epsClosure[St ...)' VC for lemma @51:16...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosed[State, Sym](nfa, epsClosure[St ...)' VC for lemma @51:16...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @51:30...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @51:30...
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for lemma @50:9...
[[34m  Info  [0m] Cache hit: 'body assertion' VC for lemma @50:9...
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for lemma @51:9...
[[34m  Info  [0m] Cache hit: 'body assertion' VC for lemma @51:9...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for lemma @31:53...
[[34m  Info  [0m] Cache miss: 'postcondition' VC for lemma @31:53...
[[34m  Info  [0m]  - Now solving 'postcondition' VC for lemma @31:53...
[[34m  Info  [0m]  - Result for 'postcondition' VC for lemma @31:53:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for lemma @39:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for lemma @39:5...
[[34m  Info  [0m]   ┌──────────────────────┐
[[34m  Info  [0m] ╔═╡ [31mverification summary[0m ╞══════════════════════════════════════════════════════════════════════════════════════════════╗
[[34m  Info  [0m] ║ └──────────────────────┘                                                                                              ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mpostcondition[0m                                                 [33mtimeout[0m  [33mnativez3[0m  [33mAutomaton.scala:31:53[0m  [33m17.142[0m ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)[0m  [33mtimeout[0m  [33mnativez3[0m  [33mAutomaton.scala:41:9[0m   [33m16.101[0m ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)[0m  [33mtimeout[0m  [33mnativez3[0m  [33mAutomaton.scala:41:9[0m   [33m16.915[0m ║
[[34m  Info  [0m] ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
[[34m  Info  [0m] ║ [31mtotal: 19   valid: 16   (13 from cache) invalid: 0    unknown: 3    time:  52.968[0m                                     ║
[[34m  Info  [0m] ╚═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
[[34m  Info  [0m] Cycle took 54512 ms
[[34m  Info  [0m] 
[[34m  Info  [0m] 
[[34m  Info  [0m] Waiting for source changes...
[[34m  Info  [0m] 
[[34m  Info  [0m] 
[[34m  Info  [0m] Detecting some file modifications...: /Users/rodamber/Workspace/LARA/automaton/Automaton.scala
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @32:49...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @32:49...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @35:5...
[[34m  Info  [0m] Cache hit: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @35:5...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for lemma @41:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean](|[Boolean, Boolean,  ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for lemma @41:9...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for lemma @41:9:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for lemma @41:9...
[[34m  Info  [0m] Cache miss: 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Now solving 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Result for 'precond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)' VC for lemma @41:9:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for lemma @41:9...
[[34m  Info  [0m] Cache hit: 'precond. (call |[Boolean, Boolean, Boolean](==|[Boolean ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @41:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @41:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @41:10...
[[34m  Info  [0m] Cache hit: 'precond. (call run[State, Sym](nfa, states, word))' VC for lemma @41:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @42:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @42:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @42:10...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosure[State, Sym](nfa, states))' VC for lemma @42:10...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @42:63...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosed[State, Sym](nfa, states))' VC for lemma @42:63...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @43:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @43:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @44:9...
[[34m  Info  [0m] Cache hit: 'precond. (call ==|[Boolean]({ ...)' VC for lemma @44:9...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosureIdem[State, Sym](nfa, step))' VC for lemma @50:16...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosureIdem[State, Sym](nfa, step))' VC for lemma @50:16...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosed[State, Sym](nfa, epsClosure[St ...)' VC for lemma @51:16...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosed[State, Sym](nfa, epsClosure[St ...)' VC for lemma @51:16...
[[34m  Info  [0m]  - Checking cache: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @51:30...
[[34m  Info  [0m] Cache hit: 'precond. (call epsClosure[State, Sym](nfa, step))' VC for lemma @51:30...
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for lemma @50:9...
[[34m  Info  [0m] Cache hit: 'body assertion' VC for lemma @50:9...
[[34m  Info  [0m]  - Checking cache: 'body assertion' VC for lemma @51:9...
[[34m  Info  [0m] Cache hit: 'body assertion' VC for lemma @51:9...
[[34m  Info  [0m]  - Checking cache: 'postcondition' VC for lemma @31:53...
[[34m  Info  [0m] Cache miss: 'postcondition' VC for lemma @31:53...
[[34m  Info  [0m]  - Now solving 'postcondition' VC for lemma @31:53...
[[34m  Info  [0m]  - Result for 'postcondition' VC for lemma @31:53:
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Checking cache: 'match exhaustiveness' VC for lemma @39:5...
[[34m  Info  [0m] Cache hit: 'match exhaustiveness' VC for lemma @39:5...
[[34m  Info  [0m]   ┌──────────────────────┐
[[34m  Info  [0m] ╔═╡ [31mverification summary[0m ╞══════════════════════════════════════════════════════════════════════════════════════════════╗
[[34m  Info  [0m] ║ └──────────────────────┘                                                                                              ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mpostcondition[0m                                                 [33mtimeout[0m  [33mnativez3[0m  [33mAutomaton.scala:31:53[0m  [33m15.666[0m ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)[0m  [33mtimeout[0m  [33mnativez3[0m  [33mAutomaton.scala:41:9[0m   [33m16.016[0m ║
[[34m  Info  [0m] ║ [33mlemma[0m  [33mprecond. (call |[Boolean, Boolean, Boolean](|[Boolean,  ...)[0m  [33mtimeout[0m  [33mnativez3[0m  [33mAutomaton.scala:41:9[0m   [33m18.430[0m ║
[[34m  Info  [0m] ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
[[34m  Info  [0m] ║ [31mtotal: 19   valid: 16   (16 from cache) invalid: 0    unknown: 3    time:  50.767[0m                                     ║
[[34m  Info  [0m] ╚═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
[[34m  Info  [0m] Cycle took 52265 ms
[[34m  Info  [0m] 
[[34m  Info  [0m] 
[[34m  Info  [0m] Waiting for source changes...
[[34m  Info  [0m] 
[[34m  Info  [0m] 
